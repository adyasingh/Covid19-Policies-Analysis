<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource inline='true' name='Clipboard_20201020T130802' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20201020T130802' name='Clipboard_20201020T130802leaf'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/My Tableau Repository/Datasources' filename='Clipboard_20201020T130802.txt' />
          </named-connection>
          <named-connection caption='COVID19 Hackathon Dataset' name='textscan.1alhisy10iji8p1h2vpv71v541rj'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='COVID19 Hackathon Dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1alhisy10iji8p1h2vpv71v541rj' name='COVID19 Hackathon Dataset.csv' table='[COVID19 Hackathon Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Continent' ordinal='1' />
            <column datatype='string' name='Countries' ordinal='2' />
            <column datatype='integer' name='New_Cases' ordinal='3' />
            <column datatype='integer' name='New_Deaths' ordinal='4' />
            <column datatype='integer' name='Total_Cases' ordinal='5' />
            <column datatype='integer' name='Total_Deaths' ordinal='6' />
            <column datatype='integer' name='Weekly_Cases' ordinal='7' />
            <column datatype='integer' name='Weekly_Deaths' ordinal='8' />
            <column datatype='real' name='Population_Density' ordinal='9' />
            <column datatype='real' name='Fertility_Rate' ordinal='10' />
            <column datatype='integer' name='GDP_PPP' ordinal='11' />
            <column datatype='real' name='Corruption' ordinal='12' />
            <column datatype='real' name='Government_Effectiveness' ordinal='13' />
            <column datatype='real' name='Political_Stability' ordinal='14' />
            <column datatype='real' name='Rule_of_Law' ordinal='15' />
            <column datatype='real' name='Government_Healthcare_Spend' ordinal='16' />
            <column datatype='real' name='Urban_Population' ordinal='17' />
            <column datatype='real' name='Smoking_Prevalence' ordinal='18' />
            <column datatype='integer' name='Tourism' ordinal='19' />
            <column datatype='real' name='Women_In_Parliament' ordinal='20' />
            <column datatype='real' name='Obesity_Rate' ordinal='21' />
            <column datatype='integer' name='RunTot_New_Cases' ordinal='22' />
            <column datatype='integer' name='RunTot_New_Deaths' ordinal='23' />
            <column datatype='string' name='Country' ordinal='24' />
            <column datatype='string' name='Country Code' ordinal='25' />
            <column datatype='integer' name='Year' ordinal='26' />
            <column datatype='real' name='Diabetes Prevelance % of Population 20-79' ordinal='27' />
            <column datatype='integer' name='Labour Force Total' ordinal='28' />
            <column datatype='integer' name='Population' ordinal='29' />
            <column datatype='real' name='Population Aged 65 and above % of Total' ordinal='30' />
            <column datatype='integer' name='Urban Population' ordinal='31' />
            <column datatype='real' name='Death Rate Per 1000 (2017)' ordinal='32' />
            <column datatype='real' name='PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)' ordinal='33' />
            <column datatype='real' name='PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)' ordinal='34' />
            <column datatype='integer' name='Hospital Beds Year' ordinal='35' />
            <column datatype='real' name='Hospital Beds Per 1000 People' ordinal='36' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1alhisy10iji8p1h2vpv71v541rj' name='COVID19 Hackathon Dataset.csv' table='[COVID19 Hackathon Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Continent' ordinal='1' />
            <column datatype='string' name='Countries' ordinal='2' />
            <column datatype='integer' name='New_Cases' ordinal='3' />
            <column datatype='integer' name='New_Deaths' ordinal='4' />
            <column datatype='integer' name='Total_Cases' ordinal='5' />
            <column datatype='integer' name='Total_Deaths' ordinal='6' />
            <column datatype='integer' name='Weekly_Cases' ordinal='7' />
            <column datatype='integer' name='Weekly_Deaths' ordinal='8' />
            <column datatype='real' name='Population_Density' ordinal='9' />
            <column datatype='real' name='Fertility_Rate' ordinal='10' />
            <column datatype='integer' name='GDP_PPP' ordinal='11' />
            <column datatype='real' name='Corruption' ordinal='12' />
            <column datatype='real' name='Government_Effectiveness' ordinal='13' />
            <column datatype='real' name='Political_Stability' ordinal='14' />
            <column datatype='real' name='Rule_of_Law' ordinal='15' />
            <column datatype='real' name='Government_Healthcare_Spend' ordinal='16' />
            <column datatype='real' name='Urban_Population' ordinal='17' />
            <column datatype='real' name='Smoking_Prevalence' ordinal='18' />
            <column datatype='integer' name='Tourism' ordinal='19' />
            <column datatype='real' name='Women_In_Parliament' ordinal='20' />
            <column datatype='real' name='Obesity_Rate' ordinal='21' />
            <column datatype='integer' name='RunTot_New_Cases' ordinal='22' />
            <column datatype='integer' name='RunTot_New_Deaths' ordinal='23' />
            <column datatype='string' name='Country' ordinal='24' />
            <column datatype='string' name='Country Code' ordinal='25' />
            <column datatype='integer' name='Year' ordinal='26' />
            <column datatype='real' name='Diabetes Prevelance % of Population 20-79' ordinal='27' />
            <column datatype='integer' name='Labour Force Total' ordinal='28' />
            <column datatype='integer' name='Population' ordinal='29' />
            <column datatype='real' name='Population Aged 65 and above % of Total' ordinal='30' />
            <column datatype='integer' name='Urban Population' ordinal='31' />
            <column datatype='real' name='Death Rate Per 1000 (2017)' ordinal='32' />
            <column datatype='real' name='PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)' ordinal='33' />
            <column datatype='real' name='PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)' ordinal='34' />
            <column datatype='integer' name='Hospital Beds Year' ordinal='35' />
            <column datatype='real' name='Hospital Beds Per 1000 People' ordinal='36' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Countries]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Countries</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>New_Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>New_Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekly_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Weekly_Cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekly_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Weekly_Deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_Density]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Population_Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertility_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fertility_Rate]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Fertility_Rate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_PPP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP_PPP]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>GDP_PPP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corruption]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Corruption</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Effectiveness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Effectiveness]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Government_Effectiveness</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political_Stability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Political_Stability]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Political_Stability</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rule_of_Law</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rule_of_Law]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Rule_of_Law</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Healthcare_Spend</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Healthcare_Spend]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Government_Healthcare_Spend</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban_Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban_Population]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Urban_Population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking_Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking_Prevalence]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Smoking_Prevalence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Tourism</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Women_In_Parliament</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Women_In_Parliament]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Women_In_Parliament</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obesity_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obesity_Rate]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Obesity_Rate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RunTot_New_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RunTot_New_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>RunTot_New_Cases</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RunTot_New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RunTot_New_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>RunTot_New_Deaths</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes Prevelance % of Population 20-79</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes Prevelance % of Population 20-79]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Diabetes Prevelance % of Population 20-79</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labour Force Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Labour Force Total]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Labour Force Total</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Aged 65 and above % of Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Aged 65 and above % of Total]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Population Aged 65 and above % of Total</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban Population]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Urban Population</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate Per 1000 (2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate Per 1000 (2017)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Death Rate Per 1000 (2017)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospital Beds Year]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Hospital Beds Year</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Per 1000 People</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital Beds Per 1000 People]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Hospital Beds Per 1000 People</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Fertility Rate' datatype='real' name='[Fertility_Rate]' role='measure' type='quantitative' />
      <column caption='Gdp Ppp' datatype='integer' name='[GDP_PPP]' role='measure' type='quantitative' />
      <column caption='Government Effectiveness' datatype='real' name='[Government_Effectiveness]' role='measure' type='quantitative' />
      <column caption='Government Healthcare Spend' datatype='real' name='[Government_Healthcare_Spend]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[New_Cases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
      <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
      <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[Population_Density]' role='measure' type='quantitative' />
      <column caption='Rule of Law' datatype='real' name='[Rule_of_Law]' role='measure' type='quantitative' />
      <column caption='RunTot New Cases' datatype='integer' name='[RunTot_New_Cases]' role='measure' type='quantitative' />
      <column caption='RunTot New Deaths' datatype='integer' name='[RunTot_New_Deaths]' role='measure' type='quantitative' />
      <column caption='Smoking Prevalence' datatype='real' name='[Smoking_Prevalence]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <column caption='Urban Population1' datatype='real' name='[Urban_Population]' role='measure' type='quantitative' />
      <column caption='Weekly Cases' datatype='integer' name='[Weekly_Cases]' role='measure' type='quantitative' />
      <column caption='Weekly Deaths' datatype='integer' name='[Weekly_Deaths]' role='measure' type='quantitative' />
      <column caption='Women In Parliament' datatype='real' name='[Women_In_Parliament]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19 Hackathon Dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID19 Hackathon Dataset.csv' id='COVID19 Hackathon Dataset.csv_1C3746DD5C944CE9B2DF01D69757FC0D'>
            <properties context=''>
              <relation connection='textscan.1alhisy10iji8p1h2vpv71v541rj' name='COVID19 Hackathon Dataset.csv' table='[COVID19 Hackathon Dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Continent' ordinal='1' />
                  <column datatype='string' name='Countries' ordinal='2' />
                  <column datatype='integer' name='New_Cases' ordinal='3' />
                  <column datatype='integer' name='New_Deaths' ordinal='4' />
                  <column datatype='integer' name='Total_Cases' ordinal='5' />
                  <column datatype='integer' name='Total_Deaths' ordinal='6' />
                  <column datatype='integer' name='Weekly_Cases' ordinal='7' />
                  <column datatype='integer' name='Weekly_Deaths' ordinal='8' />
                  <column datatype='real' name='Population_Density' ordinal='9' />
                  <column datatype='real' name='Fertility_Rate' ordinal='10' />
                  <column datatype='integer' name='GDP_PPP' ordinal='11' />
                  <column datatype='real' name='Corruption' ordinal='12' />
                  <column datatype='real' name='Government_Effectiveness' ordinal='13' />
                  <column datatype='real' name='Political_Stability' ordinal='14' />
                  <column datatype='real' name='Rule_of_Law' ordinal='15' />
                  <column datatype='real' name='Government_Healthcare_Spend' ordinal='16' />
                  <column datatype='real' name='Urban_Population' ordinal='17' />
                  <column datatype='real' name='Smoking_Prevalence' ordinal='18' />
                  <column datatype='integer' name='Tourism' ordinal='19' />
                  <column datatype='real' name='Women_In_Parliament' ordinal='20' />
                  <column datatype='real' name='Obesity_Rate' ordinal='21' />
                  <column datatype='integer' name='RunTot_New_Cases' ordinal='22' />
                  <column datatype='integer' name='RunTot_New_Deaths' ordinal='23' />
                  <column datatype='string' name='Country' ordinal='24' />
                  <column datatype='string' name='Country Code' ordinal='25' />
                  <column datatype='integer' name='Year' ordinal='26' />
                  <column datatype='real' name='Diabetes Prevelance % of Population 20-79' ordinal='27' />
                  <column datatype='integer' name='Labour Force Total' ordinal='28' />
                  <column datatype='integer' name='Population' ordinal='29' />
                  <column datatype='real' name='Population Aged 65 and above % of Total' ordinal='30' />
                  <column datatype='integer' name='Urban Population' ordinal='31' />
                  <column datatype='real' name='Death Rate Per 1000 (2017)' ordinal='32' />
                  <column datatype='real' name='PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)' ordinal='33' />
                  <column datatype='real' name='PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)' ordinal='34' />
                  <column datatype='integer' name='Hospital Beds Year' ordinal='35' />
                  <column datatype='real' name='Hospital Beds Per 1000 People' ordinal='36' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='govtresponse_latest.csv+ (Multiple Connections)' inline='true' name='federated.1usd3n21bg5sct1ebou9w1bzf9eg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='govtresponse_latest' name='textscan.09cbn1n18kzvje13yzcmn1dlkair'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='govtresponse_latest.csv' password='' server='' />
          </named-connection>
          <named-connection caption='COVID19 Hackathon Dataset' name='textscan.06znm4t023l95p171a638006fkc7'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='COVID19 Hackathon Dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='right' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[govtresponse_latest.csv].[CountryName]' />
                <expression op='[COVID19 Hackathon Dataset.csv].[Country]' />
              </expression>
              <expression op='='>
                <expression op='[govtresponse_latest.csv].[Date]' />
                <expression op='[COVID19 Hackathon Dataset.csv].[Date]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.09cbn1n18kzvje13yzcmn1dlkair' name='govtresponse_latest.csv' table='[govtresponse_latest#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='CountryName' ordinal='0' />
              <column datatype='string' name='CountryCode' ordinal='1' />
              <column datatype='string' name='RegionName' ordinal='2' />
              <column datatype='string' name='RegionCode' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='real' name='C1_School closing' ordinal='5' />
              <column datatype='integer' name='C1_Flag' ordinal='6' />
              <column datatype='real' name='C2_Workplace closing' ordinal='7' />
              <column datatype='integer' name='C2_Flag' ordinal='8' />
              <column datatype='real' name='C3_Cancel public events' ordinal='9' />
              <column datatype='integer' name='C3_Flag' ordinal='10' />
              <column datatype='real' name='C4_Restrictions on gatherings' ordinal='11' />
              <column datatype='integer' name='C4_Flag' ordinal='12' />
              <column datatype='real' name='C5_Close public transport' ordinal='13' />
              <column datatype='integer' name='C5_Flag' ordinal='14' />
              <column datatype='real' name='C6_Stay at home requirements' ordinal='15' />
              <column datatype='integer' name='C6_Flag' ordinal='16' />
              <column datatype='real' name='C7_Restrictions on internal movement' ordinal='17' />
              <column datatype='integer' name='C7_Flag' ordinal='18' />
              <column datatype='real' name='C8_International travel controls' ordinal='19' />
              <column datatype='real' name='E1_Income support' ordinal='20' />
              <column datatype='integer' name='E1_Flag' ordinal='21' />
              <column datatype='real' name='E2_Debt/contract relief' ordinal='22' />
              <column datatype='real' name='E3_Fiscal measures' ordinal='23' />
              <column datatype='real' name='E4_International support' ordinal='24' />
              <column datatype='real' name='H1_Public information campaigns' ordinal='25' />
              <column datatype='integer' name='H1_Flag' ordinal='26' />
              <column datatype='real' name='H2_Testing policy' ordinal='27' />
              <column datatype='real' name='H3_Contact tracing' ordinal='28' />
              <column datatype='real' name='H4_Emergency investment in healthcare' ordinal='29' />
              <column datatype='real' name='H5_Investment in vaccines' ordinal='30' />
              <column datatype='string' name='M1_Wildcard' ordinal='31' />
              <column datatype='integer' name='ConfirmedCases' ordinal='32' />
              <column datatype='integer' name='ConfirmedDeaths' ordinal='33' />
              <column datatype='real' name='StringencyIndex' ordinal='34' />
              <column datatype='real' name='StringencyIndexForDisplay' ordinal='35' />
              <column datatype='real' name='StringencyLegacyIndex' ordinal='36' />
              <column datatype='real' name='StringencyLegacyIndexForDisplay' ordinal='37' />
              <column datatype='real' name='GovernmentResponseIndex' ordinal='38' />
              <column datatype='real' name='GovernmentResponseIndexForDisplay' ordinal='39' />
              <column datatype='real' name='ContainmentHealthIndex' ordinal='40' />
              <column datatype='real' name='ContainmentHealthIndexForDisplay' ordinal='41' />
              <column datatype='real' name='EconomicSupportIndex' ordinal='42' />
              <column datatype='real' name='EconomicSupportIndexForDisplay' ordinal='43' />
            </columns>
          </relation>
          <relation connection='textscan.06znm4t023l95p171a638006fkc7' name='COVID19 Hackathon Dataset.csv' table='[COVID19 Hackathon Dataset#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
              <column datatype='string' name='Countries' ordinal='2' />
              <column datatype='integer' name='New_Cases' ordinal='3' />
              <column datatype='integer' name='New_Deaths' ordinal='4' />
              <column datatype='integer' name='Total_Cases' ordinal='5' />
              <column datatype='integer' name='Total_Deaths' ordinal='6' />
              <column datatype='integer' name='Weekly_Cases' ordinal='7' />
              <column datatype='integer' name='Weekly_Deaths' ordinal='8' />
              <column datatype='real' name='Population_Density' ordinal='9' />
              <column datatype='real' name='Fertility_Rate' ordinal='10' />
              <column datatype='integer' name='GDP_PPP' ordinal='11' />
              <column datatype='real' name='Corruption' ordinal='12' />
              <column datatype='real' name='Government_Effectiveness' ordinal='13' />
              <column datatype='real' name='Political_Stability' ordinal='14' />
              <column datatype='real' name='Rule_of_Law' ordinal='15' />
              <column datatype='real' name='Government_Healthcare_Spend' ordinal='16' />
              <column datatype='real' name='Urban_Population' ordinal='17' />
              <column datatype='real' name='Smoking_Prevalence' ordinal='18' />
              <column datatype='integer' name='Tourism' ordinal='19' />
              <column datatype='real' name='Women_In_Parliament' ordinal='20' />
              <column datatype='real' name='Obesity_Rate' ordinal='21' />
              <column datatype='integer' name='RunTot_New_Cases' ordinal='22' />
              <column datatype='integer' name='RunTot_New_Deaths' ordinal='23' />
              <column datatype='string' name='Country' ordinal='24' />
              <column datatype='string' name='Country Code' ordinal='25' />
              <column datatype='integer' name='Year' ordinal='26' />
              <column datatype='real' name='Diabetes Prevelance % of Population 20-79' ordinal='27' />
              <column datatype='integer' name='Labour Force Total' ordinal='28' />
              <column datatype='integer' name='Population' ordinal='29' />
              <column datatype='real' name='Population Aged 65 and above % of Total' ordinal='30' />
              <column datatype='integer' name='Urban Population' ordinal='31' />
              <column datatype='real' name='Death Rate Per 1000 (2017)' ordinal='32' />
              <column datatype='real' name='PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)' ordinal='33' />
              <column datatype='real' name='PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)' ordinal='34' />
              <column datatype='integer' name='Hospital Beds Year' ordinal='35' />
              <column datatype='real' name='Hospital Beds Per 1000 People' ordinal='36' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='right' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[govtresponse_latest.csv].[CountryName]' />
                <expression op='[COVID19 Hackathon Dataset.csv].[Country]' />
              </expression>
              <expression op='='>
                <expression op='[govtresponse_latest.csv].[Date]' />
                <expression op='[COVID19 Hackathon Dataset.csv].[Date]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.09cbn1n18kzvje13yzcmn1dlkair' name='govtresponse_latest.csv' table='[govtresponse_latest#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='CountryName' ordinal='0' />
              <column datatype='string' name='CountryCode' ordinal='1' />
              <column datatype='string' name='RegionName' ordinal='2' />
              <column datatype='string' name='RegionCode' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='real' name='C1_School closing' ordinal='5' />
              <column datatype='integer' name='C1_Flag' ordinal='6' />
              <column datatype='real' name='C2_Workplace closing' ordinal='7' />
              <column datatype='integer' name='C2_Flag' ordinal='8' />
              <column datatype='real' name='C3_Cancel public events' ordinal='9' />
              <column datatype='integer' name='C3_Flag' ordinal='10' />
              <column datatype='real' name='C4_Restrictions on gatherings' ordinal='11' />
              <column datatype='integer' name='C4_Flag' ordinal='12' />
              <column datatype='real' name='C5_Close public transport' ordinal='13' />
              <column datatype='integer' name='C5_Flag' ordinal='14' />
              <column datatype='real' name='C6_Stay at home requirements' ordinal='15' />
              <column datatype='integer' name='C6_Flag' ordinal='16' />
              <column datatype='real' name='C7_Restrictions on internal movement' ordinal='17' />
              <column datatype='integer' name='C7_Flag' ordinal='18' />
              <column datatype='real' name='C8_International travel controls' ordinal='19' />
              <column datatype='real' name='E1_Income support' ordinal='20' />
              <column datatype='integer' name='E1_Flag' ordinal='21' />
              <column datatype='real' name='E2_Debt/contract relief' ordinal='22' />
              <column datatype='real' name='E3_Fiscal measures' ordinal='23' />
              <column datatype='real' name='E4_International support' ordinal='24' />
              <column datatype='real' name='H1_Public information campaigns' ordinal='25' />
              <column datatype='integer' name='H1_Flag' ordinal='26' />
              <column datatype='real' name='H2_Testing policy' ordinal='27' />
              <column datatype='real' name='H3_Contact tracing' ordinal='28' />
              <column datatype='real' name='H4_Emergency investment in healthcare' ordinal='29' />
              <column datatype='real' name='H5_Investment in vaccines' ordinal='30' />
              <column datatype='string' name='M1_Wildcard' ordinal='31' />
              <column datatype='integer' name='ConfirmedCases' ordinal='32' />
              <column datatype='integer' name='ConfirmedDeaths' ordinal='33' />
              <column datatype='real' name='StringencyIndex' ordinal='34' />
              <column datatype='real' name='StringencyIndexForDisplay' ordinal='35' />
              <column datatype='real' name='StringencyLegacyIndex' ordinal='36' />
              <column datatype='real' name='StringencyLegacyIndexForDisplay' ordinal='37' />
              <column datatype='real' name='GovernmentResponseIndex' ordinal='38' />
              <column datatype='real' name='GovernmentResponseIndexForDisplay' ordinal='39' />
              <column datatype='real' name='ContainmentHealthIndex' ordinal='40' />
              <column datatype='real' name='ContainmentHealthIndexForDisplay' ordinal='41' />
              <column datatype='real' name='EconomicSupportIndex' ordinal='42' />
              <column datatype='real' name='EconomicSupportIndexForDisplay' ordinal='43' />
            </columns>
          </relation>
          <relation connection='textscan.06znm4t023l95p171a638006fkc7' name='COVID19 Hackathon Dataset.csv' table='[COVID19 Hackathon Dataset#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='Continent' ordinal='1' />
              <column datatype='string' name='Countries' ordinal='2' />
              <column datatype='integer' name='New_Cases' ordinal='3' />
              <column datatype='integer' name='New_Deaths' ordinal='4' />
              <column datatype='integer' name='Total_Cases' ordinal='5' />
              <column datatype='integer' name='Total_Deaths' ordinal='6' />
              <column datatype='integer' name='Weekly_Cases' ordinal='7' />
              <column datatype='integer' name='Weekly_Deaths' ordinal='8' />
              <column datatype='real' name='Population_Density' ordinal='9' />
              <column datatype='real' name='Fertility_Rate' ordinal='10' />
              <column datatype='integer' name='GDP_PPP' ordinal='11' />
              <column datatype='real' name='Corruption' ordinal='12' />
              <column datatype='real' name='Government_Effectiveness' ordinal='13' />
              <column datatype='real' name='Political_Stability' ordinal='14' />
              <column datatype='real' name='Rule_of_Law' ordinal='15' />
              <column datatype='real' name='Government_Healthcare_Spend' ordinal='16' />
              <column datatype='real' name='Urban_Population' ordinal='17' />
              <column datatype='real' name='Smoking_Prevalence' ordinal='18' />
              <column datatype='integer' name='Tourism' ordinal='19' />
              <column datatype='real' name='Women_In_Parliament' ordinal='20' />
              <column datatype='real' name='Obesity_Rate' ordinal='21' />
              <column datatype='integer' name='RunTot_New_Cases' ordinal='22' />
              <column datatype='integer' name='RunTot_New_Deaths' ordinal='23' />
              <column datatype='string' name='Country' ordinal='24' />
              <column datatype='string' name='Country Code' ordinal='25' />
              <column datatype='integer' name='Year' ordinal='26' />
              <column datatype='real' name='Diabetes Prevelance % of Population 20-79' ordinal='27' />
              <column datatype='integer' name='Labour Force Total' ordinal='28' />
              <column datatype='integer' name='Population' ordinal='29' />
              <column datatype='real' name='Population Aged 65 and above % of Total' ordinal='30' />
              <column datatype='integer' name='Urban Population' ordinal='31' />
              <column datatype='real' name='Death Rate Per 1000 (2017)' ordinal='32' />
              <column datatype='real' name='PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)' ordinal='33' />
              <column datatype='real' name='PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)' ordinal='34' />
              <column datatype='integer' name='Hospital Beds Year' ordinal='35' />
              <column datatype='real' name='Hospital Beds Per 1000 People' ordinal='36' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[C1_Flag]' value='[govtresponse_latest.csv].[C1_Flag]' />
          <map key='[C1_School closing]' value='[govtresponse_latest.csv].[C1_School closing]' />
          <map key='[C2_Flag]' value='[govtresponse_latest.csv].[C2_Flag]' />
          <map key='[C2_Workplace closing]' value='[govtresponse_latest.csv].[C2_Workplace closing]' />
          <map key='[C3_Cancel public events]' value='[govtresponse_latest.csv].[C3_Cancel public events]' />
          <map key='[C3_Flag]' value='[govtresponse_latest.csv].[C3_Flag]' />
          <map key='[C4_Flag]' value='[govtresponse_latest.csv].[C4_Flag]' />
          <map key='[C4_Restrictions on gatherings]' value='[govtresponse_latest.csv].[C4_Restrictions on gatherings]' />
          <map key='[C5_Close public transport]' value='[govtresponse_latest.csv].[C5_Close public transport]' />
          <map key='[C5_Flag]' value='[govtresponse_latest.csv].[C5_Flag]' />
          <map key='[C6_Flag]' value='[govtresponse_latest.csv].[C6_Flag]' />
          <map key='[C6_Stay at home requirements]' value='[govtresponse_latest.csv].[C6_Stay at home requirements]' />
          <map key='[C7_Flag]' value='[govtresponse_latest.csv].[C7_Flag]' />
          <map key='[C7_Restrictions on internal movement]' value='[govtresponse_latest.csv].[C7_Restrictions on internal movement]' />
          <map key='[C8_International travel controls]' value='[govtresponse_latest.csv].[C8_International travel controls]' />
          <map key='[ConfirmedCases]' value='[govtresponse_latest.csv].[ConfirmedCases]' />
          <map key='[ConfirmedDeaths]' value='[govtresponse_latest.csv].[ConfirmedDeaths]' />
          <map key='[ContainmentHealthIndexForDisplay]' value='[govtresponse_latest.csv].[ContainmentHealthIndexForDisplay]' />
          <map key='[ContainmentHealthIndex]' value='[govtresponse_latest.csv].[ContainmentHealthIndex]' />
          <map key='[Continent]' value='[COVID19 Hackathon Dataset.csv].[Continent]' />
          <map key='[Corruption]' value='[COVID19 Hackathon Dataset.csv].[Corruption]' />
          <map key='[Countries]' value='[COVID19 Hackathon Dataset.csv].[Countries]' />
          <map key='[Country Code]' value='[COVID19 Hackathon Dataset.csv].[Country Code]' />
          <map key='[CountryCode]' value='[govtresponse_latest.csv].[CountryCode]' />
          <map key='[CountryName]' value='[govtresponse_latest.csv].[CountryName]' />
          <map key='[Country]' value='[COVID19 Hackathon Dataset.csv].[Country]' />
          <map key='[Date (COVID19 Hackathon Dataset.csv)]' value='[COVID19 Hackathon Dataset.csv].[Date]' />
          <map key='[Date]' value='[govtresponse_latest.csv].[Date]' />
          <map key='[Death Rate Per 1000 (2017)]' value='[COVID19 Hackathon Dataset.csv].[Death Rate Per 1000 (2017)]' />
          <map key='[Diabetes Prevelance % of Population 20-79]' value='[COVID19 Hackathon Dataset.csv].[Diabetes Prevelance % of Population 20-79]' />
          <map key='[E1_Flag]' value='[govtresponse_latest.csv].[E1_Flag]' />
          <map key='[E1_Income support]' value='[govtresponse_latest.csv].[E1_Income support]' />
          <map key='[E2_Debt/contract relief]' value='[govtresponse_latest.csv].[E2_Debt/contract relief]' />
          <map key='[E3_Fiscal measures]' value='[govtresponse_latest.csv].[E3_Fiscal measures]' />
          <map key='[E4_International support]' value='[govtresponse_latest.csv].[E4_International support]' />
          <map key='[EconomicSupportIndexForDisplay]' value='[govtresponse_latest.csv].[EconomicSupportIndexForDisplay]' />
          <map key='[EconomicSupportIndex]' value='[govtresponse_latest.csv].[EconomicSupportIndex]' />
          <map key='[Fertility_Rate]' value='[COVID19 Hackathon Dataset.csv].[Fertility_Rate]' />
          <map key='[GDP_PPP]' value='[COVID19 Hackathon Dataset.csv].[GDP_PPP]' />
          <map key='[GovernmentResponseIndexForDisplay]' value='[govtresponse_latest.csv].[GovernmentResponseIndexForDisplay]' />
          <map key='[GovernmentResponseIndex]' value='[govtresponse_latest.csv].[GovernmentResponseIndex]' />
          <map key='[Government_Effectiveness]' value='[COVID19 Hackathon Dataset.csv].[Government_Effectiveness]' />
          <map key='[Government_Healthcare_Spend]' value='[COVID19 Hackathon Dataset.csv].[Government_Healthcare_Spend]' />
          <map key='[H1_Flag]' value='[govtresponse_latest.csv].[H1_Flag]' />
          <map key='[H1_Public information campaigns]' value='[govtresponse_latest.csv].[H1_Public information campaigns]' />
          <map key='[H2_Testing policy]' value='[govtresponse_latest.csv].[H2_Testing policy]' />
          <map key='[H3_Contact tracing]' value='[govtresponse_latest.csv].[H3_Contact tracing]' />
          <map key='[H4_Emergency investment in healthcare]' value='[govtresponse_latest.csv].[H4_Emergency investment in healthcare]' />
          <map key='[H5_Investment in vaccines]' value='[govtresponse_latest.csv].[H5_Investment in vaccines]' />
          <map key='[Hospital Beds Per 1000 People]' value='[COVID19 Hackathon Dataset.csv].[Hospital Beds Per 1000 People]' />
          <map key='[Hospital Beds Year]' value='[COVID19 Hackathon Dataset.csv].[Hospital Beds Year]' />
          <map key='[Labour Force Total]' value='[COVID19 Hackathon Dataset.csv].[Labour Force Total]' />
          <map key='[M1_Wildcard]' value='[govtresponse_latest.csv].[M1_Wildcard]' />
          <map key='[New_Cases]' value='[COVID19 Hackathon Dataset.csv].[New_Cases]' />
          <map key='[New_Deaths]' value='[COVID19 Hackathon Dataset.csv].[New_Deaths]' />
          <map key='[Obesity_Rate]' value='[COVID19 Hackathon Dataset.csv].[Obesity_Rate]' />
          <map key='[PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)]' value='[COVID19 Hackathon Dataset.csv].[PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)]' />
          <map key='[PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)]' value='[COVID19 Hackathon Dataset.csv].[PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)]' />
          <map key='[Political_Stability]' value='[COVID19 Hackathon Dataset.csv].[Political_Stability]' />
          <map key='[Population Aged 65 and above % of Total]' value='[COVID19 Hackathon Dataset.csv].[Population Aged 65 and above % of Total]' />
          <map key='[Population]' value='[COVID19 Hackathon Dataset.csv].[Population]' />
          <map key='[Population_Density]' value='[COVID19 Hackathon Dataset.csv].[Population_Density]' />
          <map key='[RegionCode]' value='[govtresponse_latest.csv].[RegionCode]' />
          <map key='[RegionName]' value='[govtresponse_latest.csv].[RegionName]' />
          <map key='[Rule_of_Law]' value='[COVID19 Hackathon Dataset.csv].[Rule_of_Law]' />
          <map key='[RunTot_New_Cases]' value='[COVID19 Hackathon Dataset.csv].[RunTot_New_Cases]' />
          <map key='[RunTot_New_Deaths]' value='[COVID19 Hackathon Dataset.csv].[RunTot_New_Deaths]' />
          <map key='[Smoking_Prevalence]' value='[COVID19 Hackathon Dataset.csv].[Smoking_Prevalence]' />
          <map key='[StringencyIndexForDisplay]' value='[govtresponse_latest.csv].[StringencyIndexForDisplay]' />
          <map key='[StringencyIndex]' value='[govtresponse_latest.csv].[StringencyIndex]' />
          <map key='[StringencyLegacyIndexForDisplay]' value='[govtresponse_latest.csv].[StringencyLegacyIndexForDisplay]' />
          <map key='[StringencyLegacyIndex]' value='[govtresponse_latest.csv].[StringencyLegacyIndex]' />
          <map key='[Total_Cases]' value='[COVID19 Hackathon Dataset.csv].[Total_Cases]' />
          <map key='[Total_Deaths]' value='[COVID19 Hackathon Dataset.csv].[Total_Deaths]' />
          <map key='[Tourism]' value='[COVID19 Hackathon Dataset.csv].[Tourism]' />
          <map key='[Urban Population]' value='[COVID19 Hackathon Dataset.csv].[Urban Population]' />
          <map key='[Urban_Population]' value='[COVID19 Hackathon Dataset.csv].[Urban_Population]' />
          <map key='[Weekly_Cases]' value='[COVID19 Hackathon Dataset.csv].[Weekly_Cases]' />
          <map key='[Weekly_Deaths]' value='[COVID19 Hackathon Dataset.csv].[Weekly_Deaths]' />
          <map key='[Women_In_Parliament]' value='[COVID19 Hackathon Dataset.csv].[Women_In_Parliament]' />
          <map key='[Year]' value='[COVID19 Hackathon Dataset.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionCode]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>RegionCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C1_School closing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C1_School closing]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C1_School closing</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C1_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C1_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C1_Flag</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C2_Workplace closing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C2_Workplace closing]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C2_Workplace closing</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C2_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C2_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C2_Flag</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C3_Cancel public events</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C3_Cancel public events]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C3_Cancel public events</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C3_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C3_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C3_Flag</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C4_Restrictions on gatherings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C4_Restrictions on gatherings]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C4_Restrictions on gatherings</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C4_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C4_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C4_Flag</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C5_Close public transport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C5_Close public transport]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C5_Close public transport</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C5_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C5_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C5_Flag</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C6_Stay at home requirements</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C6_Stay at home requirements]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C6_Stay at home requirements</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C6_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C6_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C6_Flag</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C7_Restrictions on internal movement</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C7_Restrictions on internal movement]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C7_Restrictions on internal movement</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C7_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C7_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C7_Flag</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C8_International travel controls</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C8_International travel controls]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C8_International travel controls</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E1_Income support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E1_Income support]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E1_Income support</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E1_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[E1_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E1_Flag</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E2_Debt/contract relief</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E2_Debt/contract relief]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E2_Debt/contract relief</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E3_Fiscal measures</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E3_Fiscal measures]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E3_Fiscal measures</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E4_International support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E4_International support]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E4_International support</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H1_Public information campaigns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H1_Public information campaigns]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H1_Public information campaigns</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H1_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[H1_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H1_Flag</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H2_Testing policy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H2_Testing policy]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H2_Testing policy</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H3_Contact tracing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H3_Contact tracing]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H3_Contact tracing</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H4_Emergency investment in healthcare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H4_Emergency investment in healthcare]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H4_Emergency investment in healthcare</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H5_Investment in vaccines</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H5_Investment in vaccines]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H5_Investment in vaccines</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M1_Wildcard</remote-name>
            <remote-type>129</remote-type>
            <local-name>[M1_Wildcard]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>M1_Wildcard</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmedCases]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ConfirmedCases</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmedDeaths]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ConfirmedDeaths</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyIndex</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyIndexForDisplay</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyLegacyIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyLegacyIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyLegacyIndex</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyLegacyIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyLegacyIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyLegacyIndexForDisplay</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GovernmentResponseIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GovernmentResponseIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>GovernmentResponseIndex</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GovernmentResponseIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GovernmentResponseIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>GovernmentResponseIndexForDisplay</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainmentHealthIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainmentHealthIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ContainmentHealthIndex</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainmentHealthIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainmentHealthIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ContainmentHealthIndexForDisplay</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomicSupportIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EconomicSupportIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>EconomicSupportIndex</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomicSupportIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EconomicSupportIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>EconomicSupportIndexForDisplay</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (COVID19 Hackathon Dataset.csv)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>44</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Countries]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Countries</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>New_Cases</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>New_Deaths</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekly_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Weekly_Cases</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekly_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Weekly_Deaths</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_Density]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Population_Density</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertility_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fertility_Rate]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Fertility_Rate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_PPP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP_PPP]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>GDP_PPP</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corruption]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Corruption</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Effectiveness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Effectiveness]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Government_Effectiveness</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political_Stability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Political_Stability]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Political_Stability</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rule_of_Law</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rule_of_Law]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Rule_of_Law</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Healthcare_Spend</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Healthcare_Spend]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Government_Healthcare_Spend</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban_Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban_Population]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Urban_Population</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking_Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking_Prevalence]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Smoking_Prevalence</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Tourism</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Women_In_Parliament</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Women_In_Parliament]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Women_In_Parliament</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obesity_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obesity_Rate]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Obesity_Rate</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RunTot_New_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RunTot_New_Cases]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>RunTot_New_Cases</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RunTot_New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RunTot_New_Deaths]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>RunTot_New_Deaths</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes Prevelance % of Population 20-79</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes Prevelance % of Population 20-79]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Diabetes Prevelance % of Population 20-79</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labour Force Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Labour Force Total]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Labour Force Total</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Aged 65 and above % of Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Aged 65 and above % of Total]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Population Aged 65 and above % of Total</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban Population]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Urban Population</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate Per 1000 (2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate Per 1000 (2017)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Death Rate Per 1000 (2017)</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospital Beds Year]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Hospital Beds Year</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Per 1000 People</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital Beds Per 1000 People]</local-name>
            <parent-name>[COVID19 Hackathon Dataset.csv]</parent-name>
            <remote-alias>Hospital Beds Per 1000 People</remote-alias>
            <ordinal>80</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='C1 Flag' datatype='integer' name='[C1_Flag]' role='measure' type='quantitative' />
      <column caption='C1 School closing' datatype='real' name='[C1_School closing]' role='measure' type='quantitative' />
      <column caption='C2 Flag' datatype='integer' name='[C2_Flag]' role='measure' type='quantitative' />
      <column caption='C2 Workplace closing' datatype='real' name='[C2_Workplace closing]' role='measure' type='quantitative' />
      <column caption='C3 Cancel public events' datatype='real' name='[C3_Cancel public events]' role='measure' type='quantitative' />
      <column caption='C3 Flag' datatype='integer' name='[C3_Flag]' role='measure' type='quantitative' />
      <column caption='C4 Flag' datatype='integer' name='[C4_Flag]' role='measure' type='quantitative' />
      <column caption='C4 Restrictions on gatherings' datatype='real' name='[C4_Restrictions on gatherings]' role='measure' type='quantitative' />
      <column caption='C5 Close public transport' datatype='real' name='[C5_Close public transport]' role='measure' type='quantitative' />
      <column caption='C5 Flag' datatype='integer' name='[C5_Flag]' role='measure' type='quantitative' />
      <column caption='C6 Flag' datatype='integer' name='[C6_Flag]' role='measure' type='quantitative' />
      <column caption='C6 Stay at home requirements' datatype='real' name='[C6_Stay at home requirements]' role='measure' type='quantitative' />
      <column caption='C7 Flag' datatype='integer' name='[C7_Flag]' role='measure' type='quantitative' />
      <column caption='C7 Restrictions on internal movement' datatype='real' name='[C7_Restrictions on internal movement]' role='measure' type='quantitative' />
      <column caption='C8 International travel controls' datatype='real' name='[C8_International travel controls]' role='measure' type='quantitative' />
      <column caption='Confirmed Cases' datatype='integer' name='[ConfirmedCases]' role='measure' type='quantitative' />
      <column caption='Confirmed Deaths' datatype='integer' name='[ConfirmedDeaths]' role='measure' type='quantitative' />
      <column caption='Containment Health Index For Display' datatype='real' name='[ContainmentHealthIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Containment Health Index' datatype='real' name='[ContainmentHealthIndex]' role='measure' type='quantitative' />
      <column datatype='string' name='[Countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code1' datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='E1 Flag' datatype='integer' name='[E1_Flag]' role='measure' type='quantitative' />
      <column caption='E1 Income support' datatype='real' name='[E1_Income support]' role='measure' type='quantitative' />
      <column caption='E2 Debt/contract relief' datatype='real' name='[E2_Debt/contract relief]' role='measure' type='quantitative' />
      <column caption='E3 Fiscal measures' datatype='real' name='[E3_Fiscal measures]' role='measure' type='quantitative' />
      <column caption='E4 International support' datatype='real' name='[E4_International support]' role='measure' type='quantitative' />
      <column caption='Economic Support Index For Display' datatype='real' name='[EconomicSupportIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Economic Support Index' datatype='real' name='[EconomicSupportIndex]' role='measure' type='quantitative' />
      <column caption='Fertility Rate' datatype='real' name='[Fertility_Rate]' role='measure' type='quantitative' />
      <column caption='Gdp Ppp' datatype='integer' name='[GDP_PPP]' role='measure' type='quantitative' />
      <column caption='Government Response Index For Display' datatype='real' name='[GovernmentResponseIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Government Response Index' datatype='real' name='[GovernmentResponseIndex]' role='measure' type='quantitative' />
      <column caption='Government Effectiveness' datatype='real' name='[Government_Effectiveness]' role='measure' type='quantitative' />
      <column caption='Government Healthcare Spend' datatype='real' name='[Government_Healthcare_Spend]' role='measure' type='quantitative' />
      <column caption='H1 Flag' datatype='integer' name='[H1_Flag]' role='measure' type='quantitative' />
      <column caption='H1 Public information campaigns' datatype='real' name='[H1_Public information campaigns]' role='measure' type='quantitative' />
      <column caption='H2 Testing policy' datatype='real' name='[H2_Testing policy]' role='measure' type='quantitative' />
      <column caption='H3 Contact tracing' datatype='real' name='[H3_Contact tracing]' role='measure' type='quantitative' />
      <column caption='H4 Emergency investment in healthcare' datatype='real' name='[H4_Emergency investment in healthcare]' role='measure' type='quantitative' />
      <column caption='H5 Investment in vaccines' datatype='real' name='[H5_Investment in vaccines]' role='measure' type='quantitative' />
      <column caption='M1 Wildcard' datatype='string' name='[M1_Wildcard]' role='dimension' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[New_Cases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
      <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
      <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[Population_Density]' role='measure' type='quantitative' />
      <column caption='Region Code' datatype='string' name='[RegionCode]' role='dimension' type='nominal' />
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Rule of Law' datatype='real' name='[Rule_of_Law]' role='measure' type='quantitative' />
      <column caption='RunTot New Cases' datatype='integer' name='[RunTot_New_Cases]' role='measure' type='quantitative' />
      <column caption='RunTot New Deaths' datatype='integer' name='[RunTot_New_Deaths]' role='measure' type='quantitative' />
      <column caption='Smoking Prevalence' datatype='real' name='[Smoking_Prevalence]' role='measure' type='quantitative' />
      <column caption='Stringency Index For Display' datatype='real' name='[StringencyIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[StringencyIndex]' role='measure' type='quantitative' />
      <column caption='Stringency Legacy Index For Display' datatype='real' name='[StringencyLegacyIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Stringency Legacy Index' datatype='real' name='[StringencyLegacyIndex]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <column caption='Urban Population1' datatype='real' name='[Urban_Population]' role='measure' type='quantitative' />
      <column caption='Weekly Cases' datatype='integer' name='[Weekly_Cases]' role='measure' type='quantitative' />
      <column caption='Weekly Deaths' datatype='integer' name='[Weekly_Deaths]' role='measure' type='quantitative' />
      <column caption='Women In Parliament' datatype='real' name='[Women_In_Parliament]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='govtresponse_latest.csv' datatype='table' name='[__tableau_internal_object_id__].[govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='govtresponse_latest.csv' id='govtresponse_latest.csv_2BE306B7680A46BA9D13C703F072F6A3'>
            <properties context=''>
              <relation join='right' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[govtresponse_latest.csv].[CountryName]' />
                      <expression op='[COVID19 Hackathon Dataset.csv].[Country]' />
                    </expression>
                    <expression op='='>
                      <expression op='[govtresponse_latest.csv].[Date]' />
                      <expression op='[COVID19 Hackathon Dataset.csv].[Date]' />
                    </expression>
                  </expression>
                </clause>
                <relation connection='textscan.09cbn1n18kzvje13yzcmn1dlkair' name='govtresponse_latest.csv' table='[govtresponse_latest#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='CountryName' ordinal='0' />
                    <column datatype='string' name='CountryCode' ordinal='1' />
                    <column datatype='string' name='RegionName' ordinal='2' />
                    <column datatype='string' name='RegionCode' ordinal='3' />
                    <column datatype='date' name='Date' ordinal='4' />
                    <column datatype='real' name='C1_School closing' ordinal='5' />
                    <column datatype='integer' name='C1_Flag' ordinal='6' />
                    <column datatype='real' name='C2_Workplace closing' ordinal='7' />
                    <column datatype='integer' name='C2_Flag' ordinal='8' />
                    <column datatype='real' name='C3_Cancel public events' ordinal='9' />
                    <column datatype='integer' name='C3_Flag' ordinal='10' />
                    <column datatype='real' name='C4_Restrictions on gatherings' ordinal='11' />
                    <column datatype='integer' name='C4_Flag' ordinal='12' />
                    <column datatype='real' name='C5_Close public transport' ordinal='13' />
                    <column datatype='integer' name='C5_Flag' ordinal='14' />
                    <column datatype='real' name='C6_Stay at home requirements' ordinal='15' />
                    <column datatype='integer' name='C6_Flag' ordinal='16' />
                    <column datatype='real' name='C7_Restrictions on internal movement' ordinal='17' />
                    <column datatype='integer' name='C7_Flag' ordinal='18' />
                    <column datatype='real' name='C8_International travel controls' ordinal='19' />
                    <column datatype='real' name='E1_Income support' ordinal='20' />
                    <column datatype='integer' name='E1_Flag' ordinal='21' />
                    <column datatype='real' name='E2_Debt/contract relief' ordinal='22' />
                    <column datatype='real' name='E3_Fiscal measures' ordinal='23' />
                    <column datatype='real' name='E4_International support' ordinal='24' />
                    <column datatype='real' name='H1_Public information campaigns' ordinal='25' />
                    <column datatype='integer' name='H1_Flag' ordinal='26' />
                    <column datatype='real' name='H2_Testing policy' ordinal='27' />
                    <column datatype='real' name='H3_Contact tracing' ordinal='28' />
                    <column datatype='real' name='H4_Emergency investment in healthcare' ordinal='29' />
                    <column datatype='real' name='H5_Investment in vaccines' ordinal='30' />
                    <column datatype='string' name='M1_Wildcard' ordinal='31' />
                    <column datatype='integer' name='ConfirmedCases' ordinal='32' />
                    <column datatype='integer' name='ConfirmedDeaths' ordinal='33' />
                    <column datatype='real' name='StringencyIndex' ordinal='34' />
                    <column datatype='real' name='StringencyIndexForDisplay' ordinal='35' />
                    <column datatype='real' name='StringencyLegacyIndex' ordinal='36' />
                    <column datatype='real' name='StringencyLegacyIndexForDisplay' ordinal='37' />
                    <column datatype='real' name='GovernmentResponseIndex' ordinal='38' />
                    <column datatype='real' name='GovernmentResponseIndexForDisplay' ordinal='39' />
                    <column datatype='real' name='ContainmentHealthIndex' ordinal='40' />
                    <column datatype='real' name='ContainmentHealthIndexForDisplay' ordinal='41' />
                    <column datatype='real' name='EconomicSupportIndex' ordinal='42' />
                    <column datatype='real' name='EconomicSupportIndexForDisplay' ordinal='43' />
                  </columns>
                </relation>
                <relation connection='textscan.06znm4t023l95p171a638006fkc7' name='COVID19 Hackathon Dataset.csv' table='[COVID19 Hackathon Dataset#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='date' name='Date' ordinal='0' />
                    <column datatype='string' name='Continent' ordinal='1' />
                    <column datatype='string' name='Countries' ordinal='2' />
                    <column datatype='integer' name='New_Cases' ordinal='3' />
                    <column datatype='integer' name='New_Deaths' ordinal='4' />
                    <column datatype='integer' name='Total_Cases' ordinal='5' />
                    <column datatype='integer' name='Total_Deaths' ordinal='6' />
                    <column datatype='integer' name='Weekly_Cases' ordinal='7' />
                    <column datatype='integer' name='Weekly_Deaths' ordinal='8' />
                    <column datatype='real' name='Population_Density' ordinal='9' />
                    <column datatype='real' name='Fertility_Rate' ordinal='10' />
                    <column datatype='integer' name='GDP_PPP' ordinal='11' />
                    <column datatype='real' name='Corruption' ordinal='12' />
                    <column datatype='real' name='Government_Effectiveness' ordinal='13' />
                    <column datatype='real' name='Political_Stability' ordinal='14' />
                    <column datatype='real' name='Rule_of_Law' ordinal='15' />
                    <column datatype='real' name='Government_Healthcare_Spend' ordinal='16' />
                    <column datatype='real' name='Urban_Population' ordinal='17' />
                    <column datatype='real' name='Smoking_Prevalence' ordinal='18' />
                    <column datatype='integer' name='Tourism' ordinal='19' />
                    <column datatype='real' name='Women_In_Parliament' ordinal='20' />
                    <column datatype='real' name='Obesity_Rate' ordinal='21' />
                    <column datatype='integer' name='RunTot_New_Cases' ordinal='22' />
                    <column datatype='integer' name='RunTot_New_Deaths' ordinal='23' />
                    <column datatype='string' name='Country' ordinal='24' />
                    <column datatype='string' name='Country Code' ordinal='25' />
                    <column datatype='integer' name='Year' ordinal='26' />
                    <column datatype='real' name='Diabetes Prevelance % of Population 20-79' ordinal='27' />
                    <column datatype='integer' name='Labour Force Total' ordinal='28' />
                    <column datatype='integer' name='Population' ordinal='29' />
                    <column datatype='real' name='Population Aged 65 and above % of Total' ordinal='30' />
                    <column datatype='integer' name='Urban Population' ordinal='31' />
                    <column datatype='real' name='Death Rate Per 1000 (2017)' ordinal='32' />
                    <column datatype='real' name='PM2.5 air pollution, mean annual exposure (micrograms per cubic meter) (2017)' ordinal='33' />
                    <column datatype='real' name='PM2.5 air pollution, population exposed to levels exceeding WHO guideline value (% of total) (2017)' ordinal='34' />
                    <column datatype='integer' name='Hospital Beds Year' ordinal='35' />
                    <column datatype='real' name='Hospital Beds Per 1000 People' ordinal='36' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='policy_top5_deaths+' inline='true' name='federated.1ijpo310cdk8dm1954vtt0c2rvlp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='policy_top5_deaths' name='textscan.1evdmph1epu9ir10mknbk1qzh8qm'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='policy_top5_deaths.csv' password='' server='' />
          </named-connection>
          <named-connection caption='women_in_power_top5countries_deaths' name='textscan.1voocpq0t2rbdc13xlavg1fm14y1'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='women_in_power_top5countries_deaths.csv' password='' server='' />
          </named-connection>
          <named-connection caption='total_policies_and_type_by_country' name='textscan.1jn30401jdtcoe1214w5f0bmkho0'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='total_policies_and_type_by_country.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Covid_CFR' name='excel-direct.16j7agv0rbgygb1g62sft0zklsfy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD/Covid_CFR.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19 Hackathon Dataset' name='textscan.13b7lui17tpyht0zoyvpf04ztrir'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='COVID19 Hackathon Dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='right' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Countries_Top5_Deaths.csv].[Countries]' />
              <expression op='[policy_top5_deaths.csv].[country]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Countries_Top5_Deaths.csv].[Countries]' />
                <expression op='[women_in_power_top5countries_deaths.csv].[Country]' />
              </expression>
            </clause>
            <relation connection='textscan.1evdmph1epu9ir10mknbk1qzh8qm' name='Countries_Top5_Deaths.csv' table='[Countries_Top5_Deaths#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='string' name='Countries' ordinal='1' />
                <column datatype='integer' name='Total_Cases' ordinal='2' />
                <column datatype='integer' name='Total_Deaths' ordinal='3' />
                <column datatype='real' name='Population_Density' ordinal='4' />
                <column datatype='real' name='Fertility_Rate' ordinal='5' />
                <column datatype='integer' name='GDP_PPP' ordinal='6' />
                <column datatype='real' name='Corruption' ordinal='7' />
                <column datatype='real' name='Government_Effectiveness' ordinal='8' />
                <column datatype='real' name='Political_Stability' ordinal='9' />
                <column datatype='real' name='Rule_of_Law' ordinal='10' />
                <column datatype='real' name='Government_Healthcare_Spend' ordinal='11' />
                <column datatype='integer' name='Urban_Population' ordinal='12' />
                <column datatype='real' name='Smoking_Prevalence' ordinal='13' />
                <column datatype='integer' name='Tourism' ordinal='14' />
                <column datatype='real' name='Women_In_Parliament' ordinal='15' />
                <column datatype='real' name='Obesity_Rate' ordinal='16' />
                <column datatype='real' name='Diabetes_Prevelance' ordinal='17' />
                <column datatype='integer' name='Labour_Force_Total' ordinal='18' />
                <column datatype='integer' name='Population' ordinal='19' />
                <column datatype='real' name='Population_Aged_65_and_above_percentage' ordinal='20' />
                <column datatype='integer' name='Urban_Population 1' ordinal='21' />
                <column datatype='real' name='Death_Rate_Per_1000_year2017' ordinal='22' />
                <column datatype='real' name='PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017' ordinal='23' />
                <column datatype='real' name='PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017' ordinal='24' />
                <column datatype='integer' name='Hospital_Beds_Year' ordinal='25' />
                <column datatype='real' name='Hospital_Beds_Per_1000_People' ordinal='26' />
                <column datatype='real' name='ratio_deaths' ordinal='27' />
              </columns>
            </relation>
            <relation connection='textscan.1evdmph1epu9ir10mknbk1qzh8qm' name='women_in_power_top5countries_deaths.csv' table='[women_in_power_top5countries_deaths#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='string' name='Country' ordinal='1' />
                <column datatype='integer' name='Woman Head of State' ordinal='2' />
                <column datatype='integer' name='Number of elected and appointed female heads of state or governments since 1946' ordinal='3' />
                <column datatype='real' name='Percentage of ministerial positions held by women' ordinal='4' />
                <column datatype='integer' name='Rank of ministerial positions held by women' ordinal='5' />
                <column datatype='real' name='Percentage of seats held by women in the national legislature' ordinal='6' />
                <column datatype='integer' name='Rank of seats held by women in the national legislature' ordinal='7' />
                <column datatype='string' name='Percentage of female candidates in the most recent elections to the national legislature' ordinal='8' />
                <column datatype='string' name='Rank of female candidates in the most recent elections to the national legislature' ordinal='9' />
                <column datatype='string' name='Percentage of elected seats held by women in local government bodies' ordinal='10' />
                <column datatype='string' name='Rank of elected seats held by women in local government bodies' ordinal='11' />
                <column datatype='real' name='Political parity score' ordinal='12' />
                <column datatype='integer' name='Political parity score rank' ordinal='13' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1jn30401jdtcoe1214w5f0bmkho0' name='policy_top5_deaths.csv' table='[policy_top5_deaths#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='policy_id' ordinal='1' />
              <column datatype='string' name='entry_type' ordinal='2' />
              <column datatype='string' name='correct_type' ordinal='3' />
              <column datatype='string' name='update_type' ordinal='4' />
              <column datatype='string' name='update_level' ordinal='5' />
              <column datatype='string' name='description' ordinal='6' />
              <column datatype='date' name='date_announced' ordinal='7' />
              <column datatype='date' name='date_start' ordinal='8' />
              <column datatype='string' name='date_end' ordinal='9' />
              <column datatype='string' name='country' ordinal='10' />
              <column datatype='string' name='init_country_level' ordinal='11' />
              <column datatype='integer' name='domestic_policy' ordinal='12' />
              <column datatype='string' name='province' ordinal='13' />
              <column datatype='string' name='city' ordinal='14' />
              <column datatype='string' name='type' ordinal='15' />
              <column datatype='string' name='type_sub_cat' ordinal='16' />
              <column datatype='string' name='type_text' ordinal='17' />
              <column datatype='string' name='school_status' ordinal='18' />
              <column datatype='string' name='target_country' ordinal='19' />
              <column datatype='string' name='target_geog_level' ordinal='20' />
              <column datatype='string' name='target_region' ordinal='21' />
              <column datatype='string' name='target_province' ordinal='22' />
              <column datatype='string' name='target_city' ordinal='23' />
              <column datatype='string' name='target_other' ordinal='24' />
              <column datatype='string' name='target_who_what' ordinal='25' />
              <column datatype='string' name='target_direction' ordinal='26' />
              <column datatype='string' name='travel_mechanism' ordinal='27' />
              <column datatype='string' name='compliance' ordinal='28' />
              <column datatype='string' name='enforcer' ordinal='29' />
              <column datatype='string' name='index_high_est' ordinal='30' />
              <column datatype='string' name='index_med_est' ordinal='31' />
              <column datatype='string' name='index_low_est' ordinal='32' />
              <column datatype='string' name='index_country_rank' ordinal='33' />
              <column datatype='string' name='link' ordinal='34' />
              <column datatype='date' name='date_updated' ordinal='35' />
              <column datatype='datetime' name='recorded_date' ordinal='36' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation join='right' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Countries_Top5_Deaths.csv].[Countries]' />
                <expression op='[policy_top5_deaths.csv].[country]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Countries_Top5_Deaths.csv].[Countries]' />
                  <expression op='[women_in_power_top5countries_deaths.csv].[Country]' />
                </expression>
              </clause>
              <relation connection='textscan.1evdmph1epu9ir10mknbk1qzh8qm' name='Countries_Top5_Deaths.csv' table='[Countries_Top5_Deaths#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Countries' ordinal='1' />
                  <column datatype='integer' name='Total_Cases' ordinal='2' />
                  <column datatype='integer' name='Total_Deaths' ordinal='3' />
                  <column datatype='real' name='Population_Density' ordinal='4' />
                  <column datatype='real' name='Fertility_Rate' ordinal='5' />
                  <column datatype='integer' name='GDP_PPP' ordinal='6' />
                  <column datatype='real' name='Corruption' ordinal='7' />
                  <column datatype='real' name='Government_Effectiveness' ordinal='8' />
                  <column datatype='real' name='Political_Stability' ordinal='9' />
                  <column datatype='real' name='Rule_of_Law' ordinal='10' />
                  <column datatype='real' name='Government_Healthcare_Spend' ordinal='11' />
                  <column datatype='integer' name='Urban_Population' ordinal='12' />
                  <column datatype='real' name='Smoking_Prevalence' ordinal='13' />
                  <column datatype='integer' name='Tourism' ordinal='14' />
                  <column datatype='real' name='Women_In_Parliament' ordinal='15' />
                  <column datatype='real' name='Obesity_Rate' ordinal='16' />
                  <column datatype='real' name='Diabetes_Prevelance' ordinal='17' />
                  <column datatype='integer' name='Labour_Force_Total' ordinal='18' />
                  <column datatype='integer' name='Population' ordinal='19' />
                  <column datatype='real' name='Population_Aged_65_and_above_percentage' ordinal='20' />
                  <column datatype='integer' name='Urban_Population 1' ordinal='21' />
                  <column datatype='real' name='Death_Rate_Per_1000_year2017' ordinal='22' />
                  <column datatype='real' name='PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017' ordinal='23' />
                  <column datatype='real' name='PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017' ordinal='24' />
                  <column datatype='integer' name='Hospital_Beds_Year' ordinal='25' />
                  <column datatype='real' name='Hospital_Beds_Per_1000_People' ordinal='26' />
                  <column datatype='real' name='ratio_deaths' ordinal='27' />
                </columns>
              </relation>
              <relation connection='textscan.1evdmph1epu9ir10mknbk1qzh8qm' name='women_in_power_top5countries_deaths.csv' table='[women_in_power_top5countries_deaths#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Woman Head of State' ordinal='2' />
                  <column datatype='integer' name='Number of elected and appointed female heads of state or governments since 1946' ordinal='3' />
                  <column datatype='real' name='Percentage of ministerial positions held by women' ordinal='4' />
                  <column datatype='integer' name='Rank of ministerial positions held by women' ordinal='5' />
                  <column datatype='real' name='Percentage of seats held by women in the national legislature' ordinal='6' />
                  <column datatype='integer' name='Rank of seats held by women in the national legislature' ordinal='7' />
                  <column datatype='string' name='Percentage of female candidates in the most recent elections to the national legislature' ordinal='8' />
                  <column datatype='string' name='Rank of female candidates in the most recent elections to the national legislature' ordinal='9' />
                  <column datatype='string' name='Percentage of elected seats held by women in local government bodies' ordinal='10' />
                  <column datatype='string' name='Rank of elected seats held by women in local government bodies' ordinal='11' />
                  <column datatype='real' name='Political parity score' ordinal='12' />
                  <column datatype='integer' name='Political parity score rank' ordinal='13' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1jn30401jdtcoe1214w5f0bmkho0' name='policy_top5_deaths.csv' table='[policy_top5_deaths#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='integer' name='policy_id' ordinal='1' />
                <column datatype='string' name='entry_type' ordinal='2' />
                <column datatype='string' name='correct_type' ordinal='3' />
                <column datatype='string' name='update_type' ordinal='4' />
                <column datatype='string' name='update_level' ordinal='5' />
                <column datatype='string' name='description' ordinal='6' />
                <column datatype='date' name='date_announced' ordinal='7' />
                <column datatype='date' name='date_start' ordinal='8' />
                <column datatype='string' name='date_end' ordinal='9' />
                <column datatype='string' name='country' ordinal='10' />
                <column datatype='string' name='init_country_level' ordinal='11' />
                <column datatype='integer' name='domestic_policy' ordinal='12' />
                <column datatype='string' name='province' ordinal='13' />
                <column datatype='string' name='city' ordinal='14' />
                <column datatype='string' name='type' ordinal='15' />
                <column datatype='string' name='type_sub_cat' ordinal='16' />
                <column datatype='string' name='type_text' ordinal='17' />
                <column datatype='string' name='school_status' ordinal='18' />
                <column datatype='string' name='target_country' ordinal='19' />
                <column datatype='string' name='target_geog_level' ordinal='20' />
                <column datatype='string' name='target_region' ordinal='21' />
                <column datatype='string' name='target_province' ordinal='22' />
                <column datatype='string' name='target_city' ordinal='23' />
                <column datatype='string' name='target_other' ordinal='24' />
                <column datatype='string' name='target_who_what' ordinal='25' />
                <column datatype='string' name='target_direction' ordinal='26' />
                <column datatype='string' name='travel_mechanism' ordinal='27' />
                <column datatype='string' name='compliance' ordinal='28' />
                <column datatype='string' name='enforcer' ordinal='29' />
                <column datatype='string' name='index_high_est' ordinal='30' />
                <column datatype='string' name='index_med_est' ordinal='31' />
                <column datatype='string' name='index_low_est' ordinal='32' />
                <column datatype='string' name='index_country_rank' ordinal='33' />
                <column datatype='string' name='link' ordinal='34' />
                <column datatype='date' name='date_updated' ordinal='35' />
                <column datatype='datetime' name='recorded_date' ordinal='36' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1jn30401jdtcoe1214w5f0bmkho0' name='total_policies_and_type_by_country.csv' table='[total_policies_and_type_by_country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='integer' name='total_policies' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Corruption]' value='[Countries_Top5_Deaths.csv].[Corruption]' />
          <map key='[Countries]' value='[Countries_Top5_Deaths.csv].[Countries]' />
          <map key='[Country]' value='[women_in_power_top5countries_deaths.csv].[Country]' />
          <map key='[Death_Rate_Per_1000_year2017]' value='[Countries_Top5_Deaths.csv].[Death_Rate_Per_1000_year2017]' />
          <map key='[Diabetes_Prevelance]' value='[Countries_Top5_Deaths.csv].[Diabetes_Prevelance]' />
          <map key='[F1 (policy_top5_deaths.csv)]' value='[policy_top5_deaths.csv].[F1]' />
          <map key='[F1 (total_policies_and_type_by_country.csv)]' value='[total_policies_and_type_by_country.csv].[F1]' />
          <map key='[F1 (women_in_power_top5countries_deaths.csv)]' value='[women_in_power_top5countries_deaths.csv].[F1]' />
          <map key='[F1]' value='[Countries_Top5_Deaths.csv].[F1]' />
          <map key='[Fertility_Rate]' value='[Countries_Top5_Deaths.csv].[Fertility_Rate]' />
          <map key='[GDP_PPP]' value='[Countries_Top5_Deaths.csv].[GDP_PPP]' />
          <map key='[Government_Effectiveness]' value='[Countries_Top5_Deaths.csv].[Government_Effectiveness]' />
          <map key='[Government_Healthcare_Spend]' value='[Countries_Top5_Deaths.csv].[Government_Healthcare_Spend]' />
          <map key='[Hospital_Beds_Per_1000_People]' value='[Countries_Top5_Deaths.csv].[Hospital_Beds_Per_1000_People]' />
          <map key='[Hospital_Beds_Year]' value='[Countries_Top5_Deaths.csv].[Hospital_Beds_Year]' />
          <map key='[Labour_Force_Total]' value='[Countries_Top5_Deaths.csv].[Labour_Force_Total]' />
          <map key='[Number of elected and appointed female heads of state or governments since 1946]' value='[women_in_power_top5countries_deaths.csv].[Number of elected and appointed female heads of state or governments since 1946]' />
          <map key='[Obesity_Rate]' value='[Countries_Top5_Deaths.csv].[Obesity_Rate]' />
          <map key='[PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' value='[Countries_Top5_Deaths.csv].[PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' />
          <map key='[PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017]' value='[Countries_Top5_Deaths.csv].[PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017]' />
          <map key='[Percentage of elected seats held by women in local government bodies]' value='[women_in_power_top5countries_deaths.csv].[Percentage of elected seats held by women in local government bodies]' />
          <map key='[Percentage of female candidates in the most recent elections to the national legislature]' value='[women_in_power_top5countries_deaths.csv].[Percentage of female candidates in the most recent elections to the national legislature]' />
          <map key='[Percentage of ministerial positions held by women]' value='[women_in_power_top5countries_deaths.csv].[Percentage of ministerial positions held by women]' />
          <map key='[Percentage of seats held by women in the national legislature]' value='[women_in_power_top5countries_deaths.csv].[Percentage of seats held by women in the national legislature]' />
          <map key='[Political parity score rank]' value='[women_in_power_top5countries_deaths.csv].[Political parity score rank]' />
          <map key='[Political parity score]' value='[women_in_power_top5countries_deaths.csv].[Political parity score]' />
          <map key='[Political_Stability]' value='[Countries_Top5_Deaths.csv].[Political_Stability]' />
          <map key='[Population]' value='[Countries_Top5_Deaths.csv].[Population]' />
          <map key='[Population_Aged_65_and_above_percentage]' value='[Countries_Top5_Deaths.csv].[Population_Aged_65_and_above_percentage]' />
          <map key='[Population_Density]' value='[Countries_Top5_Deaths.csv].[Population_Density]' />
          <map key='[Rank of elected seats held by women in local government bodies]' value='[women_in_power_top5countries_deaths.csv].[Rank of elected seats held by women in local government bodies]' />
          <map key='[Rank of female candidates in the most recent elections to the national legislature]' value='[women_in_power_top5countries_deaths.csv].[Rank of female candidates in the most recent elections to the national legislature]' />
          <map key='[Rank of ministerial positions held by women]' value='[women_in_power_top5countries_deaths.csv].[Rank of ministerial positions held by women]' />
          <map key='[Rank of seats held by women in the national legislature]' value='[women_in_power_top5countries_deaths.csv].[Rank of seats held by women in the national legislature]' />
          <map key='[Rule_of_Law]' value='[Countries_Top5_Deaths.csv].[Rule_of_Law]' />
          <map key='[Smoking_Prevalence]' value='[Countries_Top5_Deaths.csv].[Smoking_Prevalence]' />
          <map key='[Total_Cases]' value='[Countries_Top5_Deaths.csv].[Total_Cases]' />
          <map key='[Total_Deaths]' value='[Countries_Top5_Deaths.csv].[Total_Deaths]' />
          <map key='[Tourism]' value='[Countries_Top5_Deaths.csv].[Tourism]' />
          <map key='[Urban_Population 1]' value='[Countries_Top5_Deaths.csv].[Urban_Population 1]' />
          <map key='[Urban_Population]' value='[Countries_Top5_Deaths.csv].[Urban_Population]' />
          <map key='[Woman Head of State]' value='[women_in_power_top5countries_deaths.csv].[Woman Head of State]' />
          <map key='[Women_In_Parliament]' value='[Countries_Top5_Deaths.csv].[Women_In_Parliament]' />
          <map key='[city]' value='[policy_top5_deaths.csv].[city]' />
          <map key='[compliance]' value='[policy_top5_deaths.csv].[compliance]' />
          <map key='[correct_type]' value='[policy_top5_deaths.csv].[correct_type]' />
          <map key='[country (total_policies_and_type_by_country.csv)]' value='[total_policies_and_type_by_country.csv].[country]' />
          <map key='[country]' value='[policy_top5_deaths.csv].[country]' />
          <map key='[date_announced]' value='[policy_top5_deaths.csv].[date_announced]' />
          <map key='[date_end]' value='[policy_top5_deaths.csv].[date_end]' />
          <map key='[date_start]' value='[policy_top5_deaths.csv].[date_start]' />
          <map key='[date_updated]' value='[policy_top5_deaths.csv].[date_updated]' />
          <map key='[description]' value='[policy_top5_deaths.csv].[description]' />
          <map key='[domestic_policy]' value='[policy_top5_deaths.csv].[domestic_policy]' />
          <map key='[enforcer]' value='[policy_top5_deaths.csv].[enforcer]' />
          <map key='[entry_type]' value='[policy_top5_deaths.csv].[entry_type]' />
          <map key='[index_country_rank]' value='[policy_top5_deaths.csv].[index_country_rank]' />
          <map key='[index_high_est]' value='[policy_top5_deaths.csv].[index_high_est]' />
          <map key='[index_low_est]' value='[policy_top5_deaths.csv].[index_low_est]' />
          <map key='[index_med_est]' value='[policy_top5_deaths.csv].[index_med_est]' />
          <map key='[init_country_level]' value='[policy_top5_deaths.csv].[init_country_level]' />
          <map key='[link]' value='[policy_top5_deaths.csv].[link]' />
          <map key='[policy_id]' value='[policy_top5_deaths.csv].[policy_id]' />
          <map key='[province]' value='[policy_top5_deaths.csv].[province]' />
          <map key='[ratio_deaths]' value='[Countries_Top5_Deaths.csv].[ratio_deaths]' />
          <map key='[recorded_date]' value='[policy_top5_deaths.csv].[recorded_date]' />
          <map key='[school_status]' value='[policy_top5_deaths.csv].[school_status]' />
          <map key='[target_city]' value='[policy_top5_deaths.csv].[target_city]' />
          <map key='[target_country]' value='[policy_top5_deaths.csv].[target_country]' />
          <map key='[target_direction]' value='[policy_top5_deaths.csv].[target_direction]' />
          <map key='[target_geog_level]' value='[policy_top5_deaths.csv].[target_geog_level]' />
          <map key='[target_other]' value='[policy_top5_deaths.csv].[target_other]' />
          <map key='[target_province]' value='[policy_top5_deaths.csv].[target_province]' />
          <map key='[target_region]' value='[policy_top5_deaths.csv].[target_region]' />
          <map key='[target_who_what]' value='[policy_top5_deaths.csv].[target_who_what]' />
          <map key='[total_policies]' value='[total_policies_and_type_by_country.csv].[total_policies]' />
          <map key='[travel_mechanism]' value='[policy_top5_deaths.csv].[travel_mechanism]' />
          <map key='[type (total_policies_and_type_by_country.csv)]' value='[total_policies_and_type_by_country.csv].[type]' />
          <map key='[type]' value='[policy_top5_deaths.csv].[type]' />
          <map key='[type_sub_cat]' value='[policy_top5_deaths.csv].[type_sub_cat]' />
          <map key='[type_text]' value='[policy_top5_deaths.csv].[type_text]' />
          <map key='[update_level]' value='[policy_top5_deaths.csv].[update_level]' />
          <map key='[update_type]' value='[policy_top5_deaths.csv].[update_type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[total_policies_and_type_by_country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Countries]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Countries</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_Density]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Population_Density</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertility_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fertility_Rate]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Fertility_Rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_PPP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP_PPP]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>GDP_PPP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corruption]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Corruption</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Effectiveness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Effectiveness]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Government_Effectiveness</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political_Stability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Political_Stability]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Political_Stability</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rule_of_Law</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rule_of_Law]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Rule_of_Law</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Healthcare_Spend</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government_Healthcare_Spend]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Government_Healthcare_Spend</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban_Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban_Population]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Urban_Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking_Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking_Prevalence]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Smoking_Prevalence</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Tourism</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Women_In_Parliament</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Women_In_Parliament]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Women_In_Parliament</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obesity_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obesity_Rate]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Obesity_Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes_Prevelance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes_Prevelance]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Diabetes_Prevelance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labour_Force_Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Labour_Force_Total]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Labour_Force_Total</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Aged_65_and_above_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_Aged_65_and_above_percentage]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Population_Aged_65_and_above_percentage</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban_Population 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban_Population 1]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Urban_Population 1</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Rate_Per_1000_year2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Rate_Per_1000_year2017]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Death_Rate_Per_1000_year2017</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital_Beds_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospital_Beds_Year]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Hospital_Beds_Year</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital_Beds_Per_1000_People</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital_Beds_Per_1000_People]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>Hospital_Beds_Per_1000_People</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratio_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratio_deaths]</local-name>
            <parent-name>[Countries_Top5_Deaths.csv]</parent-name>
            <remote-alias>ratio_deaths</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (women_in_power_top5countries_deaths.csv)]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Woman Head of State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Woman Head of State]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Woman Head of State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of elected and appointed female heads of state or governments since 1946</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of elected and appointed female heads of state or governments since 1946]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Number of elected and appointed female heads of state or governments since 1946</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of ministerial positions held by women</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of ministerial positions held by women]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Percentage of ministerial positions held by women</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank of ministerial positions held by women</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank of ministerial positions held by women]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Rank of ministerial positions held by women</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of seats held by women in the national legislature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of seats held by women in the national legislature]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Percentage of seats held by women in the national legislature</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank of seats held by women in the national legislature</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank of seats held by women in the national legislature]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Rank of seats held by women in the national legislature</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of female candidates in the most recent elections to the national legislature</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Percentage of female candidates in the most recent elections to the national legislature]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Percentage of female candidates in the most recent elections to the national legislature</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank of female candidates in the most recent elections to the national legislature</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rank of female candidates in the most recent elections to the national legislature]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Rank of female candidates in the most recent elections to the national legislature</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of elected seats held by women in local government bodies</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Percentage of elected seats held by women in local government bodies]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Percentage of elected seats held by women in local government bodies</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank of elected seats held by women in local government bodies</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Rank of elected seats held by women in local government bodies]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Rank of elected seats held by women in local government bodies</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political parity score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Political parity score]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Political parity score</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political parity score rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Political parity score rank]</local-name>
            <parent-name>[women_in_power_top5countries_deaths.csv]</parent-name>
            <remote-alias>Political parity score rank</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (policy_top5_deaths.csv)]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[policy_id]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>policy_id</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entry_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[entry_type]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>entry_type</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>correct_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[correct_type]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>correct_type</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>update_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[update_type]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>update_type</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>update_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[update_level]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>update_level</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_announced</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_announced]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>date_announced</remote-alias>
            <ordinal>49</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_start</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_start]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>date_start</remote-alias>
            <ordinal>50</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_end</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_end]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>date_end</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>init_country_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[init_country_level]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>init_country_level</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic_policy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[domestic_policy]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>domestic_policy</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_sub_cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_sub_cat]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>type_sub_cat</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_text]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>type_text</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>school_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[school_status]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>school_status</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_country]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_country</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_geog_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_geog_level]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_geog_level</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_region]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_region</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_province]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_province</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_city]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_city</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_other]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_other</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_who_what</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_who_what]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_who_what</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_direction]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>target_direction</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travel_mechanism</remote-name>
            <remote-type>129</remote-type>
            <local-name>[travel_mechanism]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>travel_mechanism</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compliance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[compliance]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>compliance</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enforcer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[enforcer]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>enforcer</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_high_est</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_high_est]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>index_high_est</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_med_est</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_med_est]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>index_med_est</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_low_est</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_low_est]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>index_low_est</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_country_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_country_rank]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>index_country_rank</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_updated</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_updated]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>date_updated</remote-alias>
            <ordinal>77</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recorded_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[recorded_date]</local-name>
            <parent-name>[policy_top5_deaths.csv]</parent-name>
            <remote-alias>recorded_date</remote-alias>
            <ordinal>78</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (total_policies_and_type_by_country.csv)]</local-name>
            <parent-name>[total_policies_and_type_by_country.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (total_policies_and_type_by_country.csv)]</local-name>
            <parent-name>[total_policies_and_type_by_country.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type (total_policies_and_type_by_country.csv)]</local-name>
            <parent-name>[total_policies_and_type_by_country.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_policies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_policies]</local-name>
            <parent-name>[total_policies_and_type_by_country.csv]</parent-name>
            <remote-alias>total_policies</remote-alias>
            <ordinal>82</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Policies by Type per Country' datatype='real' name='[Calculation_1534812717374939136]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='Countries1' datatype='string' name='[Countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Death Rate Per 1000 year2017' datatype='real' name='[Death_Rate_Per_1000_year2017]' role='dimension' type='quantitative' />
      <column caption='Diabetes Prevelance' datatype='real' name='[Diabetes_Prevelance]' role='measure' type='quantitative' />
      <column caption='F1 (policy top5 deaths.csv)' datatype='integer' name='[F1 (policy_top5_deaths.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (total policies and type by country.csv)' datatype='integer' name='[F1 (total_policies_and_type_by_country.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (women in power top5countries deaths.csv)' datatype='integer' hidden='true' name='[F1 (women_in_power_top5countries_deaths.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column caption='Fertility Rate' datatype='real' name='[Fertility_Rate]' role='measure' type='quantitative' />
      <column caption='Gdp Ppp' datatype='integer' name='[GDP_PPP]' role='measure' type='quantitative' />
      <column caption='Government Effectiveness' datatype='real' name='[Government_Effectiveness]' role='measure' type='quantitative' />
      <column caption='Government Healthcare Spend' datatype='real' name='[Government_Healthcare_Spend]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per 1000 People' datatype='real' name='[Hospital_Beds_Per_1000_People]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Year' datatype='integer' name='[Hospital_Beds_Year]' role='dimension' type='quantitative' />
      <column caption='Labour Force Total' datatype='integer' name='[Labour_Force_Total]' role='measure' type='quantitative' />
      <column caption='Obesity Rate' datatype='real' name='[Obesity_Rate]' role='measure' type='quantitative' />
      <column caption='PM2.5 air pollution mean annual exposure microgramspercubicmeter 2017' datatype='real' name='[PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' role='measure' type='quantitative' />
      <column caption='PPM2.5 air pollution population exposed to levels exceeding WHO guideline 2017' datatype='real' name='[PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017]' role='measure' type='quantitative' />
      <column caption='Political Stability' datatype='real' name='[Political_Stability]' role='measure' type='quantitative' />
      <column caption='Population Aged 65 and above percentage' datatype='real' name='[Population_Aged_65_and_above_percentage]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[Population_Density]' role='measure' type='quantitative' />
      <column caption='Rule of Law' datatype='real' name='[Rule_of_Law]' role='measure' type='quantitative' />
      <column caption='Smoking Prevalence' datatype='real' name='[Smoking_Prevalence]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <column caption='Urban Population 1' datatype='integer' name='[Urban_Population 1]' role='measure' type='quantitative' />
      <column caption='Urban Population' datatype='integer' name='[Urban_Population]' role='measure' type='quantitative' />
      <column caption='Women In Parliament' datatype='real' name='[Women_In_Parliament]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Countries_Top5_Deaths.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='total_policies_and_type_by_country.csv' datatype='table' name='[__tableau_internal_object_id__].[total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
      <column caption='Correct Type' datatype='string' name='[correct_type]' role='dimension' type='nominal' />
      <column caption='Country (Total Policies And Type By Country.Csv)' datatype='string' name='[country (total_policies_and_type_by_country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
      <column caption='Date End' datatype='string' name='[date_end]' role='dimension' type='nominal' />
      <column caption='Date Start' datatype='date' name='[date_start]' role='dimension' type='ordinal' />
      <column caption='Date Updated' datatype='date' name='[date_updated]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Domestic Policy' datatype='integer' name='[domestic_policy]' role='measure' type='quantitative' />
      <column caption='Enforcer' datatype='string' name='[enforcer]' role='dimension' type='nominal' />
      <column caption='Entry Type' datatype='string' name='[entry_type]' role='dimension' type='nominal' />
      <column caption='Index Country Rank' datatype='string' name='[index_country_rank]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Index High Est' datatype='string' name='[index_high_est]' role='dimension' type='nominal' />
      <column caption='Index Low Est' datatype='string' name='[index_low_est]' role='dimension' type='nominal' />
      <column caption='Index Med Est' datatype='string' name='[index_med_est]' role='dimension' type='nominal' />
      <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Link' datatype='string' name='[link]' role='dimension' type='nominal' />
      <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Ratio Deaths' datatype='real' name='[ratio_deaths]' role='measure' type='quantitative' />
      <column caption='Recorded Date' datatype='datetime' name='[recorded_date]' role='dimension' type='ordinal' />
      <column caption='School Status' datatype='string' name='[school_status]' role='dimension' type='nominal' />
      <column caption='Target City' datatype='string' name='[target_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Target Country' datatype='string' name='[target_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Target Direction' datatype='string' name='[target_direction]' role='dimension' type='nominal' />
      <column caption='Target Geog Level' datatype='string' name='[target_geog_level]' role='dimension' type='nominal' />
      <column caption='Target Other' datatype='string' name='[target_other]' role='dimension' type='nominal' />
      <column caption='Target Province' datatype='string' name='[target_province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Target Region' datatype='string' name='[target_region]' role='dimension' type='nominal' />
      <column caption='Target Who What' datatype='string' name='[target_who_what]' role='dimension' type='nominal' />
      <column caption='Total Policies' datatype='integer' name='[total_policies]' role='measure' type='quantitative' />
      <column caption='Travel Mechanism' datatype='string' name='[travel_mechanism]' role='dimension' type='nominal' />
      <column caption='Type (Total Policies And Type By Country.Csv)' datatype='string' name='[type (total_policies_and_type_by_country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Type Sub Cat' datatype='string' name='[type_sub_cat]' role='dimension' type='nominal' />
      <column caption='Type Text' datatype='string' name='[type_text]' role='dimension' type='nominal' />
      <column caption='Update Level' datatype='string' name='[update_level]' role='dimension' type='nominal' />
      <column caption='Update Type' datatype='string' name='[update_type]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Countries_Top5_Deaths.csv' id='Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4'>
            <properties context=''>
              <relation join='right' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Countries_Top5_Deaths.csv].[Countries]' />
                    <expression op='[policy_top5_deaths.csv].[country]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Countries_Top5_Deaths.csv].[Countries]' />
                      <expression op='[women_in_power_top5countries_deaths.csv].[Country]' />
                    </expression>
                  </clause>
                  <relation connection='textscan.1evdmph1epu9ir10mknbk1qzh8qm' name='Countries_Top5_Deaths.csv' table='[Countries_Top5_Deaths#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='integer' name='F1' ordinal='0' />
                      <column datatype='string' name='Countries' ordinal='1' />
                      <column datatype='integer' name='Total_Cases' ordinal='2' />
                      <column datatype='integer' name='Total_Deaths' ordinal='3' />
                      <column datatype='real' name='Population_Density' ordinal='4' />
                      <column datatype='real' name='Fertility_Rate' ordinal='5' />
                      <column datatype='integer' name='GDP_PPP' ordinal='6' />
                      <column datatype='real' name='Corruption' ordinal='7' />
                      <column datatype='real' name='Government_Effectiveness' ordinal='8' />
                      <column datatype='real' name='Political_Stability' ordinal='9' />
                      <column datatype='real' name='Rule_of_Law' ordinal='10' />
                      <column datatype='real' name='Government_Healthcare_Spend' ordinal='11' />
                      <column datatype='integer' name='Urban_Population' ordinal='12' />
                      <column datatype='real' name='Smoking_Prevalence' ordinal='13' />
                      <column datatype='integer' name='Tourism' ordinal='14' />
                      <column datatype='real' name='Women_In_Parliament' ordinal='15' />
                      <column datatype='real' name='Obesity_Rate' ordinal='16' />
                      <column datatype='real' name='Diabetes_Prevelance' ordinal='17' />
                      <column datatype='integer' name='Labour_Force_Total' ordinal='18' />
                      <column datatype='integer' name='Population' ordinal='19' />
                      <column datatype='real' name='Population_Aged_65_and_above_percentage' ordinal='20' />
                      <column datatype='integer' name='Urban_Population 1' ordinal='21' />
                      <column datatype='real' name='Death_Rate_Per_1000_year2017' ordinal='22' />
                      <column datatype='real' name='PM2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017' ordinal='23' />
                      <column datatype='real' name='PPM2.5_air_pollution_population_exposed_to_levels_exceeding_WHO_guideline_2017' ordinal='24' />
                      <column datatype='integer' name='Hospital_Beds_Year' ordinal='25' />
                      <column datatype='real' name='Hospital_Beds_Per_1000_People' ordinal='26' />
                      <column datatype='real' name='ratio_deaths' ordinal='27' />
                    </columns>
                  </relation>
                  <relation connection='textscan.1evdmph1epu9ir10mknbk1qzh8qm' name='women_in_power_top5countries_deaths.csv' table='[women_in_power_top5countries_deaths#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='integer' name='F1' ordinal='0' />
                      <column datatype='string' name='Country' ordinal='1' />
                      <column datatype='integer' name='Woman Head of State' ordinal='2' />
                      <column datatype='integer' name='Number of elected and appointed female heads of state or governments since 1946' ordinal='3' />
                      <column datatype='real' name='Percentage of ministerial positions held by women' ordinal='4' />
                      <column datatype='integer' name='Rank of ministerial positions held by women' ordinal='5' />
                      <column datatype='real' name='Percentage of seats held by women in the national legislature' ordinal='6' />
                      <column datatype='integer' name='Rank of seats held by women in the national legislature' ordinal='7' />
                      <column datatype='string' name='Percentage of female candidates in the most recent elections to the national legislature' ordinal='8' />
                      <column datatype='string' name='Rank of female candidates in the most recent elections to the national legislature' ordinal='9' />
                      <column datatype='string' name='Percentage of elected seats held by women in local government bodies' ordinal='10' />
                      <column datatype='string' name='Rank of elected seats held by women in local government bodies' ordinal='11' />
                      <column datatype='real' name='Political parity score' ordinal='12' />
                      <column datatype='integer' name='Political parity score rank' ordinal='13' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.1jn30401jdtcoe1214w5f0bmkho0' name='policy_top5_deaths.csv' table='[policy_top5_deaths#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='integer' name='policy_id' ordinal='1' />
                    <column datatype='string' name='entry_type' ordinal='2' />
                    <column datatype='string' name='correct_type' ordinal='3' />
                    <column datatype='string' name='update_type' ordinal='4' />
                    <column datatype='string' name='update_level' ordinal='5' />
                    <column datatype='string' name='description' ordinal='6' />
                    <column datatype='date' name='date_announced' ordinal='7' />
                    <column datatype='date' name='date_start' ordinal='8' />
                    <column datatype='string' name='date_end' ordinal='9' />
                    <column datatype='string' name='country' ordinal='10' />
                    <column datatype='string' name='init_country_level' ordinal='11' />
                    <column datatype='integer' name='domestic_policy' ordinal='12' />
                    <column datatype='string' name='province' ordinal='13' />
                    <column datatype='string' name='city' ordinal='14' />
                    <column datatype='string' name='type' ordinal='15' />
                    <column datatype='string' name='type_sub_cat' ordinal='16' />
                    <column datatype='string' name='type_text' ordinal='17' />
                    <column datatype='string' name='school_status' ordinal='18' />
                    <column datatype='string' name='target_country' ordinal='19' />
                    <column datatype='string' name='target_geog_level' ordinal='20' />
                    <column datatype='string' name='target_region' ordinal='21' />
                    <column datatype='string' name='target_province' ordinal='22' />
                    <column datatype='string' name='target_city' ordinal='23' />
                    <column datatype='string' name='target_other' ordinal='24' />
                    <column datatype='string' name='target_who_what' ordinal='25' />
                    <column datatype='string' name='target_direction' ordinal='26' />
                    <column datatype='string' name='travel_mechanism' ordinal='27' />
                    <column datatype='string' name='compliance' ordinal='28' />
                    <column datatype='string' name='enforcer' ordinal='29' />
                    <column datatype='string' name='index_high_est' ordinal='30' />
                    <column datatype='string' name='index_med_est' ordinal='31' />
                    <column datatype='string' name='index_low_est' ordinal='32' />
                    <column datatype='string' name='index_country_rank' ordinal='33' />
                    <column datatype='string' name='link' ordinal='34' />
                    <column datatype='date' name='date_updated' ordinal='35' />
                    <column datatype='datetime' name='recorded_date' ordinal='36' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
          <object caption='total_policies_and_type_by_country.csv' id='total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB'>
            <properties context=''>
              <relation connection='textscan.1jn30401jdtcoe1214w5f0bmkho0' name='total_policies_and_type_by_country.csv' table='[total_policies_and_type_by_country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='integer' name='total_policies' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[country (total_policies_and_type_by_country.csv)]' />
            </expression>
            <first-end-point object-id='Countries_Top5_Deaths.csv_B6814A6B79434A9D8523C3A899A054F4' />
            <second-end-point object-id='total_policies_and_type_by_country.csv_463EF6BDA411430C84EC701586E3B0FB' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' inline='true' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_CFR' name='excel-direct.1i1gv5y0t8lzi916uavbf155t1or'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD/Covid_CFR.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19 Hackathon Dataset' name='textscan.05806o815zl1h81e5zmm60y6p2e0'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='COVID19 Hackathon Dataset.csv' password='' server='' />
          </named-connection>
          <named-connection caption='policy_final' name='textscan.1nfo8c91p549g01fv0k6e14gozvi'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='policy_final.csv' password='' server='' />
          </named-connection>
          <named-connection caption='govtresponse_latest' name='textscan.19721xx0r4sqrn1d384cv1e2c8md'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='govtresponse_latest.csv' password='' server='' />
          </named-connection>
          <named-connection caption='covid_complete' name='textscan.1t0y6xm1yl0bbb1eig1u21jksnt7'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='covid_complete.csv' password='' server='' />
          </named-connection>
          <named-connection caption='policy_final (2)' name='textscan.1eq5gho0npm8du1h0gotd1o7ly07'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='policy_final.csv' password='' server='' />
          </named-connection>
          <named-connection caption='govtresponse_latest (2)' name='textscan.1yfh5pg156ldfw19tmmle146caf5'>
            <connection class='textscan' directory='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Top5 Countries Covid Deaths - ZL.twb Files/Users/penelope/Documents/Hackathon TrueCue WiD' filename='govtresponse_latest.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='full' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[covid_complete.csv].[countries]' />
                <expression op='[govtresponse_latest.csv].[CountryName]' />
              </expression>
              <expression op='='>
                <expression op='[covid_complete.csv].[date]' />
                <expression op='[govtresponse_latest.csv].[Date]' />
              </expression>
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[covid_complete.csv].[countries]' />
                  <expression op='[policy_final.csv].[country]' />
                </expression>
                <expression op='='>
                  <expression op='[covid_complete.csv].[date]' />
                  <expression op='[policy_final.csv].[date_announced]' />
                </expression>
              </expression>
            </clause>
            <relation connection='textscan.1t0y6xm1yl0bbb1eig1u21jksnt7' name='covid_complete.csv' table='[covid_complete#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='date' name='date' ordinal='1' />
                <column datatype='string' name='continent' ordinal='2' />
                <column datatype='string' name='countries' ordinal='3' />
                <column datatype='integer' name='new_cases' ordinal='4' />
                <column datatype='integer' name='new_deaths' ordinal='5' />
                <column datatype='integer' name='total_cases' ordinal='6' />
                <column datatype='integer' name='total_deaths' ordinal='7' />
                <column datatype='integer' name='weekly_cases' ordinal='8' />
                <column datatype='integer' name='weekly_deaths' ordinal='9' />
                <column datatype='real' name='population_density' ordinal='10' />
                <column datatype='string' name='fertility_rate' ordinal='11' />
                <column datatype='integer' name='gdp_ppp' ordinal='12' />
                <column datatype='real' name='corruption' ordinal='13' />
                <column datatype='real' name='government_effectiveness' ordinal='14' />
                <column datatype='real' name='political_stability' ordinal='15' />
                <column datatype='real' name='rule_of_law' ordinal='16' />
                <column datatype='string' name='government_healthcare_spend' ordinal='17' />
                <column datatype='string' name='urban_population_percentage' ordinal='18' />
                <column datatype='string' name='smoking_prevalence' ordinal='19' />
                <column datatype='string' name='tourism' ordinal='20' />
                <column datatype='real' name='women_in_parliament' ordinal='21' />
                <column datatype='real' name='obesity_rate' ordinal='22' />
                <column datatype='integer' name='runtot_new_cases' ordinal='23' />
                <column datatype='integer' name='runtot_new_deaths' ordinal='24' />
                <column datatype='string' name='country' ordinal='25' />
                <column datatype='string' name='country code' ordinal='26' />
                <column datatype='integer' name='year' ordinal='27' />
                <column datatype='real' name='diabetes_prevelance' ordinal='28' />
                <column datatype='string' name='labour_force_total' ordinal='29' />
                <column datatype='integer' name='population' ordinal='30' />
                <column datatype='string' name='population_aged_65_and_above_percentage' ordinal='31' />
                <column datatype='integer' name='urban_population' ordinal='32' />
                <column datatype='string' name='death_rate_per_1000_year2017' ordinal='33' />
                <column datatype='real' name='pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017' ordinal='34' />
                <column datatype='real' name='pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017' ordinal='35' />
                <column datatype='integer' name='hospital_beds_year' ordinal='36' />
                <column datatype='real' name='hospital_beds_per_1000_people' ordinal='37' />
              </columns>
            </relation>
            <relation connection='textscan.1eq5gho0npm8du1h0gotd1o7ly07' name='policy_final.csv' table='[policy_final#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='integer' name='policy_id' ordinal='1' />
                <column datatype='string' name='entry_type' ordinal='2' />
                <column datatype='string' name='correct_type' ordinal='3' />
                <column datatype='string' name='update_type' ordinal='4' />
                <column datatype='string' name='update_level' ordinal='5' />
                <column datatype='string' name='description' ordinal='6' />
                <column datatype='date' name='date_announced' ordinal='7' />
                <column datatype='date' name='date_start' ordinal='8' />
                <column datatype='string' name='date_end' ordinal='9' />
                <column datatype='string' name='country' ordinal='10' />
                <column datatype='string' name='init_country_level' ordinal='11' />
                <column datatype='integer' name='domestic_policy' ordinal='12' />
                <column datatype='string' name='province' ordinal='13' />
                <column datatype='string' name='city' ordinal='14' />
                <column datatype='string' name='type' ordinal='15' />
                <column datatype='string' name='type_sub_cat' ordinal='16' />
                <column datatype='string' name='type_text' ordinal='17' />
                <column datatype='string' name='school_status' ordinal='18' />
                <column datatype='string' name='target_country' ordinal='19' />
                <column datatype='string' name='target_geog_level' ordinal='20' />
                <column datatype='string' name='target_region' ordinal='21' />
                <column datatype='string' name='target_province' ordinal='22' />
                <column datatype='string' name='target_city' ordinal='23' />
                <column datatype='string' name='target_other' ordinal='24' />
                <column datatype='string' name='target_who_what' ordinal='25' />
                <column datatype='string' name='target_direction' ordinal='26' />
                <column datatype='string' name='travel_mechanism' ordinal='27' />
                <column datatype='string' name='compliance' ordinal='28' />
                <column datatype='string' name='enforcer' ordinal='29' />
                <column datatype='string' name='index_high_est' ordinal='30' />
                <column datatype='string' name='index_med_est' ordinal='31' />
                <column datatype='string' name='index_low_est' ordinal='32' />
                <column datatype='string' name='index_country_rank' ordinal='33' />
                <column datatype='string' name='link' ordinal='34' />
                <column datatype='date' name='date_updated' ordinal='35' />
                <column datatype='datetime' name='recorded_date' ordinal='36' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1yfh5pg156ldfw19tmmle146caf5' name='govtresponse_latest.csv' table='[govtresponse_latest#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='CountryName' ordinal='0' />
              <column datatype='string' name='CountryCode' ordinal='1' />
              <column datatype='string' name='RegionName' ordinal='2' />
              <column datatype='string' name='RegionCode' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='real' name='C1_School closing' ordinal='5' />
              <column datatype='integer' name='C1_Flag' ordinal='6' />
              <column datatype='real' name='C2_Workplace closing' ordinal='7' />
              <column datatype='integer' name='C2_Flag' ordinal='8' />
              <column datatype='real' name='C3_Cancel public events' ordinal='9' />
              <column datatype='integer' name='C3_Flag' ordinal='10' />
              <column datatype='real' name='C4_Restrictions on gatherings' ordinal='11' />
              <column datatype='integer' name='C4_Flag' ordinal='12' />
              <column datatype='real' name='C5_Close public transport' ordinal='13' />
              <column datatype='integer' name='C5_Flag' ordinal='14' />
              <column datatype='real' name='C6_Stay at home requirements' ordinal='15' />
              <column datatype='integer' name='C6_Flag' ordinal='16' />
              <column datatype='real' name='C7_Restrictions on internal movement' ordinal='17' />
              <column datatype='integer' name='C7_Flag' ordinal='18' />
              <column datatype='real' name='C8_International travel controls' ordinal='19' />
              <column datatype='real' name='E1_Income support' ordinal='20' />
              <column datatype='integer' name='E1_Flag' ordinal='21' />
              <column datatype='real' name='E2_Debt/contract relief' ordinal='22' />
              <column datatype='real' name='E3_Fiscal measures' ordinal='23' />
              <column datatype='real' name='E4_International support' ordinal='24' />
              <column datatype='real' name='H1_Public information campaigns' ordinal='25' />
              <column datatype='integer' name='H1_Flag' ordinal='26' />
              <column datatype='real' name='H2_Testing policy' ordinal='27' />
              <column datatype='real' name='H3_Contact tracing' ordinal='28' />
              <column datatype='real' name='H4_Emergency investment in healthcare' ordinal='29' />
              <column datatype='real' name='H5_Investment in vaccines' ordinal='30' />
              <column datatype='string' name='M1_Wildcard' ordinal='31' />
              <column datatype='integer' name='ConfirmedCases' ordinal='32' />
              <column datatype='integer' name='ConfirmedDeaths' ordinal='33' />
              <column datatype='real' name='StringencyIndex' ordinal='34' />
              <column datatype='real' name='StringencyIndexForDisplay' ordinal='35' />
              <column datatype='real' name='StringencyLegacyIndex' ordinal='36' />
              <column datatype='real' name='StringencyLegacyIndexForDisplay' ordinal='37' />
              <column datatype='real' name='GovernmentResponseIndex' ordinal='38' />
              <column datatype='real' name='GovernmentResponseIndexForDisplay' ordinal='39' />
              <column datatype='real' name='ContainmentHealthIndex' ordinal='40' />
              <column datatype='real' name='ContainmentHealthIndexForDisplay' ordinal='41' />
              <column datatype='real' name='EconomicSupportIndex' ordinal='42' />
              <column datatype='real' name='EconomicSupportIndexForDisplay' ordinal='43' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='full' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[covid_complete.csv].[countries]' />
                <expression op='[govtresponse_latest.csv].[CountryName]' />
              </expression>
              <expression op='='>
                <expression op='[covid_complete.csv].[date]' />
                <expression op='[govtresponse_latest.csv].[Date]' />
              </expression>
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[covid_complete.csv].[countries]' />
                  <expression op='[policy_final.csv].[country]' />
                </expression>
                <expression op='='>
                  <expression op='[covid_complete.csv].[date]' />
                  <expression op='[policy_final.csv].[date_announced]' />
                </expression>
              </expression>
            </clause>
            <relation connection='textscan.1t0y6xm1yl0bbb1eig1u21jksnt7' name='covid_complete.csv' table='[covid_complete#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='date' name='date' ordinal='1' />
                <column datatype='string' name='continent' ordinal='2' />
                <column datatype='string' name='countries' ordinal='3' />
                <column datatype='integer' name='new_cases' ordinal='4' />
                <column datatype='integer' name='new_deaths' ordinal='5' />
                <column datatype='integer' name='total_cases' ordinal='6' />
                <column datatype='integer' name='total_deaths' ordinal='7' />
                <column datatype='integer' name='weekly_cases' ordinal='8' />
                <column datatype='integer' name='weekly_deaths' ordinal='9' />
                <column datatype='real' name='population_density' ordinal='10' />
                <column datatype='string' name='fertility_rate' ordinal='11' />
                <column datatype='integer' name='gdp_ppp' ordinal='12' />
                <column datatype='real' name='corruption' ordinal='13' />
                <column datatype='real' name='government_effectiveness' ordinal='14' />
                <column datatype='real' name='political_stability' ordinal='15' />
                <column datatype='real' name='rule_of_law' ordinal='16' />
                <column datatype='string' name='government_healthcare_spend' ordinal='17' />
                <column datatype='string' name='urban_population_percentage' ordinal='18' />
                <column datatype='string' name='smoking_prevalence' ordinal='19' />
                <column datatype='string' name='tourism' ordinal='20' />
                <column datatype='real' name='women_in_parliament' ordinal='21' />
                <column datatype='real' name='obesity_rate' ordinal='22' />
                <column datatype='integer' name='runtot_new_cases' ordinal='23' />
                <column datatype='integer' name='runtot_new_deaths' ordinal='24' />
                <column datatype='string' name='country' ordinal='25' />
                <column datatype='string' name='country code' ordinal='26' />
                <column datatype='integer' name='year' ordinal='27' />
                <column datatype='real' name='diabetes_prevelance' ordinal='28' />
                <column datatype='string' name='labour_force_total' ordinal='29' />
                <column datatype='integer' name='population' ordinal='30' />
                <column datatype='string' name='population_aged_65_and_above_percentage' ordinal='31' />
                <column datatype='integer' name='urban_population' ordinal='32' />
                <column datatype='string' name='death_rate_per_1000_year2017' ordinal='33' />
                <column datatype='real' name='pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017' ordinal='34' />
                <column datatype='real' name='pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017' ordinal='35' />
                <column datatype='integer' name='hospital_beds_year' ordinal='36' />
                <column datatype='real' name='hospital_beds_per_1000_people' ordinal='37' />
              </columns>
            </relation>
            <relation connection='textscan.1eq5gho0npm8du1h0gotd1o7ly07' name='policy_final.csv' table='[policy_final#csv]' type='table'>
              <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='integer' name='policy_id' ordinal='1' />
                <column datatype='string' name='entry_type' ordinal='2' />
                <column datatype='string' name='correct_type' ordinal='3' />
                <column datatype='string' name='update_type' ordinal='4' />
                <column datatype='string' name='update_level' ordinal='5' />
                <column datatype='string' name='description' ordinal='6' />
                <column datatype='date' name='date_announced' ordinal='7' />
                <column datatype='date' name='date_start' ordinal='8' />
                <column datatype='string' name='date_end' ordinal='9' />
                <column datatype='string' name='country' ordinal='10' />
                <column datatype='string' name='init_country_level' ordinal='11' />
                <column datatype='integer' name='domestic_policy' ordinal='12' />
                <column datatype='string' name='province' ordinal='13' />
                <column datatype='string' name='city' ordinal='14' />
                <column datatype='string' name='type' ordinal='15' />
                <column datatype='string' name='type_sub_cat' ordinal='16' />
                <column datatype='string' name='type_text' ordinal='17' />
                <column datatype='string' name='school_status' ordinal='18' />
                <column datatype='string' name='target_country' ordinal='19' />
                <column datatype='string' name='target_geog_level' ordinal='20' />
                <column datatype='string' name='target_region' ordinal='21' />
                <column datatype='string' name='target_province' ordinal='22' />
                <column datatype='string' name='target_city' ordinal='23' />
                <column datatype='string' name='target_other' ordinal='24' />
                <column datatype='string' name='target_who_what' ordinal='25' />
                <column datatype='string' name='target_direction' ordinal='26' />
                <column datatype='string' name='travel_mechanism' ordinal='27' />
                <column datatype='string' name='compliance' ordinal='28' />
                <column datatype='string' name='enforcer' ordinal='29' />
                <column datatype='string' name='index_high_est' ordinal='30' />
                <column datatype='string' name='index_med_est' ordinal='31' />
                <column datatype='string' name='index_low_est' ordinal='32' />
                <column datatype='string' name='index_country_rank' ordinal='33' />
                <column datatype='string' name='link' ordinal='34' />
                <column datatype='date' name='date_updated' ordinal='35' />
                <column datatype='datetime' name='recorded_date' ordinal='36' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1yfh5pg156ldfw19tmmle146caf5' name='govtresponse_latest.csv' table='[govtresponse_latest#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='CountryName' ordinal='0' />
              <column datatype='string' name='CountryCode' ordinal='1' />
              <column datatype='string' name='RegionName' ordinal='2' />
              <column datatype='string' name='RegionCode' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='real' name='C1_School closing' ordinal='5' />
              <column datatype='integer' name='C1_Flag' ordinal='6' />
              <column datatype='real' name='C2_Workplace closing' ordinal='7' />
              <column datatype='integer' name='C2_Flag' ordinal='8' />
              <column datatype='real' name='C3_Cancel public events' ordinal='9' />
              <column datatype='integer' name='C3_Flag' ordinal='10' />
              <column datatype='real' name='C4_Restrictions on gatherings' ordinal='11' />
              <column datatype='integer' name='C4_Flag' ordinal='12' />
              <column datatype='real' name='C5_Close public transport' ordinal='13' />
              <column datatype='integer' name='C5_Flag' ordinal='14' />
              <column datatype='real' name='C6_Stay at home requirements' ordinal='15' />
              <column datatype='integer' name='C6_Flag' ordinal='16' />
              <column datatype='real' name='C7_Restrictions on internal movement' ordinal='17' />
              <column datatype='integer' name='C7_Flag' ordinal='18' />
              <column datatype='real' name='C8_International travel controls' ordinal='19' />
              <column datatype='real' name='E1_Income support' ordinal='20' />
              <column datatype='integer' name='E1_Flag' ordinal='21' />
              <column datatype='real' name='E2_Debt/contract relief' ordinal='22' />
              <column datatype='real' name='E3_Fiscal measures' ordinal='23' />
              <column datatype='real' name='E4_International support' ordinal='24' />
              <column datatype='real' name='H1_Public information campaigns' ordinal='25' />
              <column datatype='integer' name='H1_Flag' ordinal='26' />
              <column datatype='real' name='H2_Testing policy' ordinal='27' />
              <column datatype='real' name='H3_Contact tracing' ordinal='28' />
              <column datatype='real' name='H4_Emergency investment in healthcare' ordinal='29' />
              <column datatype='real' name='H5_Investment in vaccines' ordinal='30' />
              <column datatype='string' name='M1_Wildcard' ordinal='31' />
              <column datatype='integer' name='ConfirmedCases' ordinal='32' />
              <column datatype='integer' name='ConfirmedDeaths' ordinal='33' />
              <column datatype='real' name='StringencyIndex' ordinal='34' />
              <column datatype='real' name='StringencyIndexForDisplay' ordinal='35' />
              <column datatype='real' name='StringencyLegacyIndex' ordinal='36' />
              <column datatype='real' name='StringencyLegacyIndexForDisplay' ordinal='37' />
              <column datatype='real' name='GovernmentResponseIndex' ordinal='38' />
              <column datatype='real' name='GovernmentResponseIndexForDisplay' ordinal='39' />
              <column datatype='real' name='ContainmentHealthIndex' ordinal='40' />
              <column datatype='real' name='ContainmentHealthIndexForDisplay' ordinal='41' />
              <column datatype='real' name='EconomicSupportIndex' ordinal='42' />
              <column datatype='real' name='EconomicSupportIndexForDisplay' ordinal='43' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[C1_Flag]' value='[govtresponse_latest.csv].[C1_Flag]' />
          <map key='[C1_School closing]' value='[govtresponse_latest.csv].[C1_School closing]' />
          <map key='[C2_Flag]' value='[govtresponse_latest.csv].[C2_Flag]' />
          <map key='[C2_Workplace closing]' value='[govtresponse_latest.csv].[C2_Workplace closing]' />
          <map key='[C3_Cancel public events]' value='[govtresponse_latest.csv].[C3_Cancel public events]' />
          <map key='[C3_Flag]' value='[govtresponse_latest.csv].[C3_Flag]' />
          <map key='[C4_Flag]' value='[govtresponse_latest.csv].[C4_Flag]' />
          <map key='[C4_Restrictions on gatherings]' value='[govtresponse_latest.csv].[C4_Restrictions on gatherings]' />
          <map key='[C5_Close public transport]' value='[govtresponse_latest.csv].[C5_Close public transport]' />
          <map key='[C5_Flag]' value='[govtresponse_latest.csv].[C5_Flag]' />
          <map key='[C6_Flag]' value='[govtresponse_latest.csv].[C6_Flag]' />
          <map key='[C6_Stay at home requirements]' value='[govtresponse_latest.csv].[C6_Stay at home requirements]' />
          <map key='[C7_Flag]' value='[govtresponse_latest.csv].[C7_Flag]' />
          <map key='[C7_Restrictions on internal movement]' value='[govtresponse_latest.csv].[C7_Restrictions on internal movement]' />
          <map key='[C8_International travel controls]' value='[govtresponse_latest.csv].[C8_International travel controls]' />
          <map key='[ConfirmedCases]' value='[govtresponse_latest.csv].[ConfirmedCases]' />
          <map key='[ConfirmedDeaths]' value='[govtresponse_latest.csv].[ConfirmedDeaths]' />
          <map key='[ContainmentHealthIndexForDisplay]' value='[govtresponse_latest.csv].[ContainmentHealthIndexForDisplay]' />
          <map key='[ContainmentHealthIndex]' value='[govtresponse_latest.csv].[ContainmentHealthIndex]' />
          <map key='[CountryCode]' value='[govtresponse_latest.csv].[CountryCode]' />
          <map key='[CountryName]' value='[govtresponse_latest.csv].[CountryName]' />
          <map key='[Date]' value='[govtresponse_latest.csv].[Date]' />
          <map key='[E1_Flag]' value='[govtresponse_latest.csv].[E1_Flag]' />
          <map key='[E1_Income support]' value='[govtresponse_latest.csv].[E1_Income support]' />
          <map key='[E2_Debt/contract relief]' value='[govtresponse_latest.csv].[E2_Debt/contract relief]' />
          <map key='[E3_Fiscal measures]' value='[govtresponse_latest.csv].[E3_Fiscal measures]' />
          <map key='[E4_International support]' value='[govtresponse_latest.csv].[E4_International support]' />
          <map key='[EconomicSupportIndexForDisplay]' value='[govtresponse_latest.csv].[EconomicSupportIndexForDisplay]' />
          <map key='[EconomicSupportIndex]' value='[govtresponse_latest.csv].[EconomicSupportIndex]' />
          <map key='[F1 (policy_final.csv)]' value='[policy_final.csv].[F1]' />
          <map key='[F1]' value='[covid_complete.csv].[F1]' />
          <map key='[GovernmentResponseIndexForDisplay]' value='[govtresponse_latest.csv].[GovernmentResponseIndexForDisplay]' />
          <map key='[GovernmentResponseIndex]' value='[govtresponse_latest.csv].[GovernmentResponseIndex]' />
          <map key='[H1_Flag]' value='[govtresponse_latest.csv].[H1_Flag]' />
          <map key='[H1_Public information campaigns]' value='[govtresponse_latest.csv].[H1_Public information campaigns]' />
          <map key='[H2_Testing policy]' value='[govtresponse_latest.csv].[H2_Testing policy]' />
          <map key='[H3_Contact tracing]' value='[govtresponse_latest.csv].[H3_Contact tracing]' />
          <map key='[H4_Emergency investment in healthcare]' value='[govtresponse_latest.csv].[H4_Emergency investment in healthcare]' />
          <map key='[H5_Investment in vaccines]' value='[govtresponse_latest.csv].[H5_Investment in vaccines]' />
          <map key='[M1_Wildcard]' value='[govtresponse_latest.csv].[M1_Wildcard]' />
          <map key='[RegionCode]' value='[govtresponse_latest.csv].[RegionCode]' />
          <map key='[RegionName]' value='[govtresponse_latest.csv].[RegionName]' />
          <map key='[StringencyIndexForDisplay]' value='[govtresponse_latest.csv].[StringencyIndexForDisplay]' />
          <map key='[StringencyIndex]' value='[govtresponse_latest.csv].[StringencyIndex]' />
          <map key='[StringencyLegacyIndexForDisplay]' value='[govtresponse_latest.csv].[StringencyLegacyIndexForDisplay]' />
          <map key='[StringencyLegacyIndex]' value='[govtresponse_latest.csv].[StringencyLegacyIndex]' />
          <map key='[city]' value='[policy_final.csv].[city]' />
          <map key='[compliance]' value='[policy_final.csv].[compliance]' />
          <map key='[continent]' value='[covid_complete.csv].[continent]' />
          <map key='[correct_type]' value='[policy_final.csv].[correct_type]' />
          <map key='[corruption]' value='[covid_complete.csv].[corruption]' />
          <map key='[countries]' value='[covid_complete.csv].[countries]' />
          <map key='[country (policy_final.csv)]' value='[policy_final.csv].[country]' />
          <map key='[country code]' value='[covid_complete.csv].[country code]' />
          <map key='[country]' value='[covid_complete.csv].[country]' />
          <map key='[date]' value='[covid_complete.csv].[date]' />
          <map key='[date_announced]' value='[policy_final.csv].[date_announced]' />
          <map key='[date_end]' value='[policy_final.csv].[date_end]' />
          <map key='[date_start]' value='[policy_final.csv].[date_start]' />
          <map key='[date_updated]' value='[policy_final.csv].[date_updated]' />
          <map key='[death_rate_per_1000_year2017]' value='[covid_complete.csv].[death_rate_per_1000_year2017]' />
          <map key='[description]' value='[policy_final.csv].[description]' />
          <map key='[diabetes_prevelance]' value='[covid_complete.csv].[diabetes_prevelance]' />
          <map key='[domestic_policy]' value='[policy_final.csv].[domestic_policy]' />
          <map key='[enforcer]' value='[policy_final.csv].[enforcer]' />
          <map key='[entry_type]' value='[policy_final.csv].[entry_type]' />
          <map key='[fertility_rate]' value='[covid_complete.csv].[fertility_rate]' />
          <map key='[gdp_ppp]' value='[covid_complete.csv].[gdp_ppp]' />
          <map key='[government_effectiveness]' value='[covid_complete.csv].[government_effectiveness]' />
          <map key='[government_healthcare_spend]' value='[covid_complete.csv].[government_healthcare_spend]' />
          <map key='[hospital_beds_per_1000_people]' value='[covid_complete.csv].[hospital_beds_per_1000_people]' />
          <map key='[hospital_beds_year]' value='[covid_complete.csv].[hospital_beds_year]' />
          <map key='[index_country_rank]' value='[policy_final.csv].[index_country_rank]' />
          <map key='[index_high_est]' value='[policy_final.csv].[index_high_est]' />
          <map key='[index_low_est]' value='[policy_final.csv].[index_low_est]' />
          <map key='[index_med_est]' value='[policy_final.csv].[index_med_est]' />
          <map key='[init_country_level]' value='[policy_final.csv].[init_country_level]' />
          <map key='[labour_force_total]' value='[covid_complete.csv].[labour_force_total]' />
          <map key='[link]' value='[policy_final.csv].[link]' />
          <map key='[new_cases]' value='[covid_complete.csv].[new_cases]' />
          <map key='[new_deaths]' value='[covid_complete.csv].[new_deaths]' />
          <map key='[obesity_rate]' value='[covid_complete.csv].[obesity_rate]' />
          <map key='[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' value='[covid_complete.csv].[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' />
          <map key='[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]' value='[covid_complete.csv].[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]' />
          <map key='[policy_id]' value='[policy_final.csv].[policy_id]' />
          <map key='[political_stability]' value='[covid_complete.csv].[political_stability]' />
          <map key='[population]' value='[covid_complete.csv].[population]' />
          <map key='[population_aged_65_and_above_percentage]' value='[covid_complete.csv].[population_aged_65_and_above_percentage]' />
          <map key='[population_density]' value='[covid_complete.csv].[population_density]' />
          <map key='[province]' value='[policy_final.csv].[province]' />
          <map key='[recorded_date]' value='[policy_final.csv].[recorded_date]' />
          <map key='[rule_of_law]' value='[covid_complete.csv].[rule_of_law]' />
          <map key='[runtot_new_cases]' value='[covid_complete.csv].[runtot_new_cases]' />
          <map key='[runtot_new_deaths]' value='[covid_complete.csv].[runtot_new_deaths]' />
          <map key='[school_status]' value='[policy_final.csv].[school_status]' />
          <map key='[smoking_prevalence]' value='[covid_complete.csv].[smoking_prevalence]' />
          <map key='[target_city]' value='[policy_final.csv].[target_city]' />
          <map key='[target_country]' value='[policy_final.csv].[target_country]' />
          <map key='[target_direction]' value='[policy_final.csv].[target_direction]' />
          <map key='[target_geog_level]' value='[policy_final.csv].[target_geog_level]' />
          <map key='[target_other]' value='[policy_final.csv].[target_other]' />
          <map key='[target_province]' value='[policy_final.csv].[target_province]' />
          <map key='[target_region]' value='[policy_final.csv].[target_region]' />
          <map key='[target_who_what]' value='[policy_final.csv].[target_who_what]' />
          <map key='[total_cases]' value='[covid_complete.csv].[total_cases]' />
          <map key='[total_deaths]' value='[covid_complete.csv].[total_deaths]' />
          <map key='[tourism]' value='[covid_complete.csv].[tourism]' />
          <map key='[travel_mechanism]' value='[policy_final.csv].[travel_mechanism]' />
          <map key='[type]' value='[policy_final.csv].[type]' />
          <map key='[type_sub_cat]' value='[policy_final.csv].[type_sub_cat]' />
          <map key='[type_text]' value='[policy_final.csv].[type_text]' />
          <map key='[update_level]' value='[policy_final.csv].[update_level]' />
          <map key='[update_type]' value='[policy_final.csv].[update_type]' />
          <map key='[urban_population]' value='[covid_complete.csv].[urban_population]' />
          <map key='[urban_population_percentage]' value='[covid_complete.csv].[urban_population_percentage]' />
          <map key='[weekly_cases]' value='[covid_complete.csv].[weekly_cases]' />
          <map key='[weekly_deaths]' value='[covid_complete.csv].[weekly_deaths]' />
          <map key='[women_in_parliament]' value='[covid_complete.csv].[women_in_parliament]' />
          <map key='[year]' value='[covid_complete.csv].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countries</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countries]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>countries</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_cases]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>weekly_cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_deaths]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>weekly_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fertility_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fertility_rate]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>fertility_rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_ppp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gdp_ppp]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>gdp_ppp</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[corruption]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>corruption</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government_effectiveness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[government_effectiveness]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>government_effectiveness</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>political_stability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[political_stability]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>political_stability</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rule_of_law</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rule_of_law]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>rule_of_law</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government_healthcare_spend</remote-name>
            <remote-type>129</remote-type>
            <local-name>[government_healthcare_spend]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>government_healthcare_spend</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urban_population_percentage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urban_population_percentage]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>urban_population_percentage</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>smoking_prevalence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[smoking_prevalence]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>smoking_prevalence</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tourism</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tourism]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>tourism</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>women_in_parliament</remote-name>
            <remote-type>5</remote-type>
            <local-name>[women_in_parliament]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>women_in_parliament</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>obesity_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[obesity_rate]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>obesity_rate</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtot_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runtot_new_cases]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>runtot_new_cases</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runtot_new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runtot_new_deaths]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>runtot_new_deaths</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country code]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>country code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevelance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevelance]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>diabetes_prevelance</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>labour_force_total</remote-name>
            <remote-type>129</remote-type>
            <local-name>[labour_force_total]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>labour_force_total</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_aged_65_and_above_percentage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[population_aged_65_and_above_percentage]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>population_aged_65_and_above_percentage</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urban_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[urban_population]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>urban_population</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_rate_per_1000_year2017</remote-name>
            <remote-type>129</remote-type>
            <local-name>[death_rate_per_1000_year2017]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>death_rate_per_1000_year2017</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospital_beds_year]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>hospital_beds_year</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_1000_people</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_1000_people]</local-name>
            <parent-name>[covid_complete.csv]</parent-name>
            <remote-alias>hospital_beds_per_1000_people</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (policy_final.csv)]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>policy_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[policy_id]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>policy_id</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entry_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[entry_type]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>entry_type</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>correct_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[correct_type]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>correct_type</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>update_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[update_type]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>update_type</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>update_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[update_level]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>update_level</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_announced</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_announced]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>date_announced</remote-alias>
            <ordinal>45</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_start</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_start]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>date_start</remote-alias>
            <ordinal>46</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_end</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_end]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>date_end</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (policy_final.csv)]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>init_country_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[init_country_level]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>init_country_level</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic_policy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[domestic_policy]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>domestic_policy</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_sub_cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_sub_cat]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>type_sub_cat</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_text]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>type_text</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>school_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[school_status]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>school_status</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_country]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_country</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_geog_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_geog_level]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_geog_level</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_region]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_region</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_province]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_province</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_city]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_city</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_other]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_other</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_who_what</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_who_what]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_who_what</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_direction]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>target_direction</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travel_mechanism</remote-name>
            <remote-type>129</remote-type>
            <local-name>[travel_mechanism]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>travel_mechanism</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compliance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[compliance]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>compliance</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enforcer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[enforcer]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>enforcer</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_high_est</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_high_est]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>index_high_est</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_med_est</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_med_est]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>index_med_est</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_low_est</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_low_est]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>index_low_est</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index_country_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[index_country_rank]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>index_country_rank</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_updated</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_updated]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>date_updated</remote-alias>
            <ordinal>73</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recorded_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[recorded_date]</local-name>
            <parent-name>[policy_final.csv]</parent-name>
            <remote-alias>recorded_date</remote-alias>
            <ordinal>74</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionCode]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>RegionCode</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>79</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C1_School closing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C1_School closing]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C1_School closing</remote-alias>
            <ordinal>80</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C1_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C1_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C1_Flag</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C2_Workplace closing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C2_Workplace closing]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C2_Workplace closing</remote-alias>
            <ordinal>82</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C2_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C2_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C2_Flag</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C3_Cancel public events</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C3_Cancel public events]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C3_Cancel public events</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C3_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C3_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C3_Flag</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C4_Restrictions on gatherings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C4_Restrictions on gatherings]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C4_Restrictions on gatherings</remote-alias>
            <ordinal>86</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C4_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C4_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C4_Flag</remote-alias>
            <ordinal>87</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C5_Close public transport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C5_Close public transport]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C5_Close public transport</remote-alias>
            <ordinal>88</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C5_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C5_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C5_Flag</remote-alias>
            <ordinal>89</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C6_Stay at home requirements</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C6_Stay at home requirements]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C6_Stay at home requirements</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C6_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C6_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C6_Flag</remote-alias>
            <ordinal>91</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C7_Restrictions on internal movement</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C7_Restrictions on internal movement]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C7_Restrictions on internal movement</remote-alias>
            <ordinal>92</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C7_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C7_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C7_Flag</remote-alias>
            <ordinal>93</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C8_International travel controls</remote-name>
            <remote-type>5</remote-type>
            <local-name>[C8_International travel controls]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>C8_International travel controls</remote-alias>
            <ordinal>94</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E1_Income support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E1_Income support]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E1_Income support</remote-alias>
            <ordinal>95</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E1_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[E1_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E1_Flag</remote-alias>
            <ordinal>96</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E2_Debt/contract relief</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E2_Debt/contract relief]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E2_Debt/contract relief</remote-alias>
            <ordinal>97</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E3_Fiscal measures</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E3_Fiscal measures]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E3_Fiscal measures</remote-alias>
            <ordinal>98</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>E4_International support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[E4_International support]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>E4_International support</remote-alias>
            <ordinal>99</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H1_Public information campaigns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H1_Public information campaigns]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H1_Public information campaigns</remote-alias>
            <ordinal>100</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H1_Flag</remote-name>
            <remote-type>20</remote-type>
            <local-name>[H1_Flag]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H1_Flag</remote-alias>
            <ordinal>101</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H2_Testing policy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H2_Testing policy]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H2_Testing policy</remote-alias>
            <ordinal>102</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H3_Contact tracing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H3_Contact tracing]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H3_Contact tracing</remote-alias>
            <ordinal>103</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H4_Emergency investment in healthcare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H4_Emergency investment in healthcare]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H4_Emergency investment in healthcare</remote-alias>
            <ordinal>104</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>H5_Investment in vaccines</remote-name>
            <remote-type>5</remote-type>
            <local-name>[H5_Investment in vaccines]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>H5_Investment in vaccines</remote-alias>
            <ordinal>105</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M1_Wildcard</remote-name>
            <remote-type>129</remote-type>
            <local-name>[M1_Wildcard]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>M1_Wildcard</remote-alias>
            <ordinal>106</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmedCases]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ConfirmedCases</remote-alias>
            <ordinal>107</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmedDeaths]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ConfirmedDeaths</remote-alias>
            <ordinal>108</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyIndex</remote-alias>
            <ordinal>109</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyIndexForDisplay</remote-alias>
            <ordinal>110</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyLegacyIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyLegacyIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyLegacyIndex</remote-alias>
            <ordinal>111</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StringencyLegacyIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StringencyLegacyIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>StringencyLegacyIndexForDisplay</remote-alias>
            <ordinal>112</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GovernmentResponseIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GovernmentResponseIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>GovernmentResponseIndex</remote-alias>
            <ordinal>113</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GovernmentResponseIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GovernmentResponseIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>GovernmentResponseIndexForDisplay</remote-alias>
            <ordinal>114</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainmentHealthIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainmentHealthIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ContainmentHealthIndex</remote-alias>
            <ordinal>115</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainmentHealthIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainmentHealthIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>ContainmentHealthIndexForDisplay</remote-alias>
            <ordinal>116</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomicSupportIndex</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EconomicSupportIndex]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>EconomicSupportIndex</remote-alias>
            <ordinal>117</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EconomicSupportIndexForDisplay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EconomicSupportIndexForDisplay]</local-name>
            <parent-name>[govtresponse_latest.csv]</parent-name>
            <remote-alias>EconomicSupportIndexForDisplay</remote-alias>
            <ordinal>118</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='C1 Flag' datatype='integer' name='[C1_Flag]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='C1 School closing' datatype='real' name='[C1_School closing]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0.0' value='No Measure' />
          <alias key='1.0' value='Recommend Closing' />
          <alias key='2.0' value='Require Closing (only some levels or categories)' />
          <alias key='3.0' value='Required Closing All Levels' />
        </aliases>
      </column>
      <column caption='C2 Flag' datatype='integer' name='[C2_Flag]' role='measure' type='quantitative' />
      <column caption='C2 Workplace closing' datatype='real' name='[C2_Workplace closing]' role='measure' type='quantitative' />
      <column caption='C3 Cancel public events' datatype='real' name='[C3_Cancel public events]' role='measure' type='quantitative' />
      <column caption='C3 Flag' datatype='integer' name='[C3_Flag]' role='measure' type='quantitative' />
      <column caption='C4 Flag' datatype='integer' name='[C4_Flag]' role='measure' type='quantitative' />
      <column caption='C4 Restrictions on gatherings' datatype='real' name='[C4_Restrictions on gatherings]' role='measure' type='quantitative' />
      <column caption='C5 Close public transport' datatype='real' name='[C5_Close public transport]' role='measure' type='quantitative' />
      <column caption='C5 Flag' datatype='integer' name='[C5_Flag]' role='measure' type='quantitative' />
      <column caption='C6 Flag' datatype='integer' name='[C6_Flag]' role='measure' type='quantitative' />
      <column caption='C6 Stay at home requirements' datatype='real' name='[C6_Stay at home requirements]' role='measure' type='quantitative' />
      <column caption='C7 Flag' datatype='integer' name='[C7_Flag]' role='measure' type='quantitative' />
      <column caption='C7 Restrictions on internal movement' datatype='real' name='[C7_Restrictions on internal movement]' role='measure' type='quantitative' />
      <column caption='C8 International travel controls' datatype='real' name='[C8_International travel controls]' role='measure' type='quantitative' />
      <column caption='Ratio of Deaths to Population ' datatype='real' name='[Calculation_230528045427666944]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([total_deaths]) / MAX([population]) * 100' />
      </column>
      <column caption='Complaince Dummy' datatype='string' datatype-customized='true' name='[Calculation_230528045444276225]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;0&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
      </column>
      <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
      </column>
      <column caption='Confirmed Cases' datatype='integer' name='[ConfirmedCases]' role='measure' type='quantitative' />
      <column caption='Confirmed Deaths' datatype='integer' name='[ConfirmedDeaths]' role='measure' type='quantitative' />
      <column caption='Containment Health Index For Display' datatype='real' name='[ContainmentHealthIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Containment Health Index' datatype='real' name='[ContainmentHealthIndex]' role='measure' type='quantitative' />
      <column caption='Gender of Leader' datatype='string' name='[Countries Female]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[countries]' default='&quot;Male Leader&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Female Leader&quot;'>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Switzerland&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Country Code1' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='E1 Flag' datatype='integer' name='[E1_Flag]' role='measure' type='quantitative' />
      <column caption='E1 Income support' datatype='real' name='[E1_Income support]' role='measure' type='quantitative' />
      <column caption='E2 Debt/contract relief' datatype='real' name='[E2_Debt/contract relief]' role='measure' type='quantitative' />
      <column caption='E3 Fiscal measures' datatype='real' name='[E3_Fiscal measures]' role='measure' type='quantitative' />
      <column caption='E4 International support' datatype='real' name='[E4_International support]' role='measure' type='quantitative' />
      <column caption='Economic Support Index For Display' datatype='real' name='[EconomicSupportIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Economic Support Index' datatype='real' name='[EconomicSupportIndex]' role='measure' type='quantitative' />
      <column caption='F1 (policy final.csv)' datatype='integer' hidden='true' name='[F1 (policy_final.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column caption='Government Response Index For Display' datatype='real' name='[GovernmentResponseIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Government Response Index' datatype='real' name='[GovernmentResponseIndex]' role='measure' type='quantitative' />
      <column caption='H1 Flag' datatype='integer' name='[H1_Flag]' role='measure' type='quantitative' />
      <column caption='H1 Public information campaigns' datatype='real' name='[H1_Public information campaigns]' role='measure' type='quantitative' />
      <column caption='H2 Testing policy' datatype='real' name='[H2_Testing policy]' role='measure' type='quantitative' />
      <column caption='H3 Contact tracing' datatype='real' name='[H3_Contact tracing]' role='measure' type='quantitative' />
      <column caption='H4 Emergency investment in healthcare' datatype='real' name='[H4_Emergency investment in healthcare]' role='measure' type='quantitative' />
      <column caption='H5 Investment in vaccines' datatype='real' name='[H5_Investment in vaccines]' role='measure' type='quantitative' />
      <column caption='M1 Wildcard' datatype='string' name='[M1_Wildcard]' role='dimension' type='nominal' />
      <column caption='Region Code' datatype='string' name='[RegionCode]' role='dimension' type='nominal' />
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Stringency Index For Display' datatype='real' name='[StringencyIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[StringencyIndex]' role='measure' type='quantitative' />
      <column caption='Stringency Legacy Index For Display' datatype='real' name='[StringencyLegacyIndexForDisplay]' role='measure' type='quantitative' />
      <column caption='Stringency Legacy Index' datatype='real' name='[StringencyLegacyIndex]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_complete.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Correct Type' datatype='string' name='[correct_type]' role='dimension' type='nominal' />
      <column caption='Corruption' datatype='real' name='[corruption]' role='measure' type='quantitative' />
      <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (Policy Final.Csv)' datatype='string' name='[country (policy_final.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country 1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;NA&quot;' value='Taiwan' />
        </aliases>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
      <column caption='Date End' datatype='string' name='[date_end]' role='dimension' type='nominal' />
      <column caption='Date Start' datatype='date' name='[date_start]' role='dimension' type='ordinal' />
      <column caption='Date Updated' datatype='date' name='[date_updated]' role='dimension' type='ordinal' />
      <column caption='Death Rate Per 1000 Year2017' datatype='string' name='[death_rate_per_1000_year2017]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Diabetes Prevelance' datatype='real' name='[diabetes_prevelance]' role='measure' type='quantitative' />
      <column caption='Domestic Policy' datatype='integer' name='[domestic_policy]' role='measure' type='quantitative' />
      <column caption='Enforcer' datatype='string' name='[enforcer]' role='dimension' type='nominal' />
      <column caption='Entry Type' datatype='string' name='[entry_type]' role='dimension' type='nominal' />
      <column caption='Fertility Rate' datatype='string' name='[fertility_rate]' role='dimension' type='nominal' />
      <column aggregation='Max' caption='Gdp Ppp' datatype='integer' name='[gdp_ppp]' role='measure' type='quantitative' />
      <column aggregation='Max' caption='Government Effectiveness' datatype='real' name='[government_effectiveness]' role='measure' type='quantitative' />
      <column caption='Government Healthcare Spend' datatype='string' name='[government_healthcare_spend]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per 1000 People' datatype='real' name='[hospital_beds_per_1000_people]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Year' datatype='integer' name='[hospital_beds_year]' role='dimension' type='quantitative' />
      <column caption='Index Country Rank' datatype='string' name='[index_country_rank]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Index High Est' datatype='string' name='[index_high_est]' role='dimension' type='nominal' />
      <column caption='Index Low Est' datatype='string' name='[index_low_est]' role='dimension' type='nominal' />
      <column caption='Index Med Est' datatype='string' name='[index_med_est]' role='dimension' type='nominal' />
      <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Labour Force Total' datatype='string' name='[labour_force_total]' role='dimension' type='nominal' />
      <column caption='Link' datatype='string' name='[link]' role='dimension' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='Obesity Rate' datatype='real' name='[obesity_rate]' role='measure' type='quantitative' />
      <column caption='Pm2.5 Air Pollution Mean Annual Exposure Microgramspercubicmeter 2017' datatype='real' name='[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' role='measure' type='quantitative' />
      <column caption='Pm2.5 Air Pollution Population Exposed To Levels Exceeding Who Guideline 2017' datatype='real' name='[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]' role='measure' type='quantitative' />
      <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
      <column caption='Political Stability' datatype='real' name='[political_stability]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Aged 65 And Above Percentage' datatype='string' name='[population_aged_65_and_above_percentage]' role='dimension' type='nominal' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Recorded Date' datatype='datetime' name='[recorded_date]' role='dimension' type='ordinal' />
      <column caption='Rule Of Law' datatype='real' name='[rule_of_law]' role='measure' type='quantitative' />
      <column caption='Runtot New Cases' datatype='integer' name='[runtot_new_cases]' role='measure' type='quantitative' />
      <column caption='Runtot New Deaths' datatype='integer' name='[runtot_new_deaths]' role='measure' type='quantitative' />
      <column caption='School Status' datatype='string' name='[school_status]' role='dimension' type='nominal' />
      <column caption='Smoking Prevalence' datatype='string' name='[smoking_prevalence]' role='dimension' type='nominal' />
      <column caption='Target City' datatype='string' name='[target_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Target Country' datatype='string' name='[target_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Target Direction' datatype='string' name='[target_direction]' role='dimension' type='nominal' />
      <column caption='Target Geog Level' datatype='string' name='[target_geog_level]' role='dimension' type='nominal' />
      <column caption='Target Other' datatype='string' name='[target_other]' role='dimension' type='nominal' />
      <column caption='Target Province' datatype='string' name='[target_province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Target Region' datatype='string' name='[target_region]' role='dimension' type='nominal' />
      <column caption='Target Who What' datatype='string' name='[target_who_what]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Tourism' datatype='string' name='[tourism]' role='dimension' type='nominal' />
      <column caption='Travel Mechanism' datatype='string' name='[travel_mechanism]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Type Sub Cat' datatype='string' name='[type_sub_cat]' role='dimension' type='nominal' />
      <column caption='Type Text' datatype='string' name='[type_text]' role='dimension' type='nominal' />
      <column caption='Update Level' datatype='string' name='[update_level]' role='dimension' type='nominal' />
      <column caption='Update Type' datatype='string' name='[update_type]' role='dimension' type='nominal' />
      <column caption='Urban Population' datatype='integer' name='[urban_population]' role='measure' type='quantitative' />
      <column caption='Urban Population Percentage' datatype='string' name='[urban_population_percentage]' role='dimension' type='nominal' />
      <column caption='Weekly Cases' datatype='integer' name='[weekly_cases]' role='measure' type='quantitative' />
      <column caption='Weekly Deaths' datatype='integer' name='[weekly_deaths]' role='measure' type='quantitative' />
      <column caption='Women In Parliament' datatype='real' name='[women_in_parliament]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Lowest Deaths]' derivation='InOut' name='[io:Lowest Deaths:nk]' pivot='key' type='nominal' />
      <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
      <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
      <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
      <group caption='CountriesHighest Deaths' name='[CountriesHighest Deaths]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[countries]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <group caption='Lowest Deaths' name='[Lowest Deaths]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:countries:nk]' member='&quot;Mozambique&quot;' />
          <groupfilter function='member' level='[none:countries:nk]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[none:countries:nk]' member='&quot;Taiwan&quot;' />
          <groupfilter function='member' level='[none:countries:nk]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[none:countries:nk]' member='&quot;Vietnam&quot;' />
        </groupfilter>
      </group>
      <group caption='top 10 countries' name='[top 10 countries]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[countries]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Mozambique&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Taiwan&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;United States&quot;' />
          <groupfilter function='member' level='[countries]' member='&quot;Vietnam&quot;' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/zoeyl/OneDrive/Data Science/TrueCue Hackathon 2020/Penelope/COVID19 Hackathon Dataset (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/25/2020 10:11:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[C1_Flag]' value='[Extract].[C1_Flag]' />
            <map key='[C1_School closing]' value='[Extract].[C1_School closing]' />
            <map key='[C2_Flag]' value='[Extract].[C2_Flag]' />
            <map key='[C2_Workplace closing]' value='[Extract].[C2_Workplace closing]' />
            <map key='[C3_Cancel public events]' value='[Extract].[C3_Cancel public events]' />
            <map key='[C3_Flag]' value='[Extract].[C3_Flag]' />
            <map key='[C4_Flag]' value='[Extract].[C4_Flag]' />
            <map key='[C4_Restrictions on gatherings]' value='[Extract].[C4_Restrictions on gatherings]' />
            <map key='[C5_Close public transport]' value='[Extract].[C5_Close public transport]' />
            <map key='[C5_Flag]' value='[Extract].[C5_Flag]' />
            <map key='[C6_Flag]' value='[Extract].[C6_Flag]' />
            <map key='[C6_Stay at home requirements]' value='[Extract].[C6_Stay at home requirements]' />
            <map key='[C7_Flag]' value='[Extract].[C7_Flag]' />
            <map key='[C7_Restrictions on internal movement]' value='[Extract].[C7_Restrictions on internal movement]' />
            <map key='[C8_International travel controls]' value='[Extract].[C8_International travel controls]' />
            <map key='[ConfirmedCases]' value='[Extract].[ConfirmedCases]' />
            <map key='[ConfirmedDeaths]' value='[Extract].[ConfirmedDeaths]' />
            <map key='[ContainmentHealthIndexForDisplay]' value='[Extract].[ContainmentHealthIndexForDisplay]' />
            <map key='[ContainmentHealthIndex]' value='[Extract].[ContainmentHealthIndex]' />
            <map key='[CountryCode]' value='[Extract].[CountryCode]' />
            <map key='[CountryName]' value='[Extract].[CountryName]' />
            <map key='[Date]' value='[Extract].[Date]' />
            <map key='[E1_Flag]' value='[Extract].[E1_Flag]' />
            <map key='[E1_Income support]' value='[Extract].[E1_Income support]' />
            <map key='[E2_Debt/contract relief]' value='[Extract].[E2_Debt/contract relief]' />
            <map key='[E3_Fiscal measures]' value='[Extract].[E3_Fiscal measures]' />
            <map key='[E4_International support]' value='[Extract].[E4_International support]' />
            <map key='[EconomicSupportIndexForDisplay]' value='[Extract].[EconomicSupportIndexForDisplay]' />
            <map key='[EconomicSupportIndex]' value='[Extract].[EconomicSupportIndex]' />
            <map key='[GovernmentResponseIndexForDisplay]' value='[Extract].[GovernmentResponseIndexForDisplay]' />
            <map key='[GovernmentResponseIndex]' value='[Extract].[GovernmentResponseIndex]' />
            <map key='[H1_Flag]' value='[Extract].[H1_Flag]' />
            <map key='[H1_Public information campaigns]' value='[Extract].[H1_Public information campaigns]' />
            <map key='[H2_Testing policy]' value='[Extract].[H2_Testing policy]' />
            <map key='[H3_Contact tracing]' value='[Extract].[H3_Contact tracing]' />
            <map key='[H4_Emergency investment in healthcare]' value='[Extract].[H4_Emergency investment in healthcare]' />
            <map key='[H5_Investment in vaccines]' value='[Extract].[H5_Investment in vaccines]' />
            <map key='[M1_Wildcard]' value='[Extract].[M1_Wildcard]' />
            <map key='[RegionCode]' value='[Extract].[RegionCode]' />
            <map key='[RegionName]' value='[Extract].[RegionName]' />
            <map key='[StringencyIndexForDisplay]' value='[Extract].[StringencyIndexForDisplay]' />
            <map key='[StringencyIndex]' value='[Extract].[StringencyIndex]' />
            <map key='[StringencyLegacyIndexForDisplay]' value='[Extract].[StringencyLegacyIndexForDisplay]' />
            <map key='[StringencyLegacyIndex]' value='[Extract].[StringencyLegacyIndex]' />
            <map key='[city]' value='[Extract].[city]' />
            <map key='[compliance]' value='[Extract].[compliance]' />
            <map key='[continent]' value='[Extract].[continent]' />
            <map key='[correct_type]' value='[Extract].[correct_type]' />
            <map key='[corruption]' value='[Extract].[corruption]' />
            <map key='[countries]' value='[Extract].[countries]' />
            <map key='[country (policy_final.csv)]' value='[Extract].[country]' />
            <map key='[country code]' value='[Extract].[country code]' />
            <map key='[country]' value='[Extract].[country1]' />
            <map key='[date]' value='[Extract].[date1]' />
            <map key='[date_announced]' value='[Extract].[date_announced]' />
            <map key='[date_end]' value='[Extract].[date_end]' />
            <map key='[date_start]' value='[Extract].[date_start]' />
            <map key='[date_updated]' value='[Extract].[date_updated]' />
            <map key='[death_rate_per_1000_year2017]' value='[Extract].[death_rate_per_1000_year2017]' />
            <map key='[description]' value='[Extract].[description]' />
            <map key='[diabetes_prevelance]' value='[Extract].[diabetes_prevelance]' />
            <map key='[domestic_policy]' value='[Extract].[domestic_policy]' />
            <map key='[enforcer]' value='[Extract].[enforcer]' />
            <map key='[entry_type]' value='[Extract].[entry_type]' />
            <map key='[fertility_rate]' value='[Extract].[fertility_rate]' />
            <map key='[gdp_ppp]' value='[Extract].[gdp_ppp]' />
            <map key='[government_effectiveness]' value='[Extract].[government_effectiveness]' />
            <map key='[government_healthcare_spend]' value='[Extract].[government_healthcare_spend]' />
            <map key='[hospital_beds_per_1000_people]' value='[Extract].[hospital_beds_per_1000_people]' />
            <map key='[hospital_beds_year]' value='[Extract].[hospital_beds_year]' />
            <map key='[index_country_rank]' value='[Extract].[index_country_rank]' />
            <map key='[index_high_est]' value='[Extract].[index_high_est]' />
            <map key='[index_low_est]' value='[Extract].[index_low_est]' />
            <map key='[index_med_est]' value='[Extract].[index_med_est]' />
            <map key='[init_country_level]' value='[Extract].[init_country_level]' />
            <map key='[labour_force_total]' value='[Extract].[labour_force_total]' />
            <map key='[link]' value='[Extract].[link]' />
            <map key='[new_cases]' value='[Extract].[new_cases]' />
            <map key='[new_deaths]' value='[Extract].[new_deaths]' />
            <map key='[obesity_rate]' value='[Extract].[obesity_rate]' />
            <map key='[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' value='[Extract].[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]' />
            <map key='[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]' value='[Extract].[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]' />
            <map key='[policy_id]' value='[Extract].[policy_id]' />
            <map key='[political_stability]' value='[Extract].[political_stability]' />
            <map key='[population]' value='[Extract].[population]' />
            <map key='[population_aged_65_and_above_percentage]' value='[Extract].[population_aged_65_and_above_percentage]' />
            <map key='[population_density]' value='[Extract].[population_density]' />
            <map key='[province]' value='[Extract].[province]' />
            <map key='[recorded_date]' value='[Extract].[recorded_date]' />
            <map key='[rule_of_law]' value='[Extract].[rule_of_law]' />
            <map key='[runtot_new_cases]' value='[Extract].[runtot_new_cases]' />
            <map key='[runtot_new_deaths]' value='[Extract].[runtot_new_deaths]' />
            <map key='[school_status]' value='[Extract].[school_status]' />
            <map key='[smoking_prevalence]' value='[Extract].[smoking_prevalence]' />
            <map key='[target_city]' value='[Extract].[target_city]' />
            <map key='[target_country]' value='[Extract].[target_country]' />
            <map key='[target_direction]' value='[Extract].[target_direction]' />
            <map key='[target_geog_level]' value='[Extract].[target_geog_level]' />
            <map key='[target_other]' value='[Extract].[target_other]' />
            <map key='[target_province]' value='[Extract].[target_province]' />
            <map key='[target_region]' value='[Extract].[target_region]' />
            <map key='[target_who_what]' value='[Extract].[target_who_what]' />
            <map key='[total_cases]' value='[Extract].[total_cases]' />
            <map key='[total_deaths]' value='[Extract].[total_deaths]' />
            <map key='[tourism]' value='[Extract].[tourism]' />
            <map key='[travel_mechanism]' value='[Extract].[travel_mechanism]' />
            <map key='[type]' value='[Extract].[type]' />
            <map key='[type_sub_cat]' value='[Extract].[type_sub_cat]' />
            <map key='[type_text]' value='[Extract].[type_text]' />
            <map key='[update_level]' value='[Extract].[update_level]' />
            <map key='[update_type]' value='[Extract].[update_type]' />
            <map key='[urban_population]' value='[Extract].[urban_population]' />
            <map key='[urban_population_percentage]' value='[Extract].[urban_population_percentage]' />
            <map key='[weekly_cases]' value='[Extract].[weekly_cases]' />
            <map key='[weekly_deaths]' value='[Extract].[weekly_deaths]' />
            <map key='[women_in_parliament]' value='[Extract].[women_in_parliament]' />
            <map key='[year]' value='[Extract].[year]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='COVID19 Hackathon Dataset (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='540011' timestamp-start='2020-10-25 10:11:45.528' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date1</remote-alias>
              <ordinal>0</ordinal>
              <family>covid_complete.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>844</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countries</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>countries</remote-alias>
              <ordinal>2</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>728</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>3</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2819</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1021</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5179</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2720</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_cases</remote-alias>
              <ordinal>7</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4197</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_deaths</remote-alias>
              <ordinal>8</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1638</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>9</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>637</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fertility_rate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fertility_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fertility_rate</remote-alias>
              <ordinal>10</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>395</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_ppp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[gdp_ppp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_ppp</remote-alias>
              <ordinal>11</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>corruption</remote-alias>
              <ordinal>12</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>government_effectiveness</remote-name>
              <remote-type>5</remote-type>
              <local-name>[government_effectiveness]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>government_effectiveness</remote-alias>
              <ordinal>13</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>political_stability</remote-name>
              <remote-type>5</remote-type>
              <local-name>[political_stability]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>political_stability</remote-alias>
              <ordinal>14</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>712</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rule_of_law</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rule_of_law]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rule_of_law</remote-alias>
              <ordinal>15</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>government_healthcare_spend</remote-name>
              <remote-type>129</remote-type>
              <local-name>[government_healthcare_spend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>government_healthcare_spend</remote-alias>
              <ordinal>16</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>urban_population_percentage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[urban_population_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>urban_population_percentage</remote-alias>
              <ordinal>17</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>291</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>smoking_prevalence</remote-name>
              <remote-type>129</remote-type>
              <local-name>[smoking_prevalence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>smoking_prevalence</remote-alias>
              <ordinal>18</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>412</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tourism</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tourism]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tourism</remote-alias>
              <ordinal>19</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>595</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>women_in_parliament</remote-name>
              <remote-type>5</remote-type>
              <local-name>[women_in_parliament]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>women_in_parliament</remote-alias>
              <ordinal>20</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>622</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>obesity_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[obesity_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>obesity_rate</remote-alias>
              <ordinal>21</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>405</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>runtot_new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[runtot_new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>runtot_new_cases</remote-alias>
              <ordinal>22</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5127</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>runtot_new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[runtot_new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>runtot_new_deaths</remote-alias>
              <ordinal>23</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2720</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country1</remote-alias>
              <ordinal>24</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country code</remote-alias>
              <ordinal>25</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>26</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevelance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevelance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>diabetes_prevelance</remote-alias>
              <ordinal>27</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>labour_force_total</remote-name>
              <remote-type>129</remote-type>
              <local-name>[labour_force_total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>labour_force_total</remote-alias>
              <ordinal>28</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>652</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>29</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_aged_65_and_above_percentage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[population_aged_65_and_above_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_aged_65_and_above_percentage</remote-alias>
              <ordinal>30</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>urban_population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[urban_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>urban_population</remote-alias>
              <ordinal>31</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_rate_per_1000_year2017</remote-name>
              <remote-type>129</remote-type>
              <local-name>[death_rate_per_1000_year2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_rate_per_1000_year2017</remote-alias>
              <ordinal>32</ordinal>
              <family>covid_complete.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>606</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017</remote-alias>
              <ordinal>33</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>683</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017</remote-alias>
              <ordinal>34</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hospital_beds_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospital_beds_year</remote-alias>
              <ordinal>35</ordinal>
              <family>covid_complete.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_1000_people</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_1000_people]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospital_beds_per_1000_people</remote-alias>
              <ordinal>36</ordinal>
              <family>covid_complete.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>173</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>policy_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[policy_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>policy_id</remote-alias>
              <ordinal>37</ordinal>
              <family>policy_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13664</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>entry_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[entry_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>entry_type</remote-alias>
              <ordinal>38</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>correct_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[correct_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>correct_type</remote-alias>
              <ordinal>39</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>update_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[update_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>update_type</remote-alias>
              <ordinal>40</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>update_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[update_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>update_level</remote-alias>
              <ordinal>41</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>42</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16475</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_announced</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_announced]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_announced</remote-alias>
              <ordinal>43</ordinal>
              <family>policy_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>506</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_start</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_start]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_start</remote-alias>
              <ordinal>44</ordinal>
              <family>policy_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>556</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_end</remote-name>
              <remote-type>129</remote-type>
              <local-name>[date_end]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_end</remote-alias>
              <ordinal>45</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>533</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (policy_final.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>46</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>924</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>init_country_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[init_country_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>init_country_level</remote-alias>
              <ordinal>47</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>domestic_policy</remote-name>
              <remote-type>20</remote-type>
              <local-name>[domestic_policy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>domestic_policy</remote-alias>
              <ordinal>48</ordinal>
              <family>policy_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province</remote-alias>
              <ordinal>49</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1087</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>50</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>789</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>51</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type_sub_cat</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type_sub_cat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type_sub_cat</remote-alias>
              <ordinal>52</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type_text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type_text]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type_text</remote-alias>
              <ordinal>53</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5149</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>school_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[school_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>school_status</remote-alias>
              <ordinal>54</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_country</remote-alias>
              <ordinal>55</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>723</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_geog_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_geog_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_geog_level</remote-alias>
              <ordinal>56</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_region</remote-alias>
              <ordinal>57</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_province</remote-alias>
              <ordinal>58</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_city</remote-alias>
              <ordinal>59</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>771</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_other</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_other</remote-alias>
              <ordinal>60</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_who_what</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_who_what]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_who_what</remote-alias>
              <ordinal>61</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>target_direction</remote-name>
              <remote-type>129</remote-type>
              <local-name>[target_direction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>target_direction</remote-alias>
              <ordinal>62</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>travel_mechanism</remote-name>
              <remote-type>129</remote-type>
              <local-name>[travel_mechanism]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>travel_mechanism</remote-alias>
              <ordinal>63</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>compliance</remote-name>
              <remote-type>129</remote-type>
              <local-name>[compliance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>compliance</remote-alias>
              <ordinal>64</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>enforcer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[enforcer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>enforcer</remote-alias>
              <ordinal>65</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index_high_est</remote-name>
              <remote-type>129</remote-type>
              <local-name>[index_high_est]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>index_high_est</remote-alias>
              <ordinal>66</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2389</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index_med_est</remote-name>
              <remote-type>129</remote-type>
              <local-name>[index_med_est]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>index_med_est</remote-alias>
              <ordinal>67</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2389</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index_low_est</remote-name>
              <remote-type>129</remote-type>
              <local-name>[index_low_est]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>index_low_est</remote-alias>
              <ordinal>68</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2389</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>index_country_rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[index_country_rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>index_country_rank</remote-alias>
              <ordinal>69</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>656</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[link]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>link</remote-alias>
              <ordinal>70</ordinal>
              <family>policy_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10742</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_updated</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_updated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_updated</remote-alias>
              <ordinal>71</ordinal>
              <family>policy_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>349</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>recorded_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[recorded_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>recorded_date</remote-alias>
              <ordinal>72</ordinal>
              <family>policy_final.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>17500</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountryName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountryName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountryName</remote-alias>
              <ordinal>73</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>707</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountryCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountryCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountryCode</remote-alias>
              <ordinal>74</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>707</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RegionName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[RegionName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RegionName</remote-alias>
              <ordinal>75</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RegionCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[RegionCode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RegionCode</remote-alias>
              <ordinal>76</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>77</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>934</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C1_School closing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C1_School closing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C1_School closing</remote-alias>
              <ordinal>78</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C1_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C1_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C1_Flag</remote-alias>
              <ordinal>79</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C2_Workplace closing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C2_Workplace closing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C2_Workplace closing</remote-alias>
              <ordinal>80</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C2_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C2_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C2_Flag</remote-alias>
              <ordinal>81</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C3_Cancel public events</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C3_Cancel public events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C3_Cancel public events</remote-alias>
              <ordinal>82</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C3_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C3_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C3_Flag</remote-alias>
              <ordinal>83</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C4_Restrictions on gatherings</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C4_Restrictions on gatherings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C4_Restrictions on gatherings</remote-alias>
              <ordinal>84</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C4_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C4_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C4_Flag</remote-alias>
              <ordinal>85</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C5_Close public transport</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C5_Close public transport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C5_Close public transport</remote-alias>
              <ordinal>86</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C5_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C5_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C5_Flag</remote-alias>
              <ordinal>87</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C6_Stay at home requirements</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C6_Stay at home requirements]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C6_Stay at home requirements</remote-alias>
              <ordinal>88</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C6_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C6_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C6_Flag</remote-alias>
              <ordinal>89</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C7_Restrictions on internal movement</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C7_Restrictions on internal movement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C7_Restrictions on internal movement</remote-alias>
              <ordinal>90</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C7_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C7_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C7_Flag</remote-alias>
              <ordinal>91</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C8_International travel controls</remote-name>
              <remote-type>5</remote-type>
              <local-name>[C8_International travel controls]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C8_International travel controls</remote-alias>
              <ordinal>92</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>E1_Income support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[E1_Income support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>E1_Income support</remote-alias>
              <ordinal>93</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>E1_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[E1_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>E1_Flag</remote-alias>
              <ordinal>94</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>E2_Debt/contract relief</remote-name>
              <remote-type>5</remote-type>
              <local-name>[E2_Debt/contract relief]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>E2_Debt/contract relief</remote-alias>
              <ordinal>95</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>E3_Fiscal measures</remote-name>
              <remote-type>5</remote-type>
              <local-name>[E3_Fiscal measures]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>E3_Fiscal measures</remote-alias>
              <ordinal>96</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>E4_International support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[E4_International support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>E4_International support</remote-alias>
              <ordinal>97</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>H1_Public information campaigns</remote-name>
              <remote-type>5</remote-type>
              <local-name>[H1_Public information campaigns]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>H1_Public information campaigns</remote-alias>
              <ordinal>98</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>H1_Flag</remote-name>
              <remote-type>20</remote-type>
              <local-name>[H1_Flag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>H1_Flag</remote-alias>
              <ordinal>99</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>H2_Testing policy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[H2_Testing policy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>H2_Testing policy</remote-alias>
              <ordinal>100</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>H3_Contact tracing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[H3_Contact tracing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>H3_Contact tracing</remote-alias>
              <ordinal>101</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>H4_Emergency investment in healthcare</remote-name>
              <remote-type>5</remote-type>
              <local-name>[H4_Emergency investment in healthcare]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>H4_Emergency investment in healthcare</remote-alias>
              <ordinal>102</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>248</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>H5_Investment in vaccines</remote-name>
              <remote-type>5</remote-type>
              <local-name>[H5_Investment in vaccines]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>H5_Investment in vaccines</remote-alias>
              <ordinal>103</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>M1_Wildcard</remote-name>
              <remote-type>129</remote-type>
              <local-name>[M1_Wildcard]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>M1_Wildcard</remote-alias>
              <ordinal>104</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmedCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ConfirmedCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmedCases</remote-alias>
              <ordinal>105</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18412</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmedDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ConfirmedDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmedDeaths</remote-alias>
              <ordinal>106</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7714</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>StringencyIndex</remote-name>
              <remote-type>5</remote-type>
              <local-name>[StringencyIndex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StringencyIndex</remote-alias>
              <ordinal>107</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>276</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>StringencyIndexForDisplay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[StringencyIndexForDisplay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StringencyIndexForDisplay</remote-alias>
              <ordinal>108</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>276</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>StringencyLegacyIndex</remote-name>
              <remote-type>5</remote-type>
              <local-name>[StringencyLegacyIndex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StringencyLegacyIndex</remote-alias>
              <ordinal>109</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>277</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>StringencyLegacyIndexForDisplay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[StringencyLegacyIndexForDisplay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StringencyLegacyIndexForDisplay</remote-alias>
              <ordinal>110</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GovernmentResponseIndex</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GovernmentResponseIndex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GovernmentResponseIndex</remote-alias>
              <ordinal>111</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>341</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GovernmentResponseIndexForDisplay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GovernmentResponseIndexForDisplay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GovernmentResponseIndexForDisplay</remote-alias>
              <ordinal>112</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>341</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ContainmentHealthIndex</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ContainmentHealthIndex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ContainmentHealthIndex</remote-alias>
              <ordinal>113</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>337</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ContainmentHealthIndexForDisplay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ContainmentHealthIndexForDisplay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ContainmentHealthIndexForDisplay</remote-alias>
              <ordinal>114</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>337</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EconomicSupportIndex</remote-name>
              <remote-type>5</remote-type>
              <local-name>[EconomicSupportIndex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EconomicSupportIndex</remote-alias>
              <ordinal>115</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EconomicSupportIndexForDisplay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[EconomicSupportIndexForDisplay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EconomicSupportIndexForDisplay</remote-alias>
              <ordinal>116</ordinal>
              <family>govtresponse_latest.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='20000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Lowest Deaths:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Complaince Dummy (copy)_230528045447176194:nk]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>&quot;YES&quot;</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>&quot;NO&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>%null%</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Lowest Deaths]' type='palette'>
            <map to='#4e79a7'>
              <bucket>(&quot;Mozambique&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Vietnam&quot;)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(&quot;Thailand&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Taiwan&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Singapore&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:init_country_level:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#8074a8'>
              <bucket>&quot;Municipal&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Provincial&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;National&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Other (e.g., county)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_complete.csv' id='covid_complete.csv_B11B3D8A875F4209BDDE390A564352BC'>
            <properties context=''>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[covid_complete.csv].[countries]' />
                      <expression op='[govtresponse_latest.csv].[CountryName]' />
                    </expression>
                    <expression op='='>
                      <expression op='[covid_complete.csv].[date]' />
                      <expression op='[govtresponse_latest.csv].[Date]' />
                    </expression>
                  </expression>
                </clause>
                <relation join='full' type='join'>
                  <clause type='join'>
                    <expression op='AND'>
                      <expression op='='>
                        <expression op='[covid_complete.csv].[countries]' />
                        <expression op='[policy_final.csv].[country]' />
                      </expression>
                      <expression op='='>
                        <expression op='[covid_complete.csv].[date]' />
                        <expression op='[policy_final.csv].[date_announced]' />
                      </expression>
                    </expression>
                  </clause>
                  <relation connection='textscan.1t0y6xm1yl0bbb1eig1u21jksnt7' name='covid_complete.csv' table='[covid_complete#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='integer' name='F1' ordinal='0' />
                      <column datatype='date' name='date' ordinal='1' />
                      <column datatype='string' name='continent' ordinal='2' />
                      <column datatype='string' name='countries' ordinal='3' />
                      <column datatype='integer' name='new_cases' ordinal='4' />
                      <column datatype='integer' name='new_deaths' ordinal='5' />
                      <column datatype='integer' name='total_cases' ordinal='6' />
                      <column datatype='integer' name='total_deaths' ordinal='7' />
                      <column datatype='integer' name='weekly_cases' ordinal='8' />
                      <column datatype='integer' name='weekly_deaths' ordinal='9' />
                      <column datatype='real' name='population_density' ordinal='10' />
                      <column datatype='string' name='fertility_rate' ordinal='11' />
                      <column datatype='integer' name='gdp_ppp' ordinal='12' />
                      <column datatype='real' name='corruption' ordinal='13' />
                      <column datatype='real' name='government_effectiveness' ordinal='14' />
                      <column datatype='real' name='political_stability' ordinal='15' />
                      <column datatype='real' name='rule_of_law' ordinal='16' />
                      <column datatype='string' name='government_healthcare_spend' ordinal='17' />
                      <column datatype='string' name='urban_population_percentage' ordinal='18' />
                      <column datatype='string' name='smoking_prevalence' ordinal='19' />
                      <column datatype='string' name='tourism' ordinal='20' />
                      <column datatype='real' name='women_in_parliament' ordinal='21' />
                      <column datatype='real' name='obesity_rate' ordinal='22' />
                      <column datatype='integer' name='runtot_new_cases' ordinal='23' />
                      <column datatype='integer' name='runtot_new_deaths' ordinal='24' />
                      <column datatype='string' name='country' ordinal='25' />
                      <column datatype='string' name='country code' ordinal='26' />
                      <column datatype='integer' name='year' ordinal='27' />
                      <column datatype='real' name='diabetes_prevelance' ordinal='28' />
                      <column datatype='string' name='labour_force_total' ordinal='29' />
                      <column datatype='integer' name='population' ordinal='30' />
                      <column datatype='string' name='population_aged_65_and_above_percentage' ordinal='31' />
                      <column datatype='integer' name='urban_population' ordinal='32' />
                      <column datatype='string' name='death_rate_per_1000_year2017' ordinal='33' />
                      <column datatype='real' name='pm2.5_air_pollution_mean_annual_exposure_microgramspercubicmeter_2017' ordinal='34' />
                      <column datatype='real' name='pm2.5_air_pollution_population_exposed_to_levels_exceeding_who_guideline_2017' ordinal='35' />
                      <column datatype='integer' name='hospital_beds_year' ordinal='36' />
                      <column datatype='real' name='hospital_beds_per_1000_people' ordinal='37' />
                    </columns>
                  </relation>
                  <relation connection='textscan.1eq5gho0npm8du1h0gotd1o7ly07' name='policy_final.csv' table='[policy_final#csv]' type='table'>
                    <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                      <column datatype='integer' name='F1' ordinal='0' />
                      <column datatype='integer' name='policy_id' ordinal='1' />
                      <column datatype='string' name='entry_type' ordinal='2' />
                      <column datatype='string' name='correct_type' ordinal='3' />
                      <column datatype='string' name='update_type' ordinal='4' />
                      <column datatype='string' name='update_level' ordinal='5' />
                      <column datatype='string' name='description' ordinal='6' />
                      <column datatype='date' name='date_announced' ordinal='7' />
                      <column datatype='date' name='date_start' ordinal='8' />
                      <column datatype='string' name='date_end' ordinal='9' />
                      <column datatype='string' name='country' ordinal='10' />
                      <column datatype='string' name='init_country_level' ordinal='11' />
                      <column datatype='integer' name='domestic_policy' ordinal='12' />
                      <column datatype='string' name='province' ordinal='13' />
                      <column datatype='string' name='city' ordinal='14' />
                      <column datatype='string' name='type' ordinal='15' />
                      <column datatype='string' name='type_sub_cat' ordinal='16' />
                      <column datatype='string' name='type_text' ordinal='17' />
                      <column datatype='string' name='school_status' ordinal='18' />
                      <column datatype='string' name='target_country' ordinal='19' />
                      <column datatype='string' name='target_geog_level' ordinal='20' />
                      <column datatype='string' name='target_region' ordinal='21' />
                      <column datatype='string' name='target_province' ordinal='22' />
                      <column datatype='string' name='target_city' ordinal='23' />
                      <column datatype='string' name='target_other' ordinal='24' />
                      <column datatype='string' name='target_who_what' ordinal='25' />
                      <column datatype='string' name='target_direction' ordinal='26' />
                      <column datatype='string' name='travel_mechanism' ordinal='27' />
                      <column datatype='string' name='compliance' ordinal='28' />
                      <column datatype='string' name='enforcer' ordinal='29' />
                      <column datatype='string' name='index_high_est' ordinal='30' />
                      <column datatype='string' name='index_med_est' ordinal='31' />
                      <column datatype='string' name='index_low_est' ordinal='32' />
                      <column datatype='string' name='index_country_rank' ordinal='33' />
                      <column datatype='string' name='link' ordinal='34' />
                      <column datatype='date' name='date_updated' ordinal='35' />
                      <column datatype='datetime' name='recorded_date' ordinal='36' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.1yfh5pg156ldfw19tmmle146caf5' name='govtresponse_latest.csv' table='[govtresponse_latest#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='CountryName' ordinal='0' />
                    <column datatype='string' name='CountryCode' ordinal='1' />
                    <column datatype='string' name='RegionName' ordinal='2' />
                    <column datatype='string' name='RegionCode' ordinal='3' />
                    <column datatype='date' name='Date' ordinal='4' />
                    <column datatype='real' name='C1_School closing' ordinal='5' />
                    <column datatype='integer' name='C1_Flag' ordinal='6' />
                    <column datatype='real' name='C2_Workplace closing' ordinal='7' />
                    <column datatype='integer' name='C2_Flag' ordinal='8' />
                    <column datatype='real' name='C3_Cancel public events' ordinal='9' />
                    <column datatype='integer' name='C3_Flag' ordinal='10' />
                    <column datatype='real' name='C4_Restrictions on gatherings' ordinal='11' />
                    <column datatype='integer' name='C4_Flag' ordinal='12' />
                    <column datatype='real' name='C5_Close public transport' ordinal='13' />
                    <column datatype='integer' name='C5_Flag' ordinal='14' />
                    <column datatype='real' name='C6_Stay at home requirements' ordinal='15' />
                    <column datatype='integer' name='C6_Flag' ordinal='16' />
                    <column datatype='real' name='C7_Restrictions on internal movement' ordinal='17' />
                    <column datatype='integer' name='C7_Flag' ordinal='18' />
                    <column datatype='real' name='C8_International travel controls' ordinal='19' />
                    <column datatype='real' name='E1_Income support' ordinal='20' />
                    <column datatype='integer' name='E1_Flag' ordinal='21' />
                    <column datatype='real' name='E2_Debt/contract relief' ordinal='22' />
                    <column datatype='real' name='E3_Fiscal measures' ordinal='23' />
                    <column datatype='real' name='E4_International support' ordinal='24' />
                    <column datatype='real' name='H1_Public information campaigns' ordinal='25' />
                    <column datatype='integer' name='H1_Flag' ordinal='26' />
                    <column datatype='real' name='H2_Testing policy' ordinal='27' />
                    <column datatype='real' name='H3_Contact tracing' ordinal='28' />
                    <column datatype='real' name='H4_Emergency investment in healthcare' ordinal='29' />
                    <column datatype='real' name='H5_Investment in vaccines' ordinal='30' />
                    <column datatype='string' name='M1_Wildcard' ordinal='31' />
                    <column datatype='integer' name='ConfirmedCases' ordinal='32' />
                    <column datatype='integer' name='ConfirmedDeaths' ordinal='33' />
                    <column datatype='real' name='StringencyIndex' ordinal='34' />
                    <column datatype='real' name='StringencyIndexForDisplay' ordinal='35' />
                    <column datatype='real' name='StringencyLegacyIndex' ordinal='36' />
                    <column datatype='real' name='StringencyLegacyIndexForDisplay' ordinal='37' />
                    <column datatype='real' name='GovernmentResponseIndex' ordinal='38' />
                    <column datatype='real' name='GovernmentResponseIndexForDisplay' ordinal='39' />
                    <column datatype='real' name='ContainmentHealthIndex' ordinal='40' />
                    <column datatype='real' name='ContainmentHealthIndexForDisplay' ordinal='41' />
                    <column datatype='real' name='EconomicSupportIndex' ordinal='42' />
                    <column datatype='real' name='EconomicSupportIndexForDisplay' ordinal='43' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Countries with Lowest Deaths Policy Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column-instance column='[date_announced]' derivation='Day-Trunc' name='[tdy:date_announced:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:init_country_level:nk]' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk] * [federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk])</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</cols>
      </table>
      <simple-id uuid='{675725F9-7EFB-4E9A-9452-70C16D230585}' />
    </worksheet>
    <worksheet name='Countries with Lowest Deaths Policy Level (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column-instance column='[type]' derivation='Attribute' name='[attr:type:nk]' pivot='key' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column-instance column='[date_announced]' derivation='Day-Trunc' name='[tdy:date_announced:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:init_country_level:nk]' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
              <tooltip column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[attr:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</cols>
      </table>
      <simple-id uuid='{EF2676BB-7A0C-415E-8DD4-100F67CC2D3C}' />
    </worksheet>
    <worksheet name='GDP PPP &amp; Population Comparison for 10 countries '>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Max' caption='Gdp Ppp' datatype='integer' name='[gdp_ppp]' role='measure' type='quantitative' />
            <column-instance column='[gdp_ppp]' derivation='Max' name='[max:gdp_ppp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk] + [federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk])</cols>
      </table>
      <simple-id uuid='{AADFE0AB-62B1-4883-A417-0ACFAC2DD86E}' />
    </worksheet>
    <worksheet name='GDP PPP Coparison for 10 countries '>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Max' caption='Gdp Ppp' datatype='integer' name='[gdp_ppp]' role='measure' type='quantitative' />
            <column-instance column='[gdp_ppp]' derivation='Max' name='[max:gdp_ppp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]</cols>
      </table>
      <simple-id uuid='{51319E8D-26AC-4384-8B23-455D10E17295}' />
    </worksheet>
    <worksheet name='Govt. Effectiveness Comparison for 10 countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Ratio of Deaths to Population ' datatype='real' name='[Calculation_230528045427666944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_deaths]) / MAX([population]) * 100' />
            </column>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Max' caption='Government Effectiveness' datatype='real' name='[government_effectiveness]' role='measure' type='quantitative' />
            <column-instance column='[government_effectiveness]' derivation='Max' name='[max:government_effectiveness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528045427666944]' derivation='User' name='[usr:Calculation_230528045427666944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]' />
              <lod column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]</cols>
      </table>
      <simple-id uuid='{5CF41585-EB6C-4C0D-AF8B-A9D3528FABD7}' />
    </worksheet>
    <worksheet name='Policies by date Country Highest Deaths (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column-instance column='[type]' derivation='Attribute' name='[attr:type:nk]' pivot='key' type='nominal' />
            <column caption='Country 1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;NA&quot;' value='Taiwan' />
              </aliases>
            </column>
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column-instance column='[date_announced]' derivation='Day-Trunc' name='[tdy:date_announced:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]' />
              <tooltip column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[attr:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</cols>
      </table>
      <simple-id uuid='{50D7DC47-8A9B-428D-9B59-22DFE4164AD8}' />
    </worksheet>
    <worksheet name='Policy by Compliance Top 5 Countries Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
            <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column-instance column='[date_announced]' derivation='Day-Trunc' name='[tdy:date_announced:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' />
              <groupfilter function='member' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk] * [federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk])</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</cols>
      </table>
      <simple-id uuid='{6EEC351D-F409-4958-AB3E-D2D818385DC1}' />
    </worksheet>
    <worksheet name='Policy by Compliance Top 5 Lowest Countries Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
            <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column-instance column='[date_announced]' derivation='Day-Trunc' name='[tdy:date_announced:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' />
              <groupfilter function='member' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk] * [federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk])</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</cols>
      </table>
      <simple-id uuid='{15268926-ED4A-4D6F-BAA5-D169250B629D}' />
    </worksheet>
    <worksheet name='Policy by Level and Country Highest Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Date Announced' datatype='date' name='[date_announced]' role='dimension' type='ordinal' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column-instance column='[date_announced]' derivation='Day-Trunc' name='[tdy:date_announced:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:init_country_level:nk]' member='&quot;Municipal&quot;' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='&quot;National&quot;' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='&quot;Other (e.g., county)&quot;' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='&quot;Provincial&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk] * [federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk])</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</cols>
      </table>
      <simple-id uuid='{1294A460-280B-462B-A03E-37FC938BFF33}' />
    </worksheet>
    <worksheet name='Policy by Type and Country Highest Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy' datatype='string' datatype-customized='true' name='[Calculation_230528045444276225]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;0&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Country 1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;NA&quot;' value='Taiwan' />
              </aliases>
            </column>
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_230528045444276225]' derivation='None' name='[none:Calculation_230528045444276225:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_230528045444276225:nk]' />
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:init_country_level:nk]' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:type:nk]' />
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]' value='63' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</cols>
      </table>
      <simple-id uuid='{EDA359CE-7CAA-4389-A3DD-75316BD99145}' />
    </worksheet>
    <worksheet name='Policy by Type and Country Highest Deaths (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy' datatype='string' datatype-customized='true' name='[Calculation_230528045444276225]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;0&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;1&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country 1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;NA&quot;' value='Taiwan' />
              </aliases>
            </column>
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_230528045444276225]' derivation='None' name='[none:Calculation_230528045444276225:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_230528045444276225:nk]' />
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:type:nk]' />
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' num-steps='30' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]' />
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{80854026-492E-4276-A5A5-A314C245F0C2}' />
    </worksheet>
    <worksheet name='Policy by Type and Country Lowest Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country 1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;NA&quot;' value='Taiwan' />
              </aliases>
            </column>
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:init_country_level:nk]' />
              <groupfilter function='member' level='[none:init_country_level:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:type:nk]' />
              <groupfilter function='member' level='[none:type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]' value='63' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</cols>
      </table>
      <simple-id uuid='{6EFC4DA6-16A4-4E59-B5D1-91F21F933C7D}' />
    </worksheet>
    <worksheet name='Ratio of Deaths to Population Global'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Ratio of Deaths to Population ' datatype='real' name='[Calculation_230528045427666944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_deaths]) / MAX([population]) * 100' />
            </column>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528045427666944]' derivation='User' name='[usr:Calculation_230528045427666944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:countries:nk]' />
              <groupfilter function='member' level='[none:countries:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]</cols>
      </table>
      <simple-id uuid='{2C4D2EFC-D579-4886-AF76-49A3ACCA4B9B}' />
    </worksheet>
    <worksheet name='Ratio of Deaths to Population of top countries with highest and lowest deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Ratio of Deaths to Population ' datatype='real' name='[Calculation_230528045427666944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_deaths]) / MAX([population]) * 100' />
            </column>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528045427666944]' derivation='User' name='[usr:Calculation_230528045427666944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]</cols>
      </table>
      <simple-id uuid='{9486FE06-C811-4084-AAC2-D772FC07B0B9}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column aggregation='Sum' caption='C1 School closing' datatype='real' name='[C1_School closing]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0.0' value='No Measure' />
                <alias key='1.0' value='Recommend Closing' />
                <alias key='2.0' value='Require Closing (only some levels or categories)' />
                <alias key='3.0' value='Required Closing All Levels' />
              </aliases>
            </column>
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[C1_School closing]' derivation='Max' name='[max:C1_School closing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[twk:Date:qk]' value='70' />
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:C1_School closing:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' max='3.1000000000000001' min='-0.050000000000000003' minor-origin='0.0' minor-show='false' minor-spacing='0.10000000000000001' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:C1_School closing:qk]' value='32' />
            <format attr='text-format' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:C1_School closing:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Lowest Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of Date1:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[twk:Date:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:C1_School closing:qk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{E6F0CBB3-B54A-42E8-B573-824E7336E234}' />
    </worksheet>
    <worksheet name='Top 5 countries Highest Deaths and Population Density '>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Ratio of Deaths to Population ' datatype='real' name='[Calculation_230528045427666944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_deaths]) / MAX([population]) * 100' />
            </column>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528045427666944]' derivation='User' name='[usr:Calculation_230528045427666944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' scope='cols' value='Total Deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' value='12' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' value='#000000' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='12' />
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='Lato' />
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='12' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='#000000' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='normal' />
            <format attr='font-weight' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' num-steps='15' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#8047a8</color>
                <color>#8854ad</color>
                <color>#9162b2</color>
                <color>#9b71b8</color>
                <color>#a480bd</color>
                <color>#ae91c3</color>
                <color>#b8a2c8</color>
                <color>#c3b3ce</color>
                <color>#cdc5d3</color>
                <color>#d9d9d9</color>
                <color>#d7d6db</color>
                <color>#d5d4de</color>
                <color>#d3d2e0</color>
                <color>#d1cfe3</color>
                <color>#cfcce5</color>
                <color>#cdcae8</color>
                <color>#cac7ea</color>
                <color>#c8c4ed</color>
                <color>#c6c1f0</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' num-steps='15' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a378ba</color>
                <color>#ab86bf</color>
                <color>#b495c4</color>
                <color>#bda5c9</color>
                <color>#c6b6ce</color>
                <color>#cfc7d3</color>
                <color>#d9d9d9</color>
                <color>#d6d5dc</color>
                <color>#d3d2e0</color>
                <color>#d0cee4</color>
                <color>#cdcae8</color>
                <color>#c9c5ec</color>
                <color>#c6c1f0</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' value='Population' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='Ratio of Deaths to Population ' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</rows>
        <cols>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk] + [federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk])</cols>
      </table>
      <simple-id uuid='{24FA0D4E-8BE7-4120-94B5-68D8EED3A5B8}' />
    </worksheet>
    <worksheet name='Top 5 countries Lowest Deaths and Population Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Ratio of Deaths to Population ' datatype='real' name='[Calculation_230528045427666944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_deaths]) / MAX([population]) * 100' />
            </column>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Max' caption='Government Effectiveness' datatype='real' name='[government_effectiveness]' role='measure' type='quantitative' />
            <column-instance column='[government_effectiveness]' derivation='Max' name='[max:government_effectiveness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528045427666944]' derivation='User' name='[usr:Calculation_230528045427666944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' scope='cols' value='Total Deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='n#,##0.00000;-#,##0.00000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='12' />
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='12' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='12' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='#000000' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='normal' />
            <format attr='font-weight' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='normal' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' num-steps='15' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#8e48a0</color>
                <color>#995ba9</color>
                <color>#a571b3</color>
                <color>#b188bc</color>
                <color>#bea1c6</color>
                <color>#cbbccf</color>
                <color>#d9d9d9</color>
                <color>#d6d5dc</color>
                <color>#d3d2e0</color>
                <color>#d0cee4</color>
                <color>#cdcae8</color>
                <color>#c9c5ec</color>
                <color>#c6c1f0</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' num-steps='15' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#8047a8</color>
                <color>#8d5bb0</color>
                <color>#9b71b8</color>
                <color>#a988c0</color>
                <color>#b8a2c8</color>
                <color>#c8bcd0</color>
                <color>#d9d9d9</color>
                <color>#d6d5dc</color>
                <color>#d3d2e0</color>
                <color>#d0cee4</color>
                <color>#cdcae8</color>
                <color>#c9c5ec</color>
                <color>#c6c1f0</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' value='Population' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' value='Ratio of Deaths to Population ' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' />
              <tooltip column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk] + [federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk])</cols>
      </table>
      <simple-id uuid='{917B05C1-BEE1-4060-92A4-D8BD3C7F9F12}' />
    </worksheet>
    <worksheet name='Top 5 countries Total Deaths and Population Density (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Longitude (generated)]' field-type='quantitative' max='21038278.952435713' min='-21004548.228776313' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Latitude (generated)]' field-type='quantitative' max='15862599.745505203' min='-5376219.8506581979' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' min='2' num-steps='50' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' />
              <lod column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' />
              <tooltip column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' />
              <geometry column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Latitude (generated)]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8E311BD3-2538-4E98-AE6E-8591A043F1F9}' />
    </worksheet>
    <worksheet name='Top 5 countries Total Deaths and Population Density (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Longitude (generated)]' field-type='quantitative' max='20482223.262787625' min='-539190.32781839836' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Latitude (generated)]' field-type='quantitative' max='6543440.5171886198' min='-4075969.280893073' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' min='2' num-steps='50' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' />
              <lod column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' />
              <tooltip column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' />
              <geometry column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Latitude (generated)]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{527BE3FA-582A-48A7-8099-540ABA00E3BD}' />
    </worksheet>
    <worksheet name='Total Cases &amp; Policies per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:countries:nk]' />
              <groupfilter function='member' level='[none:countries:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' max='2640' min='5' num-steps='8' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_cases:qk]</cols>
      </table>
      <simple-id uuid='{1BDD3436-1CD5-4706-8EED-10D8C21CD014}' />
    </worksheet>
    <worksheet name='Total Policies by Compliance 10 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='luto'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' />
              <groupfilter function='member' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' scope='cols' value='Total Number of Policies Implemented' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='Lato' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='#000000' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='12' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='Lato' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='#000000' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' max='2640' min='5' num-steps='8' type='interpolated' />
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Lato' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' value='Country Level' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='12' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country: </run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Level: </run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Number of Policies Implemented:	</run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='11' />
                <format attr='font-family' value='Lato' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</cols>
      </table>
      <simple-id uuid='{942BD6C9-D223-488A-84A5-56546D7E76EC}' />
    </worksheet>
    <worksheet name='Total Policies by Compliance 10 Countries (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='luto'>Total Policies by Compliance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Gender of Leader' datatype='string' name='[Countries Female]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[countries]' default='&quot;Male Leader&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Female Leader&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country 1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;NA&quot;' value='Taiwan' />
              </aliases>
            </column>
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' />
              <groupfilter function='member' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' scope='cols' value='Total Number of Policies Implemented' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='Lato' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='#000000' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='12' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='Lato' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='#000000' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' max='2640' min='5' num-steps='8' type='interpolated' />
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Lato' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' value='Country Level' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' value='12' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country: </run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Level: </run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Number of Policies Implemented:	</run>
                <run bold='true'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='11' />
                <format attr='font-family' value='Lato' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[Countries Female] / [federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk])</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</cols>
      </table>
      <simple-id uuid='{1DA2F13E-283D-414A-A406-D911ACF3EA15}' />
    </worksheet>
    <worksheet name='Total Policies by Compliance HIghest Death Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' />
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' />
              <groupfilter function='member' level='[none:Complaince Dummy (copy)_230528045447176194:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' max='2640' min='5' num-steps='8' type='interpolated' />
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</cols>
      </table>
      <simple-id uuid='{4F0A798C-7BB1-4619-9033-7B35760AA38C}' />
    </worksheet>
    <worksheet name='Total Policies by Compliance Lowest Death Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Complaince Dummy Yes/No' datatype='string' name='[Complaince Dummy (copy)_230528045447176194]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [compliance]&#10;&#10;WHEN &apos;Voluntary/Recommended but No Penalties&apos; THEN &apos;NO&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Exceptions (Please list exceptions in the text entry),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory with Exceptions (Please list exceptions in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory (Unspecified/Implied),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Mandatory with Exceptions (Please list exceptions in the text entry),Mandatory (Other; please list other enforcement mechanisms in the text entry)&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Legal Penalties (Jail Time),Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;Mandatory with Fines,Voluntary/Recommended but No Penalties&apos; then &apos;YES&apos;&#10;WHEN &apos;NA&apos; then &apos;N/A&apos;&#10;END' />
            </column>
            <column caption='Compliance' datatype='string' name='[compliance]' role='dimension' type='nominal' />
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[policy_id]' derivation='CountD' name='[ctd:policy_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Complaince Dummy (copy)_230528045447176194]' derivation='None' name='[none:Complaince Dummy (copy)_230528045447176194:nk]' pivot='key' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Policy Id' datatype='integer' name='[policy_id]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' max='2640' min='5' num-steps='8' type='interpolated' />
            <encoding attr='size-bar' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</cols>
      </table>
      <simple-id uuid='{321631C5-EBE8-4AA5-8048-8B76E1898864}' />
    </worksheet>
    <worksheet name='Total Policies by country level 10 Countries (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Init Country Level' datatype='string' name='[init_country_level]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='None' name='[none:init_country_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[init_country_level]' derivation='Count' name='[pcto:cnt:init_country_level:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[init_country_level]' derivation='Count' name='[pcto:cnt:init_country_level:qk:4]' pivot='key' type='quantitative'>
              <table-calc level-address='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' ordering-type='Field' type='PctTotal'>
                <order field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' />
                <order field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]'>
            <groupfilter from='&quot;Municipal&quot;' function='range' level='[none:init_country_level:nk]' to='&quot;Provincial&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[pcto:cnt:init_country_level:qk:4]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk] / [federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk])</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[pcto:cnt:init_country_level:qk:2]</cols>
      </table>
      <simple-id uuid='{C49C056A-65A8-46A6-ADC3-61A0ED92CE02}' />
    </worksheet>
    <worksheet name='Total Population &amp; Population Density of top countries with highest and lowest deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Lato'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19 Hackathon Dataset (Multiple Connections)' name='federated.18x1uvm0krdcrp1bgstc20zfpktr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18x1uvm0krdcrp1bgstc20zfpktr'>
            <column caption='Countries' datatype='string' name='[countries]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countries]' derivation='None' name='[none:countries:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
            <column caption='Total Deaths1' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]' />
          <slices>
            <column>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Longitude (generated)]' field-type='quantitative' max='20663843.022880144' min='-20663843.022880144' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Latitude (generated)]' field-type='quantitative' max='13077585.668574378' min='-3962136.6703876462' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' value='n#,##0;-#,##0' />
            <format attr='font-family' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' value='Lato' />
            <format attr='font-size' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' value='12' />
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' num-steps='30' palette='orange_blue_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' num-steps='15' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#7347b4</color>
                <color>#825cba</color>
                <color>#9272c0</color>
                <color>#a28ac6</color>
                <color>#b4a3cc</color>
                <color>#c6bdd2</color>
                <color>#d9d9d9</color>
                <color>#d0c3d9</color>
                <color>#c8aed9</color>
                <color>#bf98da</color>
                <color>#b783da</color>
                <color>#ae6dda</color>
                <color>#a658db</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' value='Total Covid Deaths' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' />
              <tooltip column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' />
              <text column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]' />
              <lod column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]' />
              <geometry column='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Countriy: </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Population:</run>
                <run bold='true' fontcolor='#787878'>Æ  </run>
                <run fontcolor='#000000'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]>	]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population Density: </run>
                <run fontcolor='#000000'><![CDATA[<[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Latitude (generated)]</rows>
        <cols>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{29200D23-B914-440A-AB88-2126AAB1A613}' />
    </worksheet>
    <worksheet name='Types of Policies per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='policy_top5_deaths+' name='federated.1ijpo310cdk8dm1954vtt0c2rvlp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ijpo310cdk8dm1954vtt0c2rvlp'>
            <column caption='Country (Total Policies And Type By Country.Csv)' datatype='string' name='[country (total_policies_and_type_by_country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country (total_policies_and_type_by_country.csv)]' derivation='None' name='[none:country (total_policies_and_type_by_country.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[type (total_policies_and_type_by_country.csv)]' derivation='None' name='[none:type (total_policies_and_type_by_country.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[total_policies]' derivation='Sum' name='[sum:total_policies:qk]' pivot='key' type='quantitative' />
            <column caption='Total Policies' datatype='integer' name='[total_policies]' role='measure' type='quantitative' />
            <column caption='Type (Total Policies And Type By Country.Csv)' datatype='string' name='[type (total_policies_and_type_by_country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.1ijpo310cdk8dm1954vtt0c2rvlp].[none:type (total_policies_and_type_by_country.csv):nk]' value='140' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ijpo310cdk8dm1954vtt0c2rvlp].[sum:total_policies:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ijpo310cdk8dm1954vtt0c2rvlp].[none:country (total_policies_and_type_by_country.csv):nk]</rows>
        <cols>[federated.1ijpo310cdk8dm1954vtt0c2rvlp].[none:type (total_policies_and_type_by_country.csv):nk]</cols>
      </table>
      <simple-id uuid='{655FECA9-D77B-4472-81F2-3604E9ACFE5F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='5' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='3' w='98400' x='800' y='1000'>
              <zone h='30750' id='1' name='Top 5 countries Highest Deaths and Population Density ' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32250' id='8' name='Top 5 countries Lowest Deaths and Population Density' w='98400' x='800' y='31750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='22375' id='7' name='Top 5 countries Highest Deaths and Population Density ' pane-specification-id='9' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' w='98400' x='800' y='76625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12625' id='6' name='Top 5 countries Highest Deaths and Population Density ' pane-specification-id='6' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' w='98400' x='800' y='64000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='36' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='35' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='238' h='30750' id='1' is-fixed='true' name='Top 5 countries Highest Deaths and Population Density ' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='22375' id='7' name='Top 5 countries Highest Deaths and Population Density ' pane-specification-id='9' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' w='98400' x='800' y='76625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12625' id='6' name='Top 5 countries Highest Deaths and Population Density ' pane-specification-id='6' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' w='98400' x='800' y='64000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32250' id='8' is-fixed='true' name='Top 5 countries Lowest Deaths and Population Density' w='98400' x='800' y='31750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AA800336-5F6D-4E41-BE10-7935C3F6FC79}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
              <zone h='65625' id='3' name='Total Policies by Compliance 10 Countries' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='32375' id='8' name='Total Policies by Compliance 10 Countries' pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' w='98400' x='800' y='66625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='65625' id='3' is-fixed='true' name='Total Policies by Compliance 10 Countries' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='32375' id='8' name='Total Policies by Compliance 10 Countries' pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' w='98400' x='800' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A8E7B7BF-3C0E-4DA0-BFF6-70BC72DEA7C5}' />
    </dashboard>
    <dashboard name='Global Deaths World Map'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='26' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='17' param='horz' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
                  <zone h='88627' id='3' name='Total Population &amp; Population Density of top countries with highest and lowest deaths' w='98400' x='800' y='10373'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9373' id='8' name='Total Population &amp; Population Density of top countries with highest and lowest deaths' pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='56' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='55' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='88627' id='3' is-fixed='true' name='Total Population &amp; Population Density of top countries with highest and lowest deaths' w='98400' x='800' y='10373'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9373' id='8' name='Total Population &amp; Population Density of top countries with highest and lowest deaths' pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2C55094E-82F6-4517-AEBD-3A365DE7E3F2}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84440' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{76146B42-0578-4E87-9D7B-1093E70E0092}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='92'>
    <window class='worksheet' name='Top 5 countries Highest Deaths and Population Density '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' type='color' />
            <card pane-specification-id='9' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{579B23BC-3822-4BCD-A2D4-62AAD39C45B9}' />
    </window>
    <window class='worksheet' name='Top 5 countries Lowest Deaths and Population Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]' type='color' />
            <card pane-specification-id='5' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C1930B5-2A9D-4A3E-82C4-2A3124238BB4}' />
    </window>
    <window class='worksheet' name='Ratio of Deaths to Population Global'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[usr:Calculation_230528045427666944:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[io:top 10 countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBBD06A3-C3FF-4A12-98AF-285450D2ED27}' />
    </window>
    <window class='worksheet' name='Ratio of Deaths to Population of top countries with highest and lowest deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5CC04C3-2A79-4086-9758-396DC0096A25}' />
    </window>
    <window class='worksheet' name='Govt. Effectiveness Comparison for 10 countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F881E54-F115-41E7-98E7-AB08D57DE04B}' />
    </window>
    <window class='worksheet' name='GDP PPP Coparison for 10 countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BF3C069-C61F-452F-AF24-99A5AA086536}' />
    </window>
    <window class='worksheet' name='GDP PPP &amp; Population Comparison for 10 countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:gdp_ppp:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:government_effectiveness:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population_density:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C43A3ED-17BD-49F3-9E9F-CA279A62F7C8}' />
    </window>
    <window class='worksheet' name='Total Population &amp; Population Density of top countries with highest and lowest deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[io:top 10 countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:population:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{220362D1-86FD-41C0-A819-4EF9838FFC63}' />
    </window>
    <window class='worksheet' name='Top 5 countries Total Deaths and Population Density (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E737DA7B-3896-49B2-80D9-09039ABE32E3}' />
    </window>
    <window class='worksheet' name='Top 5 countries Total Deaths and Population Density (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:total_deaths:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E9EE2C97-EBF5-4D68-8A49-735B2B99F2D7}' />
    </window>
    <window class='worksheet' name='Types of Policies per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ijpo310cdk8dm1954vtt0c2rvlp].[sum:total_policies:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ijpo310cdk8dm1954vtt0c2rvlp].[sum:total_policies:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29526A34-DDB7-4E16-8FDA-89BF2C33C66F}' />
    </window>
    <window class='worksheet' name='Total Cases &amp; Policies per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21C7E689-E4CB-4BAE-A0AD-A276A3F469C8}' />
    </window>
    <window class='worksheet' name='Policy by Level and Country Highest Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[yr:date_announced:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55EEAF41-0D53-488C-AF29-D7B6D9828FC1}' />
    </window>
    <window class='worksheet' name='Policies by date Country Highest Deaths (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5C626CF-A793-4634-B78A-F2B712D6E404}' />
    </window>
    <window class='worksheet' name='Countries with Lowest Deaths Policy Level (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[io:Lowest Deaths:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CE3BBE1-78F0-413F-A5F0-DA1565CF3658}' />
    </window>
    <window class='worksheet' name='Countries with Lowest Deaths Policy Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[attr:type:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[io:Lowest Deaths:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AA26E5F-F085-4610-BCEA-8CF1D19A6995}' />
    </window>
    <window class='worksheet' name='Policy by Type and Country Highest Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8655210F-ADD6-4462-A308-384E4955A27D}' />
    </window>
    <window class='worksheet' name='Policy by Type and Country Highest Deaths (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A1F909F-3903-4CF4-B874-AA38F84A3C97}' />
    </window>
    <window class='worksheet' name='Policy by Type and Country Lowest Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9292790E-327A-4FB0-8705-8A3E307C9EA4}' />
    </window>
    <window class='worksheet' name='Policy by Compliance Top 5 Countries Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[yr:date_announced:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2F01A85-29AB-410C-8663-669AD04A3E15}' />
    </window>
    <window class='worksheet' name='Policy by Compliance Top 5 Lowest Countries Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Calculation_230528045444276225:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:type:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:date_announced:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[yr:date_announced:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FED04B53-7F36-4600-A708-BEA0AD0C17F2}' />
    </window>
    <window class='worksheet' name='Total Policies by Compliance HIghest Death Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[yr:date_announced:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABB7EB3F-47CE-4A26-A504-89E35FF5D768}' />
    </window>
    <window class='worksheet' name='Total Policies by Compliance Lowest Death Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F00AD557-9AD8-42BD-B509-E2882E09FF49}' />
    </window>
    <window class='worksheet' name='Total Policies by country level 10 Countries (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[pcto:cnt:init_country_level:qk:4]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[pcto:cnt:init_country_level:qk:2]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[pcto:cnt:init_country_level:qk:4]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F9AE07C-34CE-43D6-A3D4-81EA60D2E375}' />
    </window>
    <window class='worksheet' name='Total Policies by Compliance 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C64D300F-D015-4396-9AC8-3042793FDB19}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Policies by Compliance 10 Countries (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Countries Female]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[CountriesHighest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:countries:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:country:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[top 10 countries]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1C69E3E-8E45-4007-81B4-2AFD5B014998}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[max:C1_School closing:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[Lowest Deaths]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:C1_School closing:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:Complaince Dummy (copy)_230528045447176194:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:compliance:nk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:policy_id:ok]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[tdy:Date:qk]</field>
            <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63F97CE5-6218-47B8-A6A4-60C1E7668FE7}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3019EF11-F277-4D19-BF4A-1E18E70592AF}' />
    </window>
    <window class='dashboard' name='Global Deaths World Map'>
      <viewpoints>
        <viewpoint name='Total Population &amp; Population Density of top countries with highest and lowest deaths'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{61A4F454-78BF-4917-BA31-77C0DF470377}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Top 5 countries Highest Deaths and Population Density ' />
        <viewpoint name='Top 5 countries Lowest Deaths and Population Density' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DC7E7764-9DA7-4F46-9C87-9A7EA3BEB728}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Total Policies by Compliance 10 Countries'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[ctd:policy_id:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.18x1uvm0krdcrp1bgstc20zfpktr].[none:init_country_level:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{178EB589-847B-4003-AC5C-EB9F701C809C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Countries with Lowest Deaths Policy Level' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Countries with Lowest Deaths Policy Level (2)' width='384'>
      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
      1qUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      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
      xpLSz8zMlJRKZZHjqNPppPj4eEmtVpeYZnH5kyRJys3NlaKiogrVbUny8vKk6OjoMm//oLi4
      OCkhIaHQ30uWLJFUKlWRMqSlpUn3798v9tyVJElKSkoqlF6BzMxMSaVS6d1Hq9VKkZGR5T4u
      JdF3zIpT0rEo8PB5s2PHDsnHx6dS8io83RSSVDk3GC9ZsoRp06bJt5AJRe3cuZOAgABMTEzQ
      6XTMnz9fvvVQePzi4+PZtm0bc+bMMXRWnlrz589HrVbj7e1d7G8zwrOj0hoAQRCqvtzc3DLP
      cRGqPtEACIIgVFOijycIglBNiQZAEAShmhINgCAIQjVV7DyAmJiYJ5kPQRAE4QkTPwL/IyYm
      hoYNG1Zaemq1mho1alRaeoZQlctQMJmrvDNvnyZVuf6h8j9TZWGIOjNEzMo6vx/503H+/Hk6
      dOiAtbU1kD/j19PTs8h24eHhKJVKXnjhhTKl++uvv9K/f39q164N5D/y4ejRo5iYmODp6Wmw
      W9V2zTtlkLiCUNU06WFLdLghGrCiM8afzZiP7pF/A1i8eDH379+X/54+fbre7ZRKJTdu3CA+
      Pp5PP/201HR//vlnkpOT5b8nTpxIQEAAly9fZv/+/SWms2XLFnx9fctZEkEQhOrlsfWPly1b
      RlZWFnfv3mXRokXUqlWL2rVrs3LlSk6ePMnGjRt566235AZk5syZuLq64u3tzc2bN7l7926h
      9G7cuMEXX3whLzTz6aefyunY2dmxf/9+unbtytixY9mxYweNGjVCkiRq1qzJmjVrqFu3LgsW
      LCAyMpI1a9Zga2vL0qVLMTc3f1xVIAiC8FR7bA3A3r172bVrF7du3WL16tW8+uqrBAYGMmjQ
      IDIzM5k0aRILFy7E3t6emTNnMn78eCZPnkxUVBQ7d+7kxRdfLJTemjVrmDBhAjY2NmzatKlQ
      On///Tc//vgjnp6evP7667i6ujJixAi6du2Kq6sre/bsISQkhLVr1xIREcEbb7xBhw4dqvT4
      qiAIwqN65CEga2treeHq3Nxc+UmECoWC9u3b065dO9LS0uTtzczMMDU1xdzcnNu3bxMTE8PO
      nTsZMmQIN2/exMPDAxMTE+rXr18ojoeHB/7+/kybNo0lS5YUSufq1at89tlnJCYmkp6ejqmp
      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
      lSvExsaSm5tr3SYsLIyvvvoKnU6Hp6cnJpOJNWvW0KVLF0pKSqiqqrphdO+WLVt47rnnANDr
      9YSGhtKjRw8uXLhAdXU1CQkJ5OTk2La3QgghrG4bAI0aNWLUqFF069aNkydP0q1bN1588UWS
      k5Ot2+Tm5jJ58mRatWpFSUkJ4eHhDBs2jNTUVDZu3IjZbObUqVOkpKQAkJGRQWFhIQcOHODI
      kSPWAWQ6nQ53d3cmT57MmDFj5BaQEEI0oNt+E9O9e3f+9re/YTKZGD58OFu3biUuLg4vLy9y
      cnLQ6/V4eHiwfft2cnNz0ev17NixA19fXzw9PXn55ZeBayN/O3fuzLfffktkZCRvvfUWmZmZ
      VFVV4eTkxN///ndKS0uZNm0a69evx93dvcE7L4QQanZH4wAMBgMajQZ3d3cURaGqqgofHx8S
      EhLo168fbm5uVFdX4+npiZOTE7W1tRiNRho1alTvOIqiEB8fz5AhQ26oodPp8PDwsE41UXc7
      SaPRUFRYwFd/2StPAd1PtR7gp4DsVQvA76G7ewooLy8PgODg4LvaT54Cso377Smg+2IgmIwD
      kFo/R8YB/Edy8kkAunXrclf7yTgAG5W6z8YB3BcBIIS4M3UPToRWNHiSAAAJwElEQVSGhjq0
      HeL+IAEghBAqJWsCCyGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkA
      CCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkA
      CCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkA
      CCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESkkACCGESt0yAC5evMju3btJSUlB
      UZR6PzObzWi1WgBOnz7N1atXb1vIYDCwbNkyMjMzAdi7dy+HDh2yHufnVFRUAHDq1Cny8/Nv
      uZ1er8doNN70ZyaTid27d3PgwAGqq6tvW/Ondu7cecO/VVZWoigKOp2Oo0eP3tXxhBDi1+CW
      AXDgwAGuXr3K7t272b59O2VlZSQlJVFWVsbZs2dZsGABeXl51w7i5IRWqyUxMbHeH9fLly+T
      lJSExWIhPj6empoamjdvDsDXX3+NVqtlxowZVFdXU1lZSWJiIgaDgerqan744QeuXLlCaWkp
      77zzDpmZmfz4449kZGRw4sQJFEUhLy+PkydPUlNTA8CGDRvYvHkzpaWllJaWkpiYiMlkAkCn
      0xEXF4dOp2PevHlYLBaSkpK4cuUKFouF7OxsfvjhBwwGAyUlJej1eoqLi9Hr9Rw+fBhFUTh7
      9ixpaWkYjUbeffddTpw4Ya2tKAonT54kJycHgEuXLpGSkkJhYaHtXzUhhLCBn70F1KRJEwID
      A7FYLJw5c4bKykrmzZtHeXk5VVVVlJSUkJqaSlFREe+++y4VFRXMnz8fgPLychYuXEhOTg6r
      Vq2iuLgYk8mEXq8HICAggMjISCIiIkhJSWH+/Pno9XoWL15MZmYmFRUVxMTEoNVq0el0FBQU
      AHD8+HE2bdrE2bNniYmJ4erVq9YrkPLycoqLi6mqqiImJobS0lI++eQTa3/8/f1p27YtRqOR
      L774gkuXLrFgwQLKysr43//9X/Ly8li0aBEJCQlcuHCBXbt2cfHiRQCqq6vJyMggPj7eeuWS
      n5+PXq9n//79bN26leTkZFauXElubi6zZ88mJyenXn0hhPg1+dkAOHr0KHv37mXIkCGcPXuW
      8+fPo9fradeuHWFhYXTq1Mm6rZubG5GRkTg7OwOQl5fHY489xsiRI8nNzaV9+/Z07tzZegVQ
      p7S0FG9vby5evMiFCxfw8/OzftLXarW0atWKhx56iH79+gEwcOBAunTpQm1tLX379mXfvn3o
      dDoA2rVrR7du3fDx8eHhhx9m8ODB9a5IsrKy2Lt3LzNmzKCgoIDhw4fTtWtX8vPz+c1vfsOw
      YcNueUuqrKyM1NRUDAYDJpOJkJAQIiIi8PLyAiAzM5NRo0bRv39/srKyCAkJYdiwYbi6ut7t
      ayKEEHbxswEQHR3N6NGj+fTTT8nJycFsNmOxWPD19SUlJYVvv/3Wuq23tzeLFi3C19cXgEce
      eYSkpCTmzZtHz549bzj2jz/+yOzZsykpKeHRRx+lU6dOaLVafHx8rLXMZjMAtbW1rFixot7+
      er2eS5cu4eLiQnl5OQAhISH861//Ij8/n6KiIhYuXEjr1q2t+3To0IEJEybQsmVLHnvsMebP
      n8+JEycICwsjLS2NmJgYunfvTpMmTVi9ejX79++37ltWVkZlZaX1O4bQ0FDef/99a+0+ffrw
      4YcfEhcXR6dOndBoNHf+KgghhANolOu/4b2F2tpazGYz7u7uANTU1KAoCm5ubsC1e+BVVVX4
      +PhY//iZzWYMBgONGjW6o8YYDAbc3d1RFAWj0YinpycAFoul3n/XqampoaamxvopvO4Yrq6u
      1u8lfHx8bllPq9Xi5eVFTU0NH330Ef/zP/9j7Y9Wq8Xb27ve9tXV1Xh5eVn7d/1/63Q63Nzc
      cHFxuaP+CiGEI91xADzIFEXhypUrtGjRwtFNEUIIu3F4AJhMRirKSxzZBCGEUCWH36uoKC9h
      97ojKHo3u9Z1cnHCydW+9+mdXZxwtnNNNy9nu9YDcGtk318rZ1f7n1dnNwfVdLPv66lY7P9d
      lsVi//GpFov9z6ui2LefiqJBue7cOjwAABS9Gxat5+03tCGNmxO42fcF0Lg54WTnF93Fw/4v
      savGvk8+uTg74eJq5/Pq5oSLh71fS2dcPez7h8pitv8fY7PZ/h9aLGb7vk8sDggAi8Xp7gMg
      KyuL3bt34+TkxMSJE9FoNBgMBlavXg3AmDFjuHDhAqdOncLDw4PBgwdbnw4qKiri5Zdf5h//
      +AeNGjVi0KBBHDx4EIPBgK+vL4MGDWqAbgohhLgTtw2Aw4cPM2nSJA4dOkR2djatW7cmMTGR
      IUOG0KRJE7799lu0Wi0TJkxg06ZNuLi4MGrUKE6fPk15eTl79uxh0KBB+Pj44O/vT3l5Oc8/
      //wNT/QIIYSwr9tegzg7O6PRaGjcuLF1Tp6KigqaNGmCt7c3RqPROtgpICDAOpDq8OHDPPHE
      ExQXF5OSkkJcXBzJycm0b9+enTt3smzZsgbslhBCiNu5owCorKwkPT2dVq1aUVlZSVhYGKdP
      n+bHH3+kefPmmEwmTCYTubm5NG7cmHPnzvHII4+g0Wh4+OGHadOmDYMHDyYvL4+WLVsyfPhw
      eVZeCCEc7LYBEBUVRVxcHE2bNqVJkyakpqby6KOPUlRUREpKCn379iUqKor169fTsWNHXF1d
      0Wq11qkb+vTpQ3p6OgkJCURGRpKVlcU///lPunfv3uCdE0IIcWsOHwdQVFggj4E2IHkMtIFq
      3kePga5Y+SWTJ71yTzXlMdCGIY+B/puffxOefrGXo5shxAPLz9eXkJBgRzdD/Ao5/ApACCGE
      Y8iSkEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEII
      oVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEII
      oVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEII
      oVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEII
      oVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEII
      oVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEIIoVISAEII
      oVL/D3Po58R8p9plAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      FIBIQPP/AcuMM8qihG0cAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='GDP PPP &amp; Population Comparison for 10 countries ' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='GDP PPP Coparison for 10 countries ' width='384'>
      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
      7N10xXryN34by2azTExMMDExwRe/+MWPfT7DMJiZmUFRFFpbWwmFQhQKBd544w0cDgdf+MIX
      tqDUopFMTExw8eJFvv/979/ys0wmQ3t7O08++SS//du/vWFGu2q1yvXr1/nv//2/MzMzg9fr
      pVqt4vf76e/v5+tf/zojIyP8/Oc/52c/+5m9PXq5XGZlZYWvf/3rHDp0iO7ubgCmpqZ46623
      eOONNwiHw6RSKbq7u/nsZz/L008/fceseo1IAsA2Vq1WSSaTdtauj8uyLAqFArAaDODD3UMl
      L7D4KFRVxePx0NTUtO7zWq3G0NAQuVyO48ePb/jd+v+Pr7zyColEAp/PR1tbG4Zh4HQ67V1t
      y+UytVoNr9dLJBLB7XaTz+cpl8u88sorBAIBOjs7cTgcvPvuu4yMjKAoCh0dHQAkk0lefvll
      jh8/jtvtliCwhgSAbazeL3q/cvbUm9Gf+cxn7sv5xaOvu7ub7u5unn/+efuz+v+v/+gf/SNU
      VeXkyZMbvmCYpkkqleI//If/wL/8l/+SZ599lp6eHmA18VF9PCAQCPDpT3+az33uc3alns1m
      WVhY4DOf+QyPPfYYn/jEJ3A4HPz1X/81u3fv5hvf+Aaf+MQnWF5e5n//7//NH//xH/OHf/iH
      dtpUsUoCwA6ztLTEhQsXUBSFhYUFFhYWiMfj9Pb2cuzYMZ588klUVaVWqxGPx7l06RLvvfce
      pVIJy7JwOBycOHFi3TnffPNNarWa/Zf46tWrXL16lStXrlAsFvF4PMRiMb70pS8RCAQkMYy4
      o1KpxKuvvoqmaezZs4eBgYENjxsZGeHMmTM8//zznDhxwu7GAdb12ff29t7y3VqtZme6czqd
      VKtVJiYmqFardHd38+STTwLQ1NTEwYMH+dznPscbb7zBE088QX9//xbf8c4lAWCHMQyDTCZD
      Pp8nGo3S09ODqqqMjo6SyWRYXFyko6ODxcVFJicnmZiY4KmnnkLXdSqVCiMjI7cMiKXT6XWt
      DE3TCIfDPPfcc8BqX24ikeAXv/gFR48epbW19UHesthhyuUyL7/8Mrt27eKxxx677QycfD7P
      ysoKfr+foaEhrl69SjKZtCvtnp4ePB4PiqJgGAblcpmlpSWWlpYYHR3l/fff5zd+4zfYu3ev
      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
      BzblFxoosG0XAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Global Deaths World Map' width='384'>
      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
      XotoNIpf//rXWY954MABvP/++/jLX/4Ch8OBQYMG4cYbb0QikcDChQuxcuVK3HvvvYhEIli9
      ejV2796NK664AsuWLcMLL7yAvXv34uOPPwYABAIBrFu3LsOUs3v3bvTp0wff+ta38M477+DZ
      Z5/FpEmTAACzZs3C/PnzoSgK3nvvPaRSqaznDgaDmD9/Pp544gm8++67GffhdrvR3t6OW2+9
      FfF4HB999BGef/55w3v+4osvsHLlSrzyyisYOXIkduzYgVtuuQWjR4/G/PnzsWTJErzwwgs4
      cOAAli1bhpaWFkyZMgW/+tWvsG3bNmzatImtDPfs2YNPP/004/ibNm3Caaedhvnz5+O3v/0t
      duzYgVGjRkGWZcyfPx/z58/Hnj17sGXLFmzbts303MuXL8fYsWPR1taGu+++G+FwOOu7PP30
      06GqKrZu3Yq7774bn3/+OW699Vbs3bsXDz30kOExd+zYgV/+8pc455xzcO6558Jut+PgwYN4
      //33MXjw4IyxNXHiRPztb3/Dpk2b8N577+HNN9/MWAUbjc+jR49i5syZ0DQN8+bNQ1NTE3tf
      /DNpbGwsaNzx7/K2227DuHHjcNlllyGRSBhex/bt203f2wcffIAPPvgAV155JT766CM8/vjj
      mDhxIhujEyZMwJYtW/Dwww9jzJgxaGlpwYcffoj9+/fjueeew5///Gdcf/31aGlpwe23345D
      hw51eabEwIED8fTTTyMWi2HZsmVYtWoV1q1bh7fffhu7d++Gz+dj5hr++QwePBgAEA6Hcfnl
      l7Pr1KP/ezQaxbp16xAOh3H33XejX79+WLRoEV588UX06dMHQKfdvbW1FWPHjmXjzGj8/PGP
      f8SuXbtwww03oKmpCS0tLRnjw+FwAOhcjH3++eeYP38+Ro0ahR/96EdQVdXwOX/xxRf48Y9/
      jGnTpuHMM8+EpmmmZsx77rkHK1euxMKFCxGPx3HjjTeipaUFq1atwvr16/GPf/wD69atw6uv
      vorNmzfjzTffxJAhQ3DjjTeib9+++N73vodnn30Wr776apd7mTBhAqxWK9ra2vDlL3+ZnTOZ
      TOLWW2+F1+vF1VdfDVVVoWkatm7dittuuw3nnXce5s+fjzvvvBN79uzpct9NTU2Gz8jhcBSu
      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
      /T912VPlWO+09gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Govt. Effectiveness Comparison for 10 countries' width='384'>
      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
      IqT+P7vD5sml/ecWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Policies by date Country Highest Deaths (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Policy by Compliance Top 5 Countries Death' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Policy by Compliance Top 5 Lowest Countries Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Policy by Level and Country Highest Deaths' width='384'>
      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
    </thumbnail>
    <thumbnail height='328' name='Policy by Type and Country Highest Deaths' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Policy by Type and Country Highest Deaths (2)' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='189' name='Policy by Type and Country Lowest Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Ratio of Deaths to Population Global' width='384'>
      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
      KIpCOBwmFApd91oMDw9TU1PD6tWrNSWYkltdXa3JzcnJYXx8HLPZrP1dXV1NZmam1vdrMTU1
      RV1dHXV1dXi9Xu3zWCxGTU0NJSUlBINBcnNzGR8fx2QyodfrCYVCBIPBBbm5+nw+6urqWLt2
      LR6PR/s8Go1SW1tLeXk5Xq+XixcvUlZWhslk0hRzdXU1LpdLU+JXY2ZmhqysLFatWoXVaiUe
      jwNz82n16tXU1dURCASIRqP09PRoBXsikQjhcFhzCZ6P1PlUVlZis9k0GW63m+rqalavXs3M
      zAyzs7MkEgkikQgWi4VAIEB1dTXV1dWasr4WXq+XNWvWfGicIpEItbW1VFRUMDExgSzL2qol
      VcdkZmZmQdfC7XazZs0a1q1bd5kMoQBuE1IXOGVuuNr3l5Y71Ov15ObmsmPHDmRZ5siRI/O2
      f2mgyZUyUqkN5ivXmPr+RmRcef6Xyrj0+z179lBQUMDJkyeZmpqaV8al7V3Zh0v/bWtrY2Ji
      gt27d1/1fG6GjM7OTkZGRtizZw/Z2dns2rULgEOHDl13lTHf+aTGSVEU7bhL/3+tOXK1879R
      Gfv378fhcHDs2LHrKsv5+pG63qnVWWZmJoFAgHA4/KFxXEj7l/b5yiC2jo4ObDYbMzMzmlKq
      q6tjbGyM8+fPzyvj0naunOOXnl9+fj47duwgHA7z3nvvXXYOC7kvrjdOer2eu+66i9zcXP74
      xz8SjUbZv38/TqeThoaG6yr81Plfed5CAdwG6PV6EokE0WgUn8+nTeaUfTwajSJJEkVFRZqt
      fC51QwKr1cqqVauuezOVlJRoNkyTyYSiKEQiEVwuF2NjY/T19VFSUqJVSJMkCZPJRCKRIBAI
      MDQ0RH5+/rwySktLuXDhAj6fD6PRSDKZJBwOk5WVxcjICD09PZSVlV0mI9Xv4uJiSkpK5jUJ
      pCq/RSKRa45T6i1tdHSUnTt3otfrsdvtuN1uZmZmFqQIVFVldnZWkxEKhTCZTExPTxOPx4lG
      o8RiMYaGhti1axcGg4FIJEJGRgarVq26rptoSUkJHo8Ht9utVSVL9XtmZobJyUmsViuqqrJ5
      82athkWqGFEgEJh3vwfA4XAwPj7+IRl6vZ5gMMj4+DiZmZkkk0k2bdqk9U9VVcrLy3E6ndoK
      7lq4XC7Gx8c1W3wkEiEej2M0GpmenmZsbIyCggLWrVtHKBQiFothsViYnp4mFAoxNTU1776S
      w+FgampKW1llZGQQCATIyclhdHQUj8eD1WqlqKgIl8ulrYhT+1mplfN82Gw2/H4/kUiEYDBI
      RkYGwWCQrKwsxsbG8Pl8WCwWzdy3evVqZFnGarXi8/nweDzX3cdItZW6FtFoVBsnv9+v7U0l
      EglKSkrIyckhFouRTCYpKysjKyvrutciOzubkZER7VrEYjHi8bjYBL4d0Ol05OXlcfr0aYqK
      iigvL2doaIi8vDxg7g2nvr6evLw8ZmdnuXjxIlu3bsVgMNDa2sro6Cjbt2+fd2PQZrMxNTXF
      8PAwO3fuJB6Pa8vY9vZ2DAYDGzdupLe3F5/Pp90MFRUVNDc3U1paSllZ2bz9SN1Mw8PDbN++
      nUQiwfT0NDU1NXR0dABwxx13cOHCBe2BbLFYmJ2dpb29nczMzHlLLKbG6cyZMxQWFlJRUaGN
      k06no729nfr6enQ6HVNTU4yNjREIBLTc/wMDA+zevXteE01KRlNTE3l5eaxatYrh4WGys7Mx
      Go20trZSX1+PXq9namqK8fFxpqenycnJoa2tjaGhIbZv365tJl5rnLq7u4lGo9TX1+N2u9Hr
      9RQUFNDS0kJpaSnFxcV0dHTQ19dHfn4+1dXVGAwG2tra2LhxI9nZ2fNeC5fLxcDAAKFQiG3b
      tmlmoMLCQlpaWiguLqa0tJTOzk56e3vJzc2lqqqKnp4eent7qaqqori4eF4ZTqeTwcFBAoEA
      O3bswOv1oqoqRUVFtLa2kp+fT01NDYWFhRQUFOBwOCgpKcFisXD+/HnWrl1Lbm7uNds3mUyY
      zWZaW1tZt24d2dnZXLhwgZqaGtxuNxMTE2zZsoWCggIKCgpwuVxUVFQQi8VoaWlhdnaWzZs3
      z7snk7Kxnzt37jIZVVVVeL1exsfH2bJlCzqdjqamJsbGxtizZw/FxcX09fURiUS444475t1r
      cDqdDA0N4ff72blzJz6fD0VRKC4u5vz58+Tl5VFVVcXQ0BBdXV0UFxdTVlZGX18fvb29lJeX
      Xzf9vMPhYGRkBK/Xy65du5iamkKWZREHcDtxtfwsV3525RL1RnK6XGt5O18b1/rNrSBjoe0v
      5PvFlnGtY69lWriWOep2kHGt3yxExkeZTwv5/qPIuBn33owmh6YAAASHSURBVGJfC6EABAKB
      YIUi9gAEAoFghSIUgEAgEKxQhAIQCASCFYpQAAKBQLBCEQpAIBAIFoCqqiSTyQUF2cFcZLok
      SQs+/loyUwVh0oFQAAKBYEUzOjrK888/z89+9jMmJiY+9LBNBXQBvPHGG9dN7ZDijTfe4OWX
      X9ZST/zoRz/ipZdeoq+v77oP9PHxcQKBAMlkktdff33eqOtgMMjY2Ng1vz958iT/8i//wu9+
      9zvC4fBl34lAMIFAsKLp7u5mbGyM+vp6nnnmGfbv38/Jkyfp6uoiKyuLX/3qVzQ2NlJYWIjR
      aKS0tJTBwUGOHTuG0+nUopUnJiY4ePAgZrOZcDjMj3/8Y3bu3ElNTQ3hcJi3336bT33qUzz3
      3HOsXbuWeDzOu+++i8lkIjMzk2PHjtHT00NRURE/+tGP6OnpIT8/n8OHD5NIJPD5fJSVlfGn
      P/2J9vZ2ioqKMBqNvPHGG7z11lvk5+eTmZnJm2++STQapbCwEJ1OxzvvvENlZSWBQOD/b+9u
      VpJpwwCO/82cSbPHMM1BzQ+iRLGVC2nfIggi6Qw6hA4lCBKiRRCRCdHGRZugTdGHqUQfJE3h
      RFhCTZKGmb2LaN734T2E7t8R3LO65r4X/4uTkxOi0Si5XI7X11dxAxAEQfhJPciyTKvVotPp
      oGkauVwOSZKQZRmLxcLu7i6Pj4+k02k+Pz9Jp9M0m02azSYLCwvYbDYWFxd5f39HkqS/ktk2
      m41YLMbk5CRnZ2csLy9jMplYXV1F13Xa7TaqqrKzs4MkSVitViwWi5GwyGazXF1dkc1msVqt
      NBoNTCbTX+f7Odf6+jqqqhrf9/N0JUkSKysrvL29sb29LQaAIAiCqqosLS0xNzdHq9Uin89T
      q9V4eXkhEAgQiUQIBoN0Oh2q1Sper5dUKoUkSei6TqvV4uvri6mpKQYGBrDb7SiKwtjY2P9S
      E/V6HbPZbOyk6Onp4f7+nmKxSL1ep1qtEgwGicfjeL1eHA4HExMTeDwe/vz5QyAQYG9vj2az
      SVdXF+FwmHA4TCgU4uHhgVQqRSKRQNM04Hsvw/7+Pr29vUxPT3N3d8fMzAzJZFIMAEEQhPHx
      cebn58lkMlxfXxvhNZPJhNvt5vj42Pij9ng8PD09kclkgO+ukizLyLLM1tYWuq4bi4L+S9M0
      1tbWOD09JZlMEgqFsNvtxONx4wagKAoAg4ODHBwcUKlUgH/zDc/Pz0QiEaxWK7e3t8B356dc
      LhuNoo2NDfL5PIFAAPheTjM7O0sqlaK/v5/R0VE2Nzc5PDwUKQhBEH43XddpNBooisLFxQUe
      j4dyuUx3dzdutxtFUSgUCkbt1u/3U6lUuLm5IRaL4fV6ja1zpVKJkZERQqEQqqoyNDRkVHML
      hQJms5lQKITT6aRWq3F5eYnD4WB4eJhCoYDdbsfpdOJyuSgWi/h8PtrtNn6/H03TcLlclEol
      Op0OiUQCm83Gx8cH5+fnSJKEz+czYojRaBSz2WzURPv6+oDvHQdHR0c4nU4xAARBEH4r8QQk
      CILwS4kBIAiC8Ev9AwOd7Iok9fw5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Ratio of Deaths to Population of top countries with highest and lowest deaths' width='384'>
      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
      0slSWBmSs1v0l3utPZl/ude63W7cbrez/PJilmWh6zqqqmJZljO2f2neJNM0sSwLt9tNuVzm
      9OnTHDp0iN7eXtxuN/l83mkEZLNZ0um003Oyv8+RkRHy+Tz19fXs2LHjo35dQnxkmzoAwEol
      2tjYSGNjI4VCgYmJCV566SUGBgaAldbzR6HrOoVCgWg06owxX04mk+HkyZMcOnQIn8+H3+9H
      VVUKhcKaiudSHo+H+vp6crkc5XIZRVGIx+NrNkwFAgFCoRCFQsFZcx4MBrn33ntXXWcYBpqm
      kclkOHLkiPO4vR6+WCxetvW9Uexe1KWBxn7sci18WEmqbX/3lyoWi04vraamhkqlsuZeDMOg
      UCgQDAYxTZNAIOB8ZxerVCpomkYkEiGbzfLee+/xgx/8gJ/92Z9leXmZ5eVlSqUSmqYxOzvL
      9PQ0W7duxe/3oygK5XKZd955h2g0Snt7u6z9FzfFpg8AFwuFQmzZsoWf/dmf5c0332RxcfEj
      BwC32004HGZkZITt27df9rrFxUWGh4d5//33+S//5b84lT/An/zJn1zxcwzDIJfLUVtb6/Rk
      8vn8muGHSqWyKsWf3Yq+dDLXXqWUSCT41Kc+teaaYDB4xYB2rdra2sjn85w7d27V46Zp8t57
      7/Hggw9edgiqqamJ0dFRTpw4wWc+8xngJ0FtcnIS0zRpaGigo6OD0dFREokEe/fuBVbW42ez
      WcbHx4nH4/j9frLZLCdOnFgTUEZGRpiamuKnfuqnmJmZIZlM0tvby1/8xV84ZbUXEDz//PMs
      LCzwK7/yK3R3d6MoCqlUimeffZbf+73f4/7779/or1CIq7KpA8DY2BiKotDU1ITb7UZRFCqV
      CqOjo3i93muq6OzdxJZlMTU1xfnz52lra2NpaYm5uTny+Tzwk2EOO2eny+VC0zSWlpY+cAwZ
      Vir1TCbDxMQE/z977xkkZ3Xl/3+6n845z/TkrBmFYaRRRgKWAtkmOe3WwmK8yzqs7f96vZTZ
      8Fvbu6ztTcWmWldRzq6ysQ3YBBsBAksGCwECgbI0I03O0z0znXP8v1A91xrNSEIJSej5VOkF
      3c/Tz+3bwzn3nnPu+XZ2duJwOMjlcoyNjYmQkFarJZ1OEw6HiUajuFyus55nMJvNWCwWgsEg
      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
      Z5SrTKfTBINBJicnzzqWkZGRRTUZTqZYLIquo9FodIFspEw2myUSiTAxMSGa6ykoXAlcNTuA
      UCjEyMgIr776KsuXL6e1tZXa2toF1+3cuZORkREikQif/vSnRYfNq4G+vj4qKk6coD1dt8ho
      NMrQ0BAzMzO0t7dTV1f3Xg7xolMqlRgcHOSXv/wl/f39WCwWZmdnWbduHRs3bpwnpLIYW7du
      5Z133mFwcBCHw0E2m2XNmjXceeed+Hw+4ETL6Ndff53nnntONMjLZrP8xV/8BW1tbWKup6en
      OXDgAD/72c9wOBwkk0l0Oh333HMP1113HTabjVKpxPHjx3nppZfo7e0VbcSLxSJ2u50vfvGL
      1NTUkM1mmZiY4Nvf/jaZTIZCoYBarSabzXLzzTdz880309DQcKmnV0HhjFw1O4BcLkcoFCIY
      DDI+Ps709PS89+W+7ZOTkwwODjI0NESxWLyqVltyn/gzrTrlVs1Go/GqcWxnolAosH37dqan
      p9HpdFRVVQkJxl27dgkdhcXui8Vi7Ny5k5mZGVwuF36/n2w2y+DgoBC0T6fTjI2NsWPHDoxG
      I16vF7fbTSQSYd++fQwMDIjPPHToEHv37hW6wS6Xi1KpxAsvvMDc3Jz4e+rp6SEajaLVavF6
      vVRVVaHT6Zibm2PXrl3E43HC4TC9vb2Uy2WsVis+n4+qqioymQx9fX28884779kcKyicjqtm
      ByBTX19PNptlampq3uvlcplMJiNCABci53glY7VaWbp06eUexkUjn8/zve99j/vvv58/+IM/
      YNmyZUxOTvJ///d/PPvss9x///2LSiZms1kCgQC/+93v+NM//VM++clPYrFYxI7gscce4847
      7yQSidDf389vf/tbXnjhBSHR+atf/Ypdu3ZRLpfp6uoCYMeOHYyNjfG5z32OdevWkU6nOXz4
      MPfeey+33XYblZWVaLVa9u/fT3d3Nx0dHUKveP/+/ezevZtf/OIXrF+/nmQyyaFDh7j//vtp
      bGzE5XIB8PTTT/P666/zwgsv8PGPf/y9m2gFhUW46hxAY2Mj/f39BINB8vm8EHPP5/McOHCA
      yspKVCoVg4OD4h5Z4er5559naGiIYDCITqdjzZo1tLe309LSwujoKO+88868FSGcEBfZsmUL
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 17' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdaXQd553f+W/d/WLfF4IgAJIAuIkSta+mFtvtbrtj9Zpe0+4k03Yy5/Qk
      Pcmk05NF6ZP0meTMyfRMetI9baedtNuyLduyKFkSLZHUQpHivgIgCZBYiH3fLu5ay7yAAG64
      C9WATKp+n1eX4P/WfeqpuvW7VfVUleE4joOIiLiO56fdABER+elQAIiIuJQCQETEpXw3/+G/
      HOnAslf/tEBjcR5/Z2sDHo8yR0TkTnBLAFi2g7UG54VtnWsWEbmj6Oe4iIhLKQBERFxKASAi
      4lIKABERl1IAiIi4lAJARMSlbhkG+rdl2xa2aeH1+zEMY7Un7wopK8nF0Q4iyQgtlVsoz6/I
      WG8mE8y0n8UzF8G7sZHi+o0Z6y3TZPrCWTyTsxgb6ijd2Jq1TbHZKRbOnQWPh4J7dxEqKMpY
      H1+YI3LmNNg2+Tt3Ei4uz1ifMBN0jJwnYSbYWr2d4nBJxnrHceiZusLQ7AD1JQ00lDVlnYfO
      iQGmogmKQ35aK9fjMTL//mm7OsTweJTCAh/3b1pPwJf569I5NErf8Dx5YS/3b64jHAhkrE8k
      4pzv7CYSN9hQFWJjQ+Z5SJkp2i51MRM1WFfmo3VTc8Z627Zpu3SRiYiHqiLY0bolYz3AzNw0
      bV1D2A5sbaqisrwyY/18ZI62rn5SlkFzfSm11bUZ6+PxGG2dfSwkHJrXl7CuNnN9MpmkvbOH
      2ZhNU00BDfX1WedhYnKCCz1j+L0G97TUk59fkLF+Znaa813DGAbc21JHYWFxxvr5WIKTncPY
      ts19m2soK8zLWL+QSHK6a5hEymJHYxXVpZnbAzA6FeFS/ySlhSG2bKjA7/NmrJ+cjXKhb4L8
      sJ/tjVUE/JnrZyNx2nrGVjcAktEF+k4fw7FtAnl5NNz/qELgNqWsJN88+pcc6nkPy7aoKqjh
      93f/MxrLVt6om8kEA//jG/DeEbAs7OICUl/9h1TsenjFestMMfjSt7HfPACmiZMfJvG7v0XN
      E8+kbVN0apyhP/kP+AbHwICZhjrW/+//Om0IxBfmGPgP/x5f7yA4DjPrKln3R39EXnn1ivUJ
      M8F/Pfh/cXrwJLZjU1e8nn/69B9SU7TyxsFxHA50vsW3T36ThJkg7M/jdx/5Kk9s/EzaeXi3
      u419l3tIWg4+j8GTDZN8ofXetCHw5qkO/seP24jFLbxeg2cfXs/v/eyjaUPgYMcV/uJHp4gs
      mHi9Bo/cU83vP/9E2hCIJ+J8/Yf7eK9jDtOGohD8o5+f5bFd961YnzJTfOu1/bxxcgrThrwA
      /P3PT/LZxx9dsd62bb7/k3f4weFRUhYEffAbu0f58nO70/bRzNw0/+4be+mbcHCAmiKHf/33
      n2Vd1crLYT4yx3/865/QMZjCcaCiwOFf/ObjbE4TZPF4jD/73gE+7JrFtqE838Mf/MpDbGvZ
      tGJ9Mpngr155l33nprBsh+Kwh//5y/fw0M7taeehf2iIP/nW+4zM2hgGbK+7wB/+zufThsDU
      9BQvfOMt+qdtDKCh/Dx//Hs/S2Hhyuv2fCzBv/3v79AzMIMD1FYU8MLvPk11ycrTX0gk+T9e
      /IC2K+M4jkNlaR7/8reeZGNNWdp5uNA3zn9+6QgTM1F8Pg8/89AmfucL96YNgd6RGf7Ti4cY
      norg9Rg8ec8G/vHzD6UNgdHpCH/yrQ/oH5td3UNA/nAejQ88SmldPVYyuZqTdo2eyW6O9B0i
      ZaWwHZuR+SH2d/4kbX1ieBDz0FE8poXHAe9MhLk330xbb87MkNj3Lp6UiccBTyTG/GuvZ2zT
      zAfv4R8YW6y3wd8zyMzRw2nrZ499iL97AI/t4HHAPzjO9MH30tZfHG3nzOBJTDuF7Vj0z/Rx
      8MqBtPVJK8meth8QN+M4OERTC7x87nsZ5+Hd7iukbDAMA8uBQ1d7SZhm2vrXD10hFrcBA8uC
      904NMDUfS1v/5pErRBas5fpj7aMMjM+lrR+dmOXwhSlStgcHD7NxDz852pO2fm4+yv7To8v1
      C0kPb3yYvj6ZMnn9SD9Ja7E+bnp49VD6eoBT7b30TICFBxsPQ3NeDp++krb+wpVBLgwmsZzF
      +rGIl/dOdqet7x4Y43jXDKa9WD++AG8d60xbPzIxy/tt46RsAxsP0zF488OujPPw3skuhmbB
      xoPleGgfjHOu82ra+kOnu+ib/qgeD92TNkfPpf+MDzv66R6YwXbAcWBoPMKB0+n79dyVUdq7
      x7FtB8eBsakob51I36cAr3/Yxdj0ArbjkExZvHO6l8GJ+bT1bx2/wuDEPLbtkDJtPmwfoGtw
      Mm39u6d76R2ZwbKd1d0DMAyD6YGrDLafobp5cXez8+A+EvPzeFo3k9y8TnsEWUQTUSzbvOVv
      iURixfpUPI5hWsv/NgAnnkhbn0zEIZW6oZ5E+noAOxrj5qVmRWNp32NFb9xQGoAdjaetX4gv
      YDv2jX9LLKStT5gJ4mb8hr/FUun7CCB10+1NTNshmUziSXPbk2TqxvaYpkMikUzfr0nrhn/b
      lkM8Q308mcK0b+zVRMrJXH/jR5AwydCeFKmb6pMZ6gFiCYubeyOWtNO+J5awuLn74hnq44nU
      LXcZyFyfxLRurM/UHoBo4saZdhyIJVJp3xON3/ojYCFupq+PJbn5pgbRePrlHI0nsG/qpFg8
      fXsAFmI3/nhOmRaxWPrv6M31lmUTzVAfiV77+6oGgJlMUN6wkfKGJi4e2Et1y3ZanvosAA3F
      eQQCAd0LKIvmqhaaK1rpGG0DIOwP89SmpwkGgyvWG+vrmdzajHO+EwOwfF7Cn3kibb23ohLv
      /Ttxjp5d3DB7DEK7n0xbD1Dw2GNMvnUAfzSBA6SK8ih7+OG07yl88CFGX30d/+wCBpDKC1L+
      2KNp63fU7WR9yQb6phd/SeUHCnhi02fS1vv9fnZvepbXO/Ys9QKfbflCxnnYVVvD8cExPoo8
      dlRVkh8O4/OsvJv82M5a9rzTvfxl37G5jMrSgrSf8djOdVwZnMX+aPuzsb6I+uqStPXrKotp
      rQtyfmAxaHyGxaPbK9LWlxc73NtUwNHuxfD2GDaPZaj3+Xw83FrMuxeWvuwOT2wvy9hH97bW
      UPL+BWbifgDyfCke3Fab9j1bmiqpKTIY+mhHJ+Q1eXhbddr6Tesr2VgV4tLo4kY36LV54p66
      tPV1VaVsry/g1NXFefB7bD6zc13GeXh8Rz3vnBsmai4u1+oiD/dsTv+eR+6p59WjvURSi/XF
      QZuHt29IX7+tnh8dvMTM/GKbwiEfT+1sSFu/c1MttRUFDI1HFuc54OUz96avB3jugY20946T
      +CjBd26qpmFdGcGgf8X6p3c1ceziENH44rrRvL6MLQ1VaT/jM/c18s6ZPuajSYybHwjzp4fb
      P/a9gGJzs/SfPYGVTFK2oZGqzVuWf/E3Fefx/LZGBUAOJhcm+KD7PWbjMzxQ/zBbqrbhTbOh
      AohNjjHx7j48U7P4dmyj4sHH8PrTn4BMzE0z9s7beEYn8bRsourx3XgD6VdIx3GYuXyByPsH
      weOh6JmnKW7MfAJytvcyc+++A5ZNwVNPUtK8FSPDSdex+VEOdr9DLBXlkYYn2FTRnPEkbTwV
      58PeD+iZvExz1RYeaXicgDfDPJtJDvddYjQSoywc4InGLeQHQhmmn+KtU5foGZyntNjPzz20
      hYqi9CfvkqbJO+e7uNQzQ0GBjy882My6sswnsscmJzhw9DwzUYPW9Xk8+cAu/P6Vv+QA07Mz
      7PvwDBPzBk01fp555AGCGZbbQnSBnxw6zsiMh/Vl8PknHyYUTD/PAJ093XxwuhfLgUe2r2NH
      a0vG5dAzcJX3T14hkYL7WyvYtW0bXm/6dXVkbJx3jl9gPm5z36YK7t+xBV+Gk+uTU9McONbG
      VMRme0Mxj9y3PWMf2bZNe+dljrQPEvQZPP1AMxvW16WtdxyHzu5eDp7txQPsvn8jmxob0tYD
      XBmeYt/Jbkzb5ul7G9m6oRJPhiMbV8dnePtEN/GkyWPb13Pvxhq8GbaDpmVz7sooJzuHqSzO
      Y/d9DZQWhtPWW7bNhb4JjnYMUpQf4On7GqksyU9bb9sOlwen+OD81dUNAFjsUMdxMAzjhsM9
      CgARkTvLqg8DvXnDLyIid6ZVDwD523EchyNHjjA6OsrGjRu55557sgbqzMwMhw4dwnEcHn/8
      ccrK0g8xA4hGo7z77ruYpsmjjz5KVVVVxvpUKsX+/fuJx+M89NBD1NWl36WGxd3w/fv3s7Cw
      wL333ktjY2PWeRgaGuLEiRMEAgF2795NOJx+l9dxHC5fvkx7eztFRUU888wzWaff29vL2bNn
      CYfDPPvssxkPO4hk0tfXx5kzZwiHwzzzzDMZD0kBDA8Pc/z48ZzWbYCJiQmOHDmCx+PhySef
      pKgo8zU3s7OzfPDBBzl//x3HoaOjg66uLl0JfKdxHIeioiJ27tzJT37yE+bn0w//ul5TUxP5
      +fns27cvp8+or6+ntraWPXv25FRfW1vLli1b+M53vpNTfWVlJTt37uS73/0ulmVlfQ/A1q1b
      mZqa4uzZs1lrPR4P9957L+fPn2dgYCBrvWEY7Nixg56eHi5fvpxTe0TS2bFjB319fXR1ZR6W
      umTr1q3MzMxw+vTpnOo3b96MbdscOnQop/rGxkYKCwt56623cqoPBALs3LlTAXCn8Xg8FBYW
      8uKLL1JcXEx+fvqTOUuKioro7+/ntddeY9u2bVnr8/LymJ6e5rvf/S47d+7MWu/3+0kmk3zj
      G9/ggQceyFrv9Xrxer385V/+JTt27Mh4UnBJdXU1J06c4NixYzQ1Zb4i1jAM6urq2Lt3L1ev
      XqWmpibr9Ovq6njvvffo6Ohg/fr1WetF0qmrq+PgwYO0tbXltC5VVVVx6tQpjhw5knXdBigt
      LaWzs5P9+/fT0tKStb6wsJChoSH27NmT0/ffMAyqq6v58Y9/jPeFF1544fr/PNI/fstY4NVQ
      GvKzpbJE5wdy4PF4qKio4PLly2zbto1QKPPIDYBgMEgoFGJsbCynlSAYDFJUVERPTw/33bfy
      1afX8/v9VFVVce7cOR5+eOWrjK/n8/moqanh7NmzPPTQQzmd/M/PzyeZTOL1eqnP4ZL/oqIi
      JiYmqKmpobS0NGt9QUEBc3NzFBcXZz3sJZJJfn4+kUiEwsJCqqtXvsL95vpkMolhGGzYsCFj
      rWEYhMNhDMNgYWGBzZs3Z51+MBgkHA4zMjLC9u3pr5S+/jOKi4t1DuBOE4lEOHToEKFQiIWF
      hZwOn3R2dtLX10csFiOZwxXYfX19XLhwgWQySSQSyVo/OjrKyZMn8fv9OdVPTk7y4YcfLn9J
      nBxGlZ08eZJIJEIsFiMWS3/FLYBlWRw8eBCv10sslv6CtOstnSOJx+PE4/Gs9SLpHD58GMuy
      iMViOa1Lp06dYn5+Pqd1G6CtrY3R0VFisVhO56q6urro6ekhGo3mNP1UKsXBgwfx+/3aA7jT
      LP1StiyLJ554gpqamqx9FggESCQSlJaW8uSTTxLIchOypUM6+fn5PPPMM1n3MHw+H6Zp4vP5
      +PznP5/1JJbf718Ors997nMUFBTkNA/xeJyGhgYeeOCBjIeNDMPA7/cTj8fZsWMHW7duzTr9
      YDBINBqltbV18dinhiPLxxQIBIjFYjQ3N+e0Li2tqw0NDTz44INZD4kufZ9ramp47LHHsp5k
      Xvo+l5aW8tRTT2X9/l///Vn16wDS0XUAIiJ3Fm2NRURcSgEgIuJSCgAREZdSAIiIuJQCQETE
      pRQAIiIupQAQEXEpBYCIiEspAEREXEoBICLiUgoAERGXUgCIiLiUAkBExKUUACIiLqUAEBFx
      KQWAiIhLKQBERFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSkFgIiISykARERc
      SgEgIuJSCgAREZdSAIiIuJQCQETEpRQAIiIupQAQEXEpBYCIiEspAEREXEoBICLiUgoAERGX
      UgCIiLiUAkBExKUUACIiLqUAEBFxKQWAiIhLKQBERFxKASAi4lIKABERl1IAiIi4lAJARMSl
      FAAiIi6lABARcSkFgIiISykARERcSgEgIuJSCgAREZdSAIiIuJQCQETEpRQAIiIupQAQEXEp
      BYCIiEspAEREXEoBICLiUgoAERGXUgCIiLiUAkBExKUUACIiLqUAEBFxKQWAiIhLKQBERFxK
      ASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSkFgIiISykARERcSgEgIuJSCgAREZdS
      AIiIuJQCQETEpRQAIiIupQAQEXEpBYCIiEspAEREXEoBICLiUgoAERGXUgCIiLiUAkBExKUU
      ACIiLqUAEBFxKQWAiIhLKQBERFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSnf
      ak7MsW1mhvqJzc1Ssm49eSVlqzl5EZGfOvPqUVJnX8SxUgR2/DLejbsxPN609dbQGZJnvo2T
      iODf+iV8zZ/H8PrTTz+xwOyZlzD63sfOqyb84O+QX7M1/fRTcWbPvwKX38YOFRO6/7cpWL8r
      bb1jm5hd+0h17FndAEjFYySjC4QKi+g9eYStz34Bw9BOhoh8OtjTvcTf+Oc4sSkAYgMnyPvF
      v8S77r6V6+eGiO39I5zZqwBYA8cJB/LxbXw67WfMnv0+vg//bzyOufgZM734nv8zggUVK9bP
      XdiL9+B/xGOnAEhMdOH9xb8gXFK3Yr3Vf4z4W/8azNjqBkAgL5/KTa0MtZ+hoLwSMBjv7sJM
      xilZX4vVWo9t26v5kSIinxjz6lGc2PS1P6SiJHsO4q/asWK9NXQOZ27wugnESXa/DxueTPsZ
      Rs97yxt/AO/kJazpq5ihkhXrnd6Dyxt/AO/cVazxTsyC6hXrU93vgxkDVvsQkONw9cwxvP4A
      63fswjAMfIHAYqN8i7s8hmGs5keKiHxiPAXVYHjAsa79rag27XbNk18OviCkojnVA1j51Vx/
      gMjxF+AECtK+x86vuuHfji+EEyxO36aidcuvVzUA4vOzzAz2U7fjPiKTYxRW1VK6vgGAouI8
      vF4vHo8OCYnI3cnT8Dj29udJdf4EHBtf45MEmj+P4V35HIBn3X34d/4qqfYfgZnEW/8QgW1f
      xpOmHiDvoa8Qm+nFO3kJ21+Aseu3CVdsTPue/F2/xsJ4B97R84sb/+2/RN66HXjT1Btbv4g9
      cByz/wiG4zjO9f/5p4fbsW78U85SiThzo8PgOPjDeRRWVi+nUFNxHs9va1QAiMhdzTGT2FPd
      4Fh4yjZi+MOZ660U9nQvWEk8JQ0YwYKsn5GITMDcII4/n0BZIx5v5t/qyeg0zkw/ji+Iv6wJ
      ry+QuU3JBezp3tUNgEwUACIidxZtjUVEbpNlWViWlb3wunrTNLMXfsS27duuT6VS2QuvY5rm
      6p4DEBH5tOvo6ODtt99mbm6Or371q1RVVWWsv3LlCq+//jqRSIRf//Vfp6mpKWP94OAgP/rR
      j4hEInzpS19ix46VRxgtmZiY4Hvf+x4LCwvs3r2bRx55JGO94zgcOnSIEydO4H3hhRdeuP4/
      j/SPs/oHgKA05GdLZYlGAYnIXe+pp55idHQUv99PbW1t1vpHHnmEeDzOwsJC1gAA2LVrF8Fg
      kMHBQbZs2ZKx1nEctm/fTlVVFe3t7dx7771Zpx8MBtm9e7cOAYmI3I6Kigr27dvHxMQE27dv
      z1pfWlrKsWPH6Ozs5MEHH8xaX1hYSEdHB0eOHOGJJ57IWp+Xl8fAwABvvvkmzz33XNZ6wzAo
      KyvjBz/4gQ4BiYjcjuPHjzM6OsrXvvY1fL7sm9D29nYuXbrE1772NUKhUNb67u5ujh07xle/
      +lUKCrKPGBoZGeGtt97i937v9ygpWflises5jsNbb71Ffn6+9gBERG7H+fPnmZyc5M///M+5
      cuVK1vpLly4xMTHB17/+ddra2rLW9/b2Mj4+zje/+U2OHz+etX5oaIixsTG+9a1v8f7772et
      t22b9vZ2enp6bm8YqJVM4vH7P9ZxfA0DFRG5s9zW1nim8xILg4M4a3CdgIiIfLJyPgeQikaJ
      jY8z19eH49gUrK/XiB4RkbtY1gAwo1FmujqJT0+TmJvFdhzGO9rxhkLkVWYe/yoiIneurAHg
      CQZxHEjMzmLbDnk11ZRv3Y4/L++TaJ+IiKyRrOcADMPAGw4RKi/HMaBq532ESkrwBjLfbEhE
      RO5sWfcA4lNTBIuKKdm0mamuLm34RUQ+JbIGQKisDAwDwzCo2Jr+uZQiInJ3yRoAhsbti4h8
      KuU8DNRxHMxEfPnfHq8Pj8+noaAiInepnAPASqU48+pL+PPyiM1MEywoYttzP0eosGgt2yci
      Imsk5+M7yegChVU13POF5ymuqaOyaTPTg1fXsm0iIrKGcg6AcFExZiLBmT0v4VgW/lCY/NLy
      tWybiIisodu6HXRN6zZSsRgYBhVNzfg0JFRE5K6V8x5AdGaKnmMfYJkprFQSdEM4EZG7Ws57
      AIH8Ajw+P75AEDBAo39ERO5qOQWA4zh4PF5qWraTWhoKqj0AEZG7Wk4BMDcyRGIhwmTfFaxU
      CoCqTS34gsE1bZyIiKydnAKgsKqaAqeKsg2NOI5DKh4jEM5f67aJiMgayikAPF4fiYUIfaeO
      YiXizAwPsPOLv0x+mYaBiojcrW7jVhA2kckxvF4fNa3bF0cCiYjIXSvnAAgVFNH4wGMEwnlY
      Zor88sq1bJeIiKyx3O8FZKboOfYBHp8fMxHn3i/9Ml7fbV1HJiIid5DbuBBsmuKaOu77O79K
      RVMz0ZmptWyXiIissZwDoKC8gmQsyqmXv01kYoyCiuq1bJeIiKyxnI7hRGemmRsdoqy+Eeob
      17ZFIiLyicjtSmDbwkwkcLju6l9dCSwiclfL6RBQflkFFRs3YyWTrL/nfgBSidiaNkxERNZW
      zucADMPD9EAfC1MTTF3twTattWyXiIissZwDIJCXz4b7H6H/7AnWbdtJXmnpWrZLRETWWM4D
      +Q3DoHxDE+UbmtayPSIi8gnJKQAWpiZuef5vTct23Q1UROQullMAGB4vvkCQG8b96IEwIiJ3
      tZzOAeSVlFLdvJXZoX5GLpxnqq97rdslIiJrLOeTwAvTk3i8PnZ+8RcJFZUQmRxby3aJiMga
      yzkAwkXFLEyNc2H/m8wMXSVcVLKW7RIRkTWWcwB4/QE2Pf404eISNj7yFIE8PRFMRORulnMA
      JKMLXD70DnmlZfSeOExsdnot2yUiImss5wAwU0l8wRAltfUE8gowk3oimIjI3ew2zgGUULmx
      he6jBymuqaNATwQTEbmr5RwAVirJZO8VbMtkeqAPMx5fy3aJiMgay/lWEMloFMPjYfNjz4AB
      vnB4LdslIiJrLKcAmB7oY7DtDLOjQ1w+9A4Y0PLUZzUSSETkLpZTABRW17KxoIiFyXEKK6uJ
      TE3g0QPhRUTuajmdA/D5Azi2zezIIMHCIubHhonPza5120REZA3lPgqouJjozDQX97/J7Ogw
      wYLCtWyXiIissRyfCWwTm5tl22e/yPDF81QWleALhta6bSIisoZyCoC5sWEmeq9Q3rCR8Z4u
      cBafExwu1v2ARETuVjkdAnIch/j8HL3HD9P08JPkl1eQiuuh8CIid7OcAqCoupb80nJK6xso
      rl5HuKiEcImeCSwicjfL6RCQx+Ol8cHHlv+94b6H1qxBIiLyych5FND1pgf6SEYXVrstIiLy
      CcppDyA+P8fA+VPL/x7v6eKen/myrgQWEbmL5XYhWCDA2OWLFNfWUVbfSEFZBeiZ8CIid7Wc
      9gC8gSA7vvA8BWUVeHw+vD4/wXxdCCYicjfLaQ8gMjnO7PAAhtcLwPTgVcxEYk0bJiIiayun
      ADATcWKzM8DiNQHRmSmslJ4IJiJyN8vpEFBx9ToG287Q/pNXcRwHrz+g6wBERO5yuV0H4POx
      7bNfJDozhWEYhEvK8Hg+1ghSERG5Q+R8U3+P16vnAIuIfIp8rJ/xPccPk4jMr3ZbRETkE5Rz
      ANimSWIhguM4lK6rx+Pzr2W7RERkjeV8CMi2bS4ffpdQYRGRiTG2Pvdza9gsERFZaznvAXi8
      Xgxgsq+bUEERXj0TWETkrpb7HoBlUrNlO/mlFUwN9GGlUnj9gbVsm4iIrKGcA8AwDHpPHCER
      mcfweimtq1/LdomIyBrLOQDikXkKyivJLy3HGwiQSiQI6XZAIiJ3rZzPAYSLihefDFZWwdzo
      EL5AcC3bJSIiayynPYBkLMpETxeOA4bXS3XLdvyh0Fq3TURE1lBOewDx+Tkuvfc2Ez1dxOdm
      cCxrrdslIiJrLLeHwlfV8MRX/jHVLdswkwnGe7qwTXOt2yYiImsopwCwTZPI+Chzo8PYpknp
      +g14dB2AiMhdLacAmJ8Y5dTLLxKZGAMgNjOtPQARkbtcTj/jCyuqefwr/wjHca69MaiTwCIi
      d7OcnweQV1K21m0REZFPkJ7qIiLiUgoAERGXUgCIiLiUAkBExKUUACIiLqUAEBFxKQWAiIhL
      KQBERFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSkFgIiISykARERcSgEgIuJS
      CgAREZdSAIiIuJQCQETEpRQAIiIupQAQEXGpNQkAx7bXYrIiIrKKVjUAbMui59ghzr35I2yF
      gIjIHW1VA8DweFi/8wFCBUWAs5qTFhGRVeZbzYkZhoE/FMIwjOW/dR7cR2J+Hk/rZpKb193w
      fyIi8tOzqgGwkpanPgtAQ3EegUAAj0fnnUVE7gSrujVORhfoPvYByegCg+fPYJnmak5eRERW
      0aruAQTy8tn48JOrOUkREVkjOh4jIuJSCgAREZdSAIiIuJQCQETEpRQAIiIupQAQEXEpBYCI
      iEspAEREXEoBICLiUgoAERGXUgCIiLiUAkBExKUUACIiLqUAEBFxKQWAiIhLKWyFo8wAACAA
      SURBVABERFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSkFgIiISykARERcSgEg
      IuJSCgAREZdSAIiIuJQCQETEpRQAIiIupQAQEXEpBYCIiEspAEREXEoBICLiUgoAERGXUgCI
      iLiUAkBExKUUACIiLqUAEBFxKQWAiIhLKQBERFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAi
      Ii6lABARcSkFgIiISykARERcSgEgIuJSCgAREZdSAIiIuJQCQETEpRQAIiIupQAQEXEpBYCI
      iEspAEREXEoBICLiUgoAERGXUgCIiLiUAkBExKUUACIiLqUAEBFxKQWAiIhLKQBERFxKASAi
      4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSkFgIiISykARERcSgEgIuJSCgAREZdSAIiI
      uJQCQETEpRQAIiIupQAQEXEpBYCIiEspAEREXEoBICLiUgoAERGXUgCIiLiUAkBExKUUACIi
      LqUAEBFxKQWAiIhLKQBERFxKASAi4lIKABERl1IAiIi4lAJARMSlFAAiIi6lABARcSkFgIiI
      S3lfeOGFF67/w5H+cZw1+KDSkJ8tlSUYhrEGUxcA0zR55513OH/+PPX19QQCgYz1lmVx6NAh
      jh8/Tn19PcFgMOtnRCIRXn75ZWZmZtiwYUPW+lgsxp49exgdHWXDhg14PD/93xxnzpzhwIED
      VFVVUVBQkLX+woULvP322xQXF1NcXJy1vru7m7179xIKhSgvL89ab5om7777LmfPns15uR0+
      fJijR4+yYcOGrMvNcRyOHz/O+++/T319PaFQKGublpbbyMhITsstkUjwxhtv0NfXR319PV6v
      N2N9Mpnk7bff5tKlS2zYsAGfz5ex/nb7CGBycpJXX32VWCxGXV1d1vqFhQVefvllpqenaWho
      yFofi8V49dVXb6uP3nzzTXp7e9mwYUPWPgLo6elh7969BAIBKioqstYPDw/z4x//GMdxqK6u
      zlr/0/82yqq5cOECY2NjlJWVceDAgaz1Q0NDdHR0sHnzZvbs2ZO13nEcXnzxRXbt2sXJkyeZ
      mJjI+p6XX36ZzZs3c+XKFa5evZrTfKylRCLB3r17efzxx/nud7+LZVkZ65PJJK+//jqPPvoo
      P/rRj0gkEhnrTdNkz549PPzww7zxxhtEo9Gsbbp48SIjIyNUVFSwf//+rPXDw8O0tbXR0tLC
      K6+8krU+Eonw3nvv8cgjj/A3f/M3WesBXnnlFTZu3EhPTw99fX1Z6/fv309xcTEzMzO0t7dn
      rT9x4gSpVAqPx8ORI0ey1l+6dInh4WEqKirYt29f1nrbtnnppZe4//77OXz4MNPT0xnrr1+3
      T506ldO6/corr9DU1ERPTw+9vb1Z6w8cOEBhYSGzs7M59dH169LevXtZWFjIWG9ZFj/84Q95
      8MEHeeedd5ibm8v6GQqAT5Hx8XG2bNlCa2tr1hUeYGRkhC1btrB582YikUjWetu2WVhYoLW1
      lYceeoiurq6s75mZmaG1tZUHHniA7u7unOZjLY2OjrJx40YaGxvx+Xwkk8mM9ZOTk9TW1rJx
      40aKioqy9tPs7CwlJSVs2rSJmpoapqamsrZpfHyc1tbWj7Xcsm0UYDEwWltbaWxszDq/S2Zm
      ZtiyZUvOy21qaorW1lbuvfdeBgYGstZPTEzQ2trK9u3bGRsby1o/NjbGli1b2LJlCzMzM1nr
      k8kklmXR0tLCjh07sm6gHcdhfn6e1tZWHn74YS5dupT1M65ft3t6erLWT01NsWXLlpz7aG5u
      jqKiIjZt2kRtbS2Tk5MZ66PRKH6/n+bmZjZt2sTQ0FDWz1AAfIr4fD4SiQSWZeV0qC0QCBCP
      x7FtO6fpG4ax/Is5Go3mdMjIcRwcxyEWi+VUv9aCwSCxWAwgp35a6iOAVCqVdbf9+lBJJpM5
      7eYvvefjLDfHyX7A9vp5zqV+qc627ZyX29K6kUgk8Pv9Wes9Hg+maebUp3Ctj0zTzKmPlqYP
      5DwPS9+DaDSa02Gyj7Nu304f3bwuZTtM5vV6SaVSAMTj8ZwOkykAPkU2bNjABx98wGuvvUZj
      Y2PW+rq6Ok6cOMErr7yS0/F8wzBobm7m29/+Nu+++y7btm3L+p4tW7bw0ksv8fbbb7N169Zc
      ZmNNVVZW0tfXxw9+8AMKCwuzfklKS0uZnp7m+9//PrZtU1hYmLG+sLAQ0zT53ve+x9TUFJWV
      lVnb9HGW28mTJ3nllVeor6/PWl9TU0N7ezs//OEPqa2tzVoP0Nrayve//33efvtttmzZkrV+
      8+bNvPbaa+zdu5eWlpas9U1NTezbt4833niDTZs2Za1vaGi4rT7y+/3U1tby4osvcurUqayf
      YRgGLS0tfPvb3+bAgQNs374962ds2bLltvqoubl5uY+am5uz1hcUFGDbNt/73veYmJigqqoq
      Y304HKagoIDvfOc7XLlyhfXr12f9DMO56SfBnx5ux8rxV8LtaCrO4/ltjXfEScBPK9u2GRgY
      IJFI0NTUlPUXg+M4DA8PMzc3x6ZNm3L6VZJKpejq6qK0tDSnjYlpmly+fJmCggLq6uruiEEA
      k5OTDA8Ps2nTJsLhcNb66elpBgcHaWxszOmk8dzcHP39/dTV1VFSUpK13rZtBgcHicfjt7Xc
      Zmdn2bx5c9bl5jgO4+PjjI2N0dLSktMvw9tdbpZl0dPTg8/ny+mEqG3b9PX1Yds2jY2NWfcC
      lvooFouxcePGrH0Ei7+Cr1y5QmVlZdaNJ1xbt0tKSli3bl3WetM0uXLlCnl5eaxfv37V+whg
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='330' name='Top 5 countries Highest Deaths and Population Density ' width='384'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='340' name='Top 5 countries Lowest Deaths and Population Density' width='384'>
      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
      pL5/rfaZGvlLmTJlADjuuOMAZwBmZtFyBmBWhFSlocgsXd+/aC0f7eiknZ60tk9q1dDHH38M
      wPvvvw+ENYasdGnSpAkAf//73wHYunUrEFYBFf3c+wGYmUXOq4GaFaB0q4F+8sknAJx00kkA
      dO7cGYDnnnsuR9fV6p+nnnoqEFYHvf3224GwI5iqi7Zv3w7AkiVLgLC2kJUO8+bNA6B58+YA
      nH766QD0798fCKvCamaw/i6dAZiZRcoZgFkBSpcBaKemd955B4AFCxYAcMwxx+Tp+urbV4Sv
      MQXd96mnngJClYiVTq+//joQVgFdtWpV4n3tMHffffcBzgDMzKLlDMCsAOV1R7C8UpVH2bI/
      xXba+9XipPkBygirVauWeN8ZgJlZpDwPwKwUSa37trhp5690nAGYmUXKDYCZWaTcAJiZRcoN
      gJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXK
      DYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlF
      yg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZ
      RcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACY
      mUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwA
      mJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTc
      AJiZRcoNgJlZpNwAmJlFyg2AmVmk3ACYmUXKDYCZWaTcAJiZRcoNgJlZpNwAmJlFyg2AmVmk
      3ACYmUXKDYCZWaTcAJiZRer/AWaU57F/NHwYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Top 5 countries Total Deaths and Population Density (2)' width='384'>
      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
      BEEQxDnz/5mGJ+aQPsTSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Top 5 countries Total Deaths and Population Density (3)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Cases &amp; Policies per Country' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzd2W8cV57o+W9E7huZyX3fJIqiJGojJVsq21V27Y0e1EMDAwzu0/0f5s8Y
      zPTDvF7MS2Ma6AZmgNvuW64uWyOVJdlaKFobSXHft+SW+xLbPNCMJi2SImWSmSJ/H8CwSEYE
      TwQz45fnxDm/n2JZloUQQohTRy10A4QQQhSGBAAhhDilJAAIIcQpJQFACCFOKQkAQghxSkkA
      EEKIU0oCgBBCnFISAIQQ4pSSACCEEKeUBAAhhDilJAAIIcQpJQFACCFOKQkAQghxSkkAOAbF
      lHDVsqyiaY+0ZXfF0pZiaQcU19/opLRFAsAx0DSt0E2waZpWNC9cwzAwDKPQzQA23kTF9Hcq
      luuSz+cL3QRbMbVF13VM0yx0MwAwTRNd199rX0XqARy9bC7H//Xl40I3AwDTNFAUFUVRCt0U
      +w2kqoX/HLLxKcpEVR2FbgqwcW2K4boYho7D4Sx0M4DiaksxvY8sy8Sy3u99VBxX85Btdon2
      c0FSqRQ+n8/e1jAMFEU51DefZVr8n/9679COJ4QQh6HwHzHew/z8PIODgwC8ePGClZWVbT+3
      LIvXr1+Tz+cZGRnZ81h9fX121//ly5d888033L9/n/X1dfr7+3fcJxaLMTs7ewhnIoQQhfNB
      9gAMw7Bv2vl8HtM0uXfvHplMBp/Pxy9+8Qs0TWNsbIy//e1vLC4ucunSJe7fvw/AJ598wurq
      KoODg0xNTXHjxg0AlpaWOHfuHPX19cTjce7cucPCwgI3btygt7eXWCxGV1cXc3NzjI2N0dXV
      RUlJCS9fvqSyspIrV67w6NEjAG7cuEFJSUlhLpAQQuzDB9kD2GrzEUYmk+HTTz/F5XKRSqWI
      RqM0NjZy7tw5PvroI/r7+6mpqaG0tJSRkRGGh4f5/PPPaW9vt4919epVhoeHuXv3Lh6PhzNn
      zvDZZ58RDAZpbm7m7NmzDA4O0traSldXF52dnTx//pxr164xPT1NNBrFNE06Ozvx+XyFuiRC
      CLEvH2QAcDgcxONxLMtibW0Nj8eDx+PB7XbjdDrtoKCqGw9pnE4nmqaRTqcJBoNEIhFM08Tt
      dm97iBMKhfj1r39NRUUFMzMzOBwOVFUlnU7z+vVrXC4XpmnicDjs5wS6rhOLxWhra6OmpobW
      1lZevXrF4uJioS6PEELsywcZACKRCOvr6/z5z38mmUwSCoXsm7nL5UJRFDweDy6XC03TePTo
      EWfPnmV5eZnl5WXcbjd+v5+//OUvTE1N2UHghx9+4Ouvv2Z6epry8nIqKyu5e/cu2WyWfD7P
      7OwsTqeTkpISFhYWGBgYoLW1lenpaeLxOPF4nJmZGTRNK4rZAUIIsZcPdhqoaZpks1l8Pt+e
      N1vLstB13e4ZmKZp/zuXy+HxeLbtr2ma/cl/c1+Xy4Wu6yiKgsPhsH//Zm9g8/iKotjz7N1u
      t33MTCZLz3/9347uYgghxHv4YAPAhySby/Hf/u1RoZsBbDxA3xwaK7RiWwewGdCLQdGsA9B1
      HM7imCti6PrG36cYXrs/ThdXiuBvZJkmFu/3PpIAcAzy+fy2HkEh5fN5nE5nUdxcNlcvOovg
      BrO5mrJY/k6bvcpC2+wlF4NcLvfWc7tC0TQNVVWL4gODYRiYponL5TrwvoW/CwghhCiIwn/E
      OAUsC/7fl9FCNwPYaEsRfIAqSnJt3mZZVlF84oZia0txvVbetz0SAPZgWRbr6+tEIpEdf65p
      GgsLC9TV1bG2tkZFRcWux4pliyO5lxBCbJIhoD2YpsmTJ08ASCQSRKNREokElmWRSqWYm5tj
      eHjY/nk+n2dpaYn19fWiybgphBC7kR7APn311Vc0NDQQj8e5ceMGT548IRQKkc1mUVWVyclJ
      fD4fk5OTLC0tcevWrT17BEIIUWjSA9in8vJybt68SUlJCdPT0zQ1NXHt2jVCoRCwMbvG5XKR
      TCbJZDLE4/ECt1gIIfYmPYD3oKoqsVjMXii26dWrV3R3dzM5OVnA1gkhxP5ID2APiqLQ3NwM
      QGNjI4qiUFtbS2trK7qu87e//Y2ysjIAmpubaW9v5+nTp8TjcUpLSwvZdCGEeCdZCPaedis6
      s3k5t05Xy+Xy/POL1WNtnxBCvIsEgGOQz+fJGMXR2dJ0DafDgaIUvj2GuTE11lEEZRgty0Q3
      DFzOg6+mPAqGaRTFdclredyu4lgdvdEWF1D4Cfi6oaOqKmoRvI9M08C0LJzvUS5TngEck1Jf
      cVzqfN4solQQG/8vhpQHG6kgwO0ufFtg49oUw3XJqQYeT+HbARttcbudRbEYTNOsIkoFofyY
      CkICQNFaTWuFbgIAmmbgcICqFv5NZBg/9gAche+EmqaFYRi49OL4OxmGURTXJZ/XcRdJ7zWf
      N3DpelGswNX1H3sAqlnopmAYJpZl4XyPl64EgEO0OZpmmua2wvKWBf/99cpeuwohxLGTALCD
      1dVVnj59as8COnfu3L72GxkZoa6ujtnZWaqqqgiHw0fcUiGEeH8SAHaQTCapr6+no6ODL7/8
      knPnztk1fxsaGhgcHMTn83HlyhWGhoZYXV2lvLyciooKnE4nyWRy1/xBQghRLIpjcK8IvXz5
      kn/6p38iGAwC8C//8i/4/X77xm9ZFuPj45w7d45wOEw6nWZycpJ0Ol3glgshxP5IANhFR0cH
      f/rTn1hfX0fXdTo7O+no6GBpaYmHDx+ytLSEpmlks1lmZ2fp7u4udJOFEOJAZAhoF0tLS7hc
      LjweD6qq2jV/4/E45eXlpNNpdF3nm2++scf9ZUmFEOJDIgvBdpDL5VheXgYgGAxSWlpKLBaj
      tLSUbDbL0tISbrebUChEIpHANE28Xi9utxuv12uXrtss0SYrgYUQxUgCwDHI5fL8ZaQ4soMW
      U1UlNl95xdKcYrs2RdCUYromRdcWlKL4G228j96vJJgEgGMgReF3JkXhdydF4d8mReF3JkXh
      hRBCHFjhP2KcAqZl8b//398UuhnAxrJxVVWLYjm9aW50Pn9OWor/+TfdNFTJgjsh3ocEgEOw
      W2po++emxX/7798dc6tOh8+utUsAEOI9SQDY4s9//rN9M+/p6aG6unpf++m6zvDwMBcuXDji
      FgohxOGRALCF3++np6eHhYUFFhcXWV5epq2tjaWlJXw+HyMjI6yvr3Px4kUSiQTT09M0NDRw
      6dIl0uk08/Pz/PDDD1iWxWeffWavIhZCiGIkD4G3SKVS3L17l5cvX1JfX08sFsMwDNLptD3/
      v729nYqKChYXF2loaKCxsRHYSCAXCARoa2tDURR7HYEQQhQrCQBbeL1empqa8Hg8eL1eFGWj
      0MJm3vpbt26xurpqF3+3LIvHjx/b+w8MDKBpGoFAANMsfJ5wIYTYiwSALYLBIGfOnKGzs5O+
      vj7Kysp48OABAwMDOJ1OBgcHicfjuN1uRkdHWVlZsefe+v1+/H4/CwsLrK+vv9ecXCGEOE7y
      DGCLmzdvAtDS0kJLSwuWZdHa2orL5UJRFGpqatA0zV4stLnAS1EUPvnkEwDOnz9v5w0SQohi
      JgFgD4qibFsZqqrqtlWRO62Q3OmTv6oq/K//5ddH08gDMgzjx3UAhQ9Qm8NkP2dVskwBFeL9
      SQA4Boqi8F//p1uFbgYgqSCEEP+p8HcBIYQQBSEfvY6BBfxtKlHoZgAbBeoVckeexbDc5+Ri
      pe9of4kQ4mc5VQFA13WmpqawLIv6+nq8Xq/9s2QySTKZpKam5p3HSSQSpNNpe6WwYRhEo9E9
      983qpyvpqmacrvMV4kN0qgLA8+fPURSFsrIydF0nFosRj8epqqoilUqxsLBAVVUV0WgUy7Ko
      qqoimUySTqdxOBwYhoHL5SKfzzM+Po6maVRUVOByuchms+RyOaLRKF6vl7KysqIYZxdCiN2c
      qgCwvLzM559/jtvtJplM8v3331NZWWkXdweYmJhgamoKRVFIpVKMjIxQXl7OyMgILS0txONx
      2traWF5exjAMRkdH+eyzzxgfH8fn87G0tMT8/Dw3b96ksrKywGcshBC7O3UfUTenPyaTSaqq
      qrh69Sq5XM6u57u8vMylS5fo6uoiGo2iKAo9PT3U1dVx5coVysrKyOfztLa28tFHH5FOp4GN
      AhGKorC2tkY6nSaRKI4xfyGE2M2pCgAej4f5+XlyuRymaZJOp9E0zZ6OCBtTEtPpNOl0es/p
      iaZpkslktm0zMDDAtWvXOHv27JGehxBCHIZTNQT08ccf09vby+joKFeuXCEYDHL//n2uXr1K
      KBRCURRKSkro7e0FoLu7m/n5eQCam5txOp3U1tbidrsZGhqir6+Pnp4eANra2ggGgzx//hyv
      10tzc3PBzlMIIfbj1NUE3jxdRVG2/Xu3bfY6xn73zeXz3JvJ/syWf1iq/E6u1vj33KaYFoJJ
      TeCdSU3gnZ2UmsCFf4Uds60vnt1eSO96ge31851+pgCfNRVHbQBN03A6nCg/owzjfhzx4YUQ
      h+DUBYBC8TqL43GLaio4nYpMURVCSAA4LmtZ/d0bHQNdN3HoBop6NPUKwh5HUXTRhRDvJgHg
      GFjAk7l0oZtxLH7TGjrqLBNCiEMiAeAdLMvi6dOnrK2tUVJSwtWrV7elkBBCiA+VBIB9WF1d
      5be//S3Dw8OMj48TDAbp7+/n8uXLBINBYrEYCwsLVFdXU1NTQzwex+PxSFF4IURRkyeB+2AY
      BtPT07x58wbDMPjhhx/o6enh8ePHrK6u8m//9m+0tLQwNTVFPp9nfn6e9fX1QjdbCCH2JAFg
      HwzDYHV1le7ubmpra1lfX+fFixd4PB5UVeWTTz6hoqKi0M0UQogDkQCwD263mytXrlBfX09J
      SQmlpaUEg0GqqqpQFMVeDKIoCgMDA4yNjRW4xUII8W6nbiXwQVmWRSqVIhAIbEskF4/H8fv9
      BAIBTNPE4/GQyWRYWVnB6/VSWlpqr8w7TSuBf9MaQt3nNFBZCbw7WQn8NlkJvDNZCXyEFEV5
      62FuMBjc8QGvz+ejoaFhx+OEvYV/oQBYpoWiAEXwJhJCFJYEgGOgADfrAoVuBlBcReGFEIUl
      dwEhhDilpAdwTAaWM4VuArAx1q0oxpGMAFX6XVT45SUlxIdC3q170HUdVVXfOVzyzvTRwHRc
      O+zm/QzGkRzV7VAlAAjxAZF36y6ePXtGNBrF4/Fw5coVIpHIrtuurq6SyWR2fQAshBDFSALA
      LtbX12lpaeHs2bMoisKXX36JYRiUlJTQ09NDb28v6+vrdjqIfD7Pd999x+rqKgCffvopJSUl
      BT4LIYTYnTwE3sWNGzeIRqN8+eWXpNNp3G43f/zjH+35/nV1dVRXV9vpHzKZDLquc/v2bVpa
      WojFYoU+BSGE2JMEgF04HA5u377NuXPnGBsb2zZ1cm5ujuXlZSKRyLbnAw6HA5fLhcPhQNbX
      CSGKnQSAXbx584a//vWvDA8P09zczOLiInfv3kVVVWpra0kmk0xNTeHz+XC5XHi9XgKBAKqq
      4vF4imZFqRBC7EaeAezi6tWrGIZhzwKqr6/no48+spei//rXv0ZR/rO0YnV1tb1va2troZot
      hBD7JgFgF4qibMvF0t3dvS0PyUFygChAZ0VxFJExdAPVoR5JPpUST3GkuxBC7I8EgH0KBH5e
      KofGkuIYEpJUEEKITXIXEEKIU0p6AMfAAv6/iUShmwGAhfVj0fbDHwJqDbtpCRdH6mAhxLud
      mgAwODhIY2PjzxrKyWQyeDwedF1ndXWVmpqafe+rmcU2LfTw22MU2ykKIfZ0KgKArus8ffqU
      dDrN9evXSSaT6LqOZVm4XC4WFxcJhUJUVFSwsLCAYRjU1dURj8dJpVKoqkp5eTn379+nsbGR
      uro6u4DIysoKyWSSuro6FEVhfn4en89HVVWVjLMLIYraqbhDjY2NcfPmTVZWVtA0jSdPnvDt
      t98Si8W4f/8++Xye3t5exsfHGRgYYGhoiImJCR48eEA0GuXx48domkYikSCdTpPNZpmdnSUe
      j3Pv3j0ymQxPnjwhHo+TTCbtPEJCCFHMTnwAsCyLoaEh1tbWWFlZIRaLYVkWN2/epKysjEAg
      QGdnJ16vl9nZWXK5HLqus7y8jNvt5tq1a5SVleF0OqmpqaG9vR2v12uXM2xra+PixYv2fouL
      i6RSKVKpVIHPXAgh9nbih4AMw8CyLBobG3E4HCwsLNirdhVFIRqNsrS0RCwWo7GxEZ/PR0tL
      C06nkydPnmw7lqIopNPpXWukDg8P09XVxfT09HGcmhBC/CwnvgdgGAZXrlyhrq7OztzZ3NyM
      2+3G7/dz+/ZtpqamUFWVCxcuYJomg4ODaJrGuXPngI2VvU6nk3PnzjE8PIyu6zQ1NeH3++0U
      0O3t7XR2djI8PIxlWZSVlRXytIUQ4p0U6xRnLcvn89y/fx/LsmhtbaWtre1Ifk8un+feTPZI
      jl1MzkQ8nInsfxro5jDa1hXXhbL5UL9Ycjjpul4U1yWXy+3a4z1uuVxu22r8QtI0DVVVD5QR
      4KgYhoFpmrhcrgPve6oDgGVZ9n+qejTpEWAj0CiOg/9xjoKmaTidDhTl8Dt/qgIOdf/XUALA
      7iQAvE0CwM5+TgAo/CusgBRFObYXk8tR+BctgGWAU1VQD3CjFkKcTKc6ABynoZXiGAIyTANV
      MQ4l8DWWuPG5TvxjJCFOLAkA7+ldheC3bQtMxPJH3KKDOJyi8FUBpwQAIT5g8u790T/+4z+y
      sLAAwA8//MA///M/77n9ysoKc3Nzx9E0IYQ4EtID+FFjYyMjIyNUVVWxsLBAJBIhm81y584d
      MpkMt2/fZnR0lI6ODmZmZmhsbCSXyzE2NsbAwAD19fVUVVXR19eHw+Hg1q1blJaWFvq0hBBi
      V9ID+FEwGETXdWZnZyktLcXtdjM7O4uiKHR2dvL8+XNCoRDffPMNDQ0N5HI5YrEYIyMj/Pa3
      v+XChQuMjo5y69Ytzp07J4vBhBBFTwLAFpFIhKGhITvLp2EYGIaBw+Ggo6MDRVHsJHKAPX3U
      6XTaU/Y2/32KZ9cKIT4QEgB+FAgEaGpqIpVKUVFRgd/vp66uDl3XmZmZIZPJsLa2xm9/+1tG
      RkZwOBwEg0Fqa2v55ptvePnyJfX19Xz//ff09/dTW1tb6FMSQog9neqFYPthWZbdC9hpxs9P
      f65p2lv1hE/qSuCbdX7C3vd/jCQLwXYnC8HeJgvBdiYLwY7QT2/m7/r5Tn8EBThXVhxvIsMw
      Dm3Vs9cpHUghPmQSAI5JsZRKlKLwQohNchcQQohTSnoAx8AC7k0WR1H4jdYcbPino9xLTbA4
      ktkJIQ7PiQkAc3NzJBIJwuEwVVVVe45xZ7NZ3G43hmEwNzdHc3PzW9tMTk4SDocpLS1F0zSe
      PXtGS0sL1dXVAHZd4XA4vK/25YqqYvrB2mLKPAEhTqQTMQS0WdPX5/ORyWQwDIOlpSVmZ2cx
      DINkMollWWQyGVKpFA8fPmRiYoJkMsno6CjT09MkEgl77n4mk+Hp06e8efMGy7Lo7+9neXkZ
      h8NBKpViZWXFLgFpmibz8/NEo1Gy2SwzMzNEo1FM0yzwVRFCiL2diB6AqqrkcjnS6TQtLS1E
      o1Fev36N3+9nbW2N9fV1PvroI0ZHRwkGg6yurlJaWkowGGRxcZGysjIGBwf54osvcDgcRKNR
      2traWFlZwTAM1tfXcblcxONx7ty5Q21tLQ0NDWSzWZaXl1laWiISiaDrOtFolLm5OW7cuEFV
      VVWhL40QQuzqRPQAnE4nf/zjH4nH49y9e5f5+XnOnz/PtWvXWF5eRtM0YGMKpM/no7a2lo6O
      DoLBII2NjVy9ehWXy4VhbGTJnJycZH19nbW1NZaXl2loaODMmTOUlZVRUlLC7du3cbvd6LrO
      xMQEn3zyCV1dXaiqyurqKul0mmQyWchLIoQQ73QiAkAulyObzXLt2jW7wlcikSCTydjPAjRN
      I51OY1kWDoeDbDa7Y7oGTdOIx+O0t7dz6dIlxsfHt/28vLx82+IPr9fL2toauVyOwcFBrl69
      ytmzZ4/2hIUQ4hCcmCGggYEB0uk0586do6GhgWfPnrG4uEhPTw+ZTIaHDx/icDgIBAKcOXOG
      /v5+zp8/T1NTEwAtLS12YLhy5QoNDQ1omsb09LT9oNfr9VJXVwdAKBTC6XRy9uxZHj9+jM/n
      o729nZcvX+LxeGhpaSnU5RBCiH05Makgtp6GoihvFWx519eH8bt3+r3w4aeCuFTppS50+CkS
      JBXE7iQVxNskFcTOJBUEb9/ID/r1Yf3unY6rAJ81BQ/t9/0cuqbhcDoPdP4uqR8sxIl0YgJA
      sSuWvDl5U8HpUCQVhBBCAsBxWcvohW4CALpu4tANFGXvdQolHgcO+eQvxIkmAeAYWMCT+XSh
      m3Egt+oDhDyFH98UQhwdCQA/0jSNv/zlL3i9XhoaGjh//nyhmySEEEdKAsCPDMPA7/fzxRdf
      ABu5hXK5HPl8HrfbzZs3b2hvb6eyspLx8XGi0SiXL18mHA7z+PFj/H4/XV1dPH36FNM06enp
      KZrZE0IIsRMJAFvMz8/T29tLTU0N/f395HI5vvjiC7LZLJ9++il37tyhvb2dWCxGV1cXIyMj
      mKZJc3MzJSUlvH79mlAohK7rjIyMcPHixUKfkhBC7EoCwBabNX6DwSDBYJAbN27g8Xj47rvv
      UBTFXj1cXV2Nz+dDURSSySQNDQ0oikI8HicWi+HxeOwFZkIIUawkAGwRCoXslb6KsjFV0rIs
      stksTU1NrK2tvbVPfX09Dx48oKysjLq6OpLJpJ0zSAghitmJWQn8c5mmSSaTIRAIABspod1u
      N6qqkkwmSaVS+Hw+vF4viqLgcDjs5wMrKys4HA7C4TBra2sYhkE4HLafAXyIK4GPYxaQrATe
      nawEfpusBN6ZrAQ+BKqq2jd/AJ/PZ/87FAoRCoXe2mdzm61pnysqKnY8fsRb+BcK/Ji2QlHe
      WRNM1gAIcfJJADgGCnCjLvDO7Y6DFIUXQmySu4AQQpxS0gM4JgPLmUI3AQDDMFFVg6DbQVNp
      cYx3CyEK44MOAKZpoijKOx8KbU7f3Dquv+mgaaETiQR+v/9AD38sYDqu7Xv7o2dQ7jMlAAhx
      yhXtEJCu63zzzTf211999dVb24yNjZFOp3n16pVd9nEn8/PzzMzMALC8vExvby+pVIovv/yS
      +fl55ufn992uV69ekUqlDnAmQghRnIq6B2Ca/5mx0rIshoaGePPmDaZpcv36ddLpNJqm8e23
      3zI9Pc3ly5d59eoVyWSSK1euEA6HefjwIclkku7ubvs42WyWR48ece3aNRRFIZfL0dfXx8LC
      Arlcjk8++YSFhQXGx8dJp9P8wz/8Ay9evGB+fp54PE5bWxvff/89uVyOjo4Ou22ZTIZgMIiu
      69y+fXvXGUFCCFEMijoAbNocpsnlcnR1deFyuVhdXSWVSqGqKh0dHdy6dYvFxUUMw+DMmTMM
      DQ3h9/v55S9/yfLysl3wHWB0dBS/3091dTWzs7Nks1nS6TQ3b94kGo2ysrLC/Pw8f/jDH7h3
      7x6w0Yv4/e9/z+PHj5mfn6e+vp7W1lYePnxIeXk53d3dzM/PU11dTSqVIh6PSwAQQhS1oh0C
      UlWVTCZDLpdjdXXVXqCzuThrK4fDYReDh42UDufPnyeXy+04Vt/Z2WnX792kKAoej8c+djab
      RdM0crkcsDF9cnNl8Gb7VFW1nx24XC5UVcXtdhfF4hAhhHiXog0AiqLQ2dnJn//8Z+7evcvF
      ixfx+Xy4XC5cLhc+n49AIIDD4aClpYX79+/jcrlwOByMjY2RyWTo6Ojg66+/5tWrV3YAcTqd
      BAIBLly4QCKRQNM0vF4vgUAAVVXxer2EQiHa29u5f/8+i4uLAITDYf7617+yvr5OXV0ds7Oz
      3L9/n/r6enw+H06nE7/fj9PpxOPxFM3qSSGE2E1Rp4KwLAtd1+3UC3vN1NF13f7kbRiG/e/N
      7x9k4ZNlWfT19aFpGmtra/z+978HNpZ/u1wuFEU5UOqAYkwFUe5z0F1b2MVpkgpid5IK4m2S
      CmJnJzYVhKIo+z6prW+Wrf9+n4uiKAqXLl0imUwSDoftF9zWm8PmcM++jgd0VngP3I6jYBgG
      qqricxVt508IcUyKOgAUktvtpqys7NCO11hSHJ8sJRWEEGKT3AWEEOKUkh7AMbCAOxPxQjeD
      L1qkRoEQ4j9JADiAaDRKWVnZez340c13byOEEMdJAsAB9Pf3093djWVZ9qrflZUVNE2jubmZ
      VCrF+vo6DoeDmpqaopghIIQQu5EAcACWZZFOp7l79y61tbVcunSJtbU1YrEYyWSS5eVlAoEA
      qVQKl8u1rVCMEEIUGwkA76GkpIRbt26Rz+dZXl7GsiwWFxcJBAJcvHiRmZkZstnimvcvhBA/
      JbOA3kM4HMbpdBKNRiktLeXKlSuFbpIQQhyY9AAO4MyZMwSDQZqamgDsZHKTk5O0t7fjcrlw
      u91UVVUVxSpOIYTYi9ylDqCxsREAv98PgNfr5fbt229td5gLyIQQ4qhIADgGCvBFS6jQzRBC
      iG0kABwTp1r4BFZCCLGVBIBjspzWC/r7/S4VvySAE0JsIQFgHzaLzaiqui097tZM2vl8fte0
      uRbwbCF9HE3dVXuZh9ZwcaT1FUIUB/lI+A6ZTIa7d+9y9+5dFhcXefbsmf2zbDbL8PAwwLbv
      CyHEh0B6AHuwLIsnT55w/vx5ampq0HWde/fukc1mqayspL29HZ/PB2BXF3v06BGmaXLjxg37
      Z0IIUYykB7AH0zRJpVLU1tbaxWkcDgc3btxgdnaWTCbDzMyMvf3r168Jh8OUlJQwOjpawJYL
      IcS7SQ9gD5tFU/L5vF39KxQKEQwGcblc/LSaZjweJx6P4/F4aG5uPvb2CiHEQUgPYA+KotDV
      1cVXX33F48ePWVhY2LMeaVNTE5ZlEQqFCAQKW29XCCHepaiLwhcDy7JIJpPkcopSDAAAACAA
      SURBVDlKS0sxDAOv10s2m8XtdqNpGm632y5YnUgkMAyDUChk1yMuhqLwm7OAiqkkpBSF350U
      hX+bFIXf2YktCl8MFEUhFAoRCm2s5N28yF7vRpH3zTfH5telpaU7HqfCV9hL7XcW/oYvhCgu
      EgCOgQJcr/UXuhlCCLGNfCwUQohTSnoAx8ACXi5ljuV3lfkc1IeKYxxbCFHcJAAcgGmaKIry
      Xg+h5pPaEbTobaoC9ZJ4VAixDzIEdADffvutlHoUQpwY0gM4AMuySKVSPHjwAE3TuHr1Ki9e
      vCAWi/Hxxx+jaRr9/f3ous6tW7eoqakpdJOFEGJXEgAOyDRN1tbW+MMf/oDX66W+vp7S0lKG
      hoZQVZUvvviCiYkJNO14hnyEEOJ9yRDQe2hoaCAUCrGwsEA8HrdXAOdyOYC3UkQIIUQxkgBw
      AKWlpbhcLkpKSoCNvECxWIzh4WHC4TAtLS3cvXuXgYGBArdUCCHeTYaADuDatWsARCIRAMLh
      ML/73e9QVdWeGXT27FnGx8eLYom4EELsRQLAz/TTG73L5aKlpWXbVFEFuFTpPZb2SNlHIcR+
      SQA4AjslFKuTxVlCiCIjHxeFEOKUkh7AMbCAv47Fj/z3NIfdnCs7nqEmIcSH70T1AAzD4OXL
      l/T19TEyMnLg6ZhTU1MkEoldfz4wMIBpmrv+fHR01J4K+lPWMfyHzD4VQhzAieoBGIbB1NQU
      H330EQMDAwSDQZxOJ0tLS9TW1uL1ellbWyORSNDY2IjH42FqagpN02hsbCQajeLz+Uin06yu
      rlJbW0tpaSlra2ssLi4yOjpqz/JxOp00Njayvr7O4uIiTU1NzM/Pk81mCQaDNDQ0yEwgIURR
      O1E9AIBsNsvQ0BDz8/MEg0ESiQQOh4MHDx4wMzPDy5cvSaVSDA4OMjAwwOLiItFolIWFBfsY
      yWQSwzB4+PAhuVyOBw8e4PV6sSyLoaEh5ubmGB0dZXR0lEePHuFyuUgkEqTTaTKZDBMTE6ys
      rBTwKgghxLuduACgqiqRSITS0lJisRjr6+vMzMyQTCbRNI0zZ87Q1taGruvMzMzQ3d1NVVWV
      PVxkWZb9iX9lZYX19XVqa2tpbW3F6/UyNzdHKpUim82STqcJhUJ2jyAYDHL+/Hmqqqp2HQoS
      QohicaKGgGCjNGNtbS3JZJJ4PM7i4iK3bt3i22+/fWvb0tJSXr16RSwWo7GxEdjoQayurtLT
      00M8Hsfj8bC4uMj6+jqaplFeXo7T6aSmpgafz4dhGORyOXp7e+2ykUII8SE4UQHA4XBQXV3N
      0NAQwWCQ9vZ2XC4Xb9684ezZs1RVVeFwOPB6vTQ3N1NSUsKbN2+Ix+P4fD5KSkoIBoOk02nG
      xsY4d+4cpaWlNDQ0MDAwQHt7Ow0NDbx69Yq5uTnOnj3LwsICiUSC7u5udF3H4/FQU1PzXgWa
      hRDiOCnWKc5cNj4+zsjICIFAgI8//hhVPZoRsVw+z72Zo68j0FLq5lz53tNA8/k8TqfzyM71
      IHRdB8DpLPznENM00XV9x0V8haDrelFcl1wuh8fjKXQzgI22uN3u9yrIdNg0TUNV1aKY6GEY
      BqZpvteHzlMdALae+lG+qPL5/LH1CN51HhIAdiYBYGcSAHZ2UgJA4V9hBXScL6RieNEKIcRW
      pzoAHKfFI6oJrKpQ6ZfnDUKIgzsxAcAwjG1pmd8ln8/jcDje2mdzpe9eQyQ/7XJtDiXt9rst
      4PlSZl/tOiivU6GySQKAEOLgCj8Q/DNZlsWjR4+4d+8ez54923cpxvHxcaLRKP39/du+/+LF
      Cx49erTnvqurq4yPj9tf67ouRWCEEB+cD74HYFkWc3Nz/PGPfwQ2Hs48efKEVCpFd3c3yWSS
      qqoq0um0/en+xYsXRKNRPvnkE7ze/5w1Y5omy8vL6LpOLpdjcXGRTCaDpmkEAgHevHlDXV0d
      FRUV9Pf3Mzo6SldXF/X19TidTpaXl+nr6yMQCNDd3V00D8+EEGInH3wPQFEUWlpa+Pd//3cm
      JydxOBx0dHTQ0NDA4OAg8/Pz5HI51tfXWVtbo6+vj6tXr3L27FlM02Rqaso+VjQaJRQKUVVV
      xcLCAhMTE4yMjHDmzBnC4TA3b95kenqaZDJJTU0NN27coK+vD4CJiQm8Xi/d3d3k8/ltqSWE
      EKIYffA9AEVRuHbtGl1dXXz99dcYhsHk5CRerxeXy/XWNK18Pk84HN5xit3ExASzs7NYlkUm
      k8Hr9dLV1YXP5+Phw4e43W40TcMwDAKBAKWlpfh8Pnv/4eFh1tbWyGQyGIZx5OcuhBA/xwcf
      AEzT5C9/+QuhUGjbg11N03A4HEQiER49ekQikeDChQt4vV7u3LnD+vo6H3300bZjxeNx/u7v
      /g6n08nXX39NOBy2H+xqmobf7yefz6MoCpOTkywvL9sF4uE/59hLHiAhxIfgg18IZlkWuVyO
      XC6Hz+fD6XSSTqdRVdXuAcTjcdxuNx6PB8uySCQSeDwevF4vhmHYs3k0TcPpdKIoCpqmoSgK
      qqqiqir5fJ5sNovH47Fv8qZp4vP5UFUVXddRFIV0Oo3b7d7W+zjKlcBep8JnTfvPQSQLwXYm
      C8F2JgvBdiYLwYqEoih4vd5tD3ODweC2bcLh8LavI5GI/e+tN8KtF/CnF9Ptdm+7Ofj9/m0/
      39x+a49gq+rA0Vxqt6PwbwYhxIfpgw8AHwIFuFLtf+d2QghxnAo/DiCEEKIgpAdwDCzgh8X0
      kRzbrSpcqPS9e0MhhPgJCQD7sPlw2LIsFEV56yGUZVksLy9TWVm56zGWUvqRtM3rlGcAQoj3
      I0NA+3D//n1yuRxDQ0PE43Esy8KyLEzTtPMA9fX12d/f/E8IIYqZ9AD2yTAMHj9+TElJCT09
      PSwuLjI7O4vH4+F3v/sdAI8fP+bMmTNomsby8jJdXV0FbrUQQuxOAsA+ORwOOjs7aW1tpby8
      HNM00TSNoaEhe5uWlhbevHlDIBCgoqKigK0VQoh3kyGgA1BVFdM0yeVyDA4Ocu7cuW3z/jeT
      zs3MzFBdXV3AlgohxLtJANiHsrIyVFWlqanJziQaDAZ5/vy5vTisvLwcRVEoLy+nsrJSisIL
      IYqeDAHtw5UrVwCorKzkiy++QFEUGhoaME3TXgre3d1NIpEgHo9z9erVQjZXCCH2RQLAAW1N
      HfHTPCBut5uPPvpoW1oK2FwJfDRz9R1FkBdFCPFhkgBwiPZKmlUdkCEhIURxkQBwTMwjWheg
      sHstYiGE2IsEgGNgAV+PJ47k2F1VPmqD0rsQQhycBIAfPX/+nGQyiaqq1NXV0dzcvON2y8vL
      5PN56urqjrmFQghxuGQa6I/OnDmDaZrU1NRQXV3NysoKACsrK3aun7GxMdbX10kkEmSzWVZX
      V1lfX6evr49YLMbKygqappHP51lfXy/wGQkhxN4kAPwoGAzi8/kIBoN4vV5++OEHYKNnYFkW
      //qv/8ry8jKKoqDrOk+fPiWRSPDdd98RDAZ58OCBXVN4ZmaG+fn5Ap+REELsTQLALjaLum/+
      v7q6mp6eHlwuF48fP8ayLCKRCNFolMXFRbLZLGfOnGF0dJSFhQWqqqoK2XwhhHgneQawC8uy
      WFpasodygsGgvQbgypUrrK+vs7KyQjgcprGxkfr6ekKhEE6nk5WVlW1lJ4UQohhJANiitbWV
      QCAAwKVLl5iamqKjowNFUbh06RKwkRaitLQUl8vF+vo6N27cYHp6mvLycmAjUNTU1BRF0XUh
      hNiLBIAtNm/iAPX19dTX19tfb8762VpwfrMwfG1tLQCrq6tYlkVLS8tbx1aPaKq+rAAQQrwv
      CQCHqKysjLKysre+rwC/aS15ewchhCggGacQQohTSnoAx2QukT+S40a8TnwuieNCiIM7FQHA
      MAx0XbeTtW3W69X1jULtTufGZdgrp87mPu+Td8cCXkWzB95vP7qqfBIAhBDv5UQGgGQyyd27
      d3G73ZSXl9Pa2sr8/DwXL14EYGlpCcuyyOVyKIpCPB7nwoULe97cDcPgzZs39jGEEOJDdyID
      gGEYRCIRbt26xddff01VVRX9/f1MTU1x8eJFAoEAuq6jaRqKotg9gKdPnxKNRikvL+fChQt2
      iofOzk7a2tpQVZW5uTlGRkbIZrNcv36dfD7Ps2fPqK+vp7Ozk6dPn6LrOj09PdtmDAkhRLE5
      sWMHa2trvHjxgtXVVbsncPv2bSYmJkgkEqytrdnbzszMYJomKysr/OIXvyCXy7GwsIBpmvzq
      V7+yC79PTU2xurpKWVkZnZ2dTE1N8eTJE27evMno6Cizs7MYhkFXV5ddKlIIIYrViQ0AiqJQ
      UlLCn/70JxwOB5FIBK/Xa4/l78Tr9eL1eolEIqTTaQKBAH6/H4fDse0ZQCQSweVyYRgG6XSa
      0dFRIpEIdXV1hMNhvvvuO1ZXV4/rVIUQ4r2cyCEggHA4TFtbGwCpVGpf+6ysrPDgwQMymQzX
      rl3j/v37xONxfD7fjs8H3G43DQ0NxGIxnE4nsViMeDwOQC6XO7yTEUKII6BYe30k/kBZloVl
      WXY6hs2vFUWx///T7RVF4e7du1y/fp1gMEg8HufNmzdcuXLFrvG7074A2WwWl8uFw+Egm92Y
      7eP1eu1tc/k892aObhbQQQrC5PN5nE5nUaSq+OksrEIyTRNd14tm6E7X9aK4Lrlcbs9Sp8cp
      l8vhdruLogKepmmoqvpWXfBCMAwD0zRxuQ5eGKrwr7AjoCjKthfJ1q93evFsfu/y5cuEQiFU
      VSUYDHL+/Hl8Pt9b2/3U1m22/nuruiOq2uVzFv7NIIT4MJ3IAPC+tuYCcrlchMPhQzmuAlyq
      2jkwCCFEoRR+HEAIIURBSA/gGFhA7/z+HkQfhN+l0lkhPQshxPs5dQHAMAySySSWZeHz+d56
      wLW2tobf78fj8WCaJtls1k77vOl9HtCtZIyf3fafyhsn7vm9EOIYnbohoNXVVe7cucPg4CAP
      HjzAsizy+Ty5XA7TNBkfHyeRSGAYBvl83k4bkc/nyefzGIbB48ePyefzmKZp72tZlr1PPp/f
      c72BEEIUg1PXAwBoaGigp6eHr776ilQqxffff088HqejowPYmOL17bffcv78eZaXl+2i76FQ
      iJaWFn744QcURaGjo4Pe3l5isRjXr19ncnKSVCqFaZp8+umnUhZSCFHUTmUAGB4eZmFhgUgk
      gt/vp6KiArfbzcTEBGVlZdy7d4+enh4CgQD5fB5N0zBNk9bWVpqbmzlz5gwff/wxuq5TVlaG
      x+NhdHSUQCBgl4hMJBISAIQQRe3UDQHBRu3f3//+99y+fZvV1VXi8TiXL1/G4XDgcrmorKxk
      eXnZHsaJRCL85je/YXBw0E7xYJomc3NzWJZFV1fXtuMXw0IVIYR4l1PXA/B4PFRWVtorPkOh
      EJlMhhcvXlBRUUFZWRlnz55lZmaGWCxGeXk5iUSC58+f43A48Pv91NXV8f3339Pe3s7q6iqZ
      TIaqqiq8Xi9Op5NQKFQ0qyeFEGI3JzIVxEGZpvnW6uGfMgwDRVFQVRXLsjBNE4fDsa99jyoV
      RMitcqvhYCmnJRXEziQVxM4kFcTOJBXECbKfm+HWP7SiKPbX+9lXAbpr/O/c7qAchb+HCyE+
      YBIAjkm5Xy61EKK4yF3pmOR089CP6XIoqEXQHRZCfJgkAPDzCr7vZ3/Lgn/uW3q/xu3hN+ci
      NJQWx/isEOLDc2pGkcfHx3ddnatpGq9fv37vYxuGwfDw8HvvL4QQhXBqegBDQ0PU19czNzfH
      6uoqDQ0NVFRUMDk5ycLCArlcjnQ6zeDgIJFIhKamJubn51leXqasrIzGxkZGR0dJpVKcP3+e
      bDbL6OgoNTU11NbWEggESCQSDA8PEwqFaGtrK4oZAkIIsZtT0wMASKfTPH/+nLKyMl69esXc
      3ByTk5PU19ejKAq9vb2Ew2FmZmaYnp6mt7fX3nZxcZGJiQk0TWNgYIDHjx9TVlZm9yoGBgbQ
      NI2qqiomJydZXFws8NkKIcTeTlUAAKipqaGhoQGAhYUFzp8/T1VVFbAxR76hoYG6ujri8TiR
      SITGxkbcbjcLCwskEglisRjpdJrGxkb6+/uJxWLAxjzy9fV1+3ubpSGFEKJYnboAsFUoFGJ4
      eJjZ2VlgowrYzMwMCwsLBIPbF1iVl5fj9/vtfEChUIjOzk5GR0ftbebn52lra6OiouJYz0MI
      Id7HqXkGcPXqVfx+P+3t7aiqyqVLl4hEIuRyObLZLBcuXMDr9TIxMUFtbS2NjY2UlJQAG7WC
      KysryWQypFIpSktLyWQyxONxrl+/DsCVK1fweDzMzMxQV1dHdXV1IU9XCCHeSVJBHINcLs//
      07926Mf91ZkwtSUHmwYqqSB2JqkgdiapIHYmqSDEvikK/C/XpEcghCguhf8YKIQQoiCkB3AM
      LKB3cv1QjxnyOjlXfbBMoEIIsdWpDACmuZGX57jGwS0L/qP/cFNBNJX5JAAIIX6WUxcAXr9+
      zezsLIqicPnyZZmtI4Q4tU5VAEgkEiwsLPD555/bhVxmZmbo6+ujurqaCxcuMDIyQiqVoqmp
      yV7dW1JSQiwW4+OPP2ZlZYXR0VGqqqq4ePEivb29JJNJ6urqcLlcNDQ0YBgGq6urtLW1FfqU
      hRBiV6fqIXAymSQSiZBIJPjrX//K2NgYT58+pbu7m+npaWKxGC9evLDz+IRCIXp6esjn81y/
      fp2ZmRnKy8u5fPkyk5OTpNNp0uk0X3zxBYuLi6iqytjYmL2wTAghitmpCgB+v5/19XXC4TA3
      btwgHo+TzWaZnZ2lqqoKp9NJR0cHtbW1qKpKIBDA4/EQDAZxuVyYpklvby9LS0uoqophGIRC
      IVwuFw6Hg5aWFhYWFpibm6OmpqbQpyuEEHs6VUNApaWleDwevvrqK0zT5MyZMzQ3N7O0tGQv
      MNn6YHiz1q+qqvb/DcMgFouRyWS21QLeXBQSiUSIxWL4/YdfAlIIIQ7TqVwJvHUFqmVZ6LqO
      w+HY16wg0zQxDGPHVXfZbJaHDx9y8eLFbQ+Xs7k8/8ediUNrP2zMAvovHzUeeD9ZCbwzWQm8
      M1kJvDNZCfwB2/rGUhTlQBdOVdVdb56GYXD16lUikci27ytAd3P4vdq6m4j/4H9sIYTY6lQG
      gKMSCAQIBAJvfV9R4HcXqgrQIiGE2F3hxwGEEEIUhPQAjoEFPJ5LHdrxuqp8+JwSu4UQP48E
      gF0kk0kCgcB7PXBaWVkhEAjg9Xrt761njUNrm2meuuf2QogjIB8jd/H9999jGAb5fJ5EIoGu
      62iaRj6fJ5fLkcvlSCQS5PN5LMsinU6TTCaxLIvJyUkSiUShT0EIIfYkPYBdWJaFpmncv38f
      t9tNc3Mzi4uLzM7OcvHiRbLZLNFoFE3T+OSTT/jzn/+Mw+Hg1q1bhW66EELsi/QA9rAZBJxO
      J7W1tcRiMW7evElHRwclJSU4HA4WFxcZGBigtLSUcDjM0NBQoZsthBD7Ij2APTidTn71q18R
      j8e5c+cO4XCY0tJSstksw8PD/PKXvySRSODz+bAsi/b2dgAmJiYK23AhhNgH6QHsoq6uDsuy
      eP78OS9fvuT8+fNUVlbicrlwu92UlZXx8OFDgsEg58+fZ21tjd7eXjKZDOXl5dseAAshRDE6
      lakgDsKyLEzTtPMBbf2+ZVn2quDNr7fmB9qUy+e5N5M9tDb9oiFAwP1+S9AlFcTOJBXEziQV
      xM4kFcQpoSjKjn/kn97od7rx2z8DbtYdXnI4r6wBEEIcAgkAxyTslUsthCguclc6JrOJ/Hvv
      qwB1oeIYmhBCnBwSAH4ik8ng8/n23Gbzscl+xyIt4HX0/Z8BOBQJAEKIw3eqB5Oj0Sijo6MA
      PH/+nHQ6zdOnT9+5n2mavHr16qibJ4QQR+pU9wDy+Typ1EaStng8jmEYZDIZ0uk0Y2Nj1NTU
      MDc3RyqVoqqqiqGhIaqqqrh69SoOh4NUKsWTJ0/IZrOcP3+e6upqvvvuO0zT5OOPPyYYDBb4
      DIUQYnenugewE03T6O3tpaSkhLW1NV69esWlS5eIRCJcv36dubk5kskk09PT5HI5dF3niy++
      YGhoiP7+fsrKygiHw3bPQgghitWpDgCqqpJKpbAsy67xu7Kywvz8PBUVFTidTnp6egiFQjx7
      9oyJiQl7XcCmcDiMy+VCURTS6TRLS0vkcjlKSkoKeGZCCPFup3oIqLS0lPHxcZLJJMlkEo/H
      Q21tLRcvXuTBgwe0trbaD3o1TSObzZLJZHY8lqIotLS08OjRI5xOZ1EsEBFCiL2c6pXAm5/m
      U6kUwWDwrZW+m18rioJpmuTz+XeuRNy6Km9zu5+7EtihwK9bD6dHISuBdyYrgXcmK4F3JiuB
      T4DNVb47Ddf89EWmquq+8vvs9qatD71/EfcieL0LIU6gUx0AjosCXKzce22BEEIct8KPAwgh
      hCgI6QEcAwvond9/UfhSj4OzZZJOWghxtE59ALAsC13XicVieDweAoHAgR+QWpbF4uIi1dXV
      uz6gWsnsvyi8KoP+QohjcOqHgCzL4m9/+xujo6NMTEyg6zq5XI5sNmvPDNksAr9ZIjKbzWIY
      hh08stksL168wDRNstmsXSheCCGK2anvAeRyOUzT5ObNmyiKQiKRoLe3l7W1NS5dusT4+DgA
      sViMv//7v6evr4/V1VXC4TDd3d188803+P1+stksc3NzDA4Okkgk+Pzzz4lEIgU+OyGE2N2p
      7wFomobX67WHbjweD6FQCJ/Px9LSEgC//e1vaWpqIpfLUV5eTklJCbOzs0SjUZqbm/n888/x
      er2UlJQQCAQAWFtbK9g5CSHEfpz6AODz+YhGoxiGgaZpjI6O4vV66ezstOf0b1b7SqVSTE9P
      c+3aNQKBAJZlkU6n7QVlz58/p62tjZaWlsKelBBC7MOpHwJyOp1cvXqVr7/+mmAwyNmzZ3n9
      +jXz8/M0NjbatQHKysooLS3F5XLZyeKqq6sZHBzkzp07lJeXU15ezqtXr1AUhfr6+gKfmRBC
      7O1Up4LYyjRN+5P+1n/vtB1gzxQyTRPLsuwl4YZhvFVA/qCpICr9Tq7VHF4N4a0kFcTOJBXE
      ziQVxM4kFcQJs/WGuNfN8ac/++nXOxaQB7pr939Dd6uFf4ELIU4+CQDHpNwnl1oIUVzkrnRM
      8ob5zm0cioJDPv0LIY7JqQsA+y3ofpDC71sfo+y0vQXcm0y+8zhNJW7OV0gKCCHE8Sj8k8BD
      oOs6jx49QtM0ksmkPX9/q3g8jmVZrKysMDMz885j5vN5BgYG9t2G169f2w81hRDiQ3AiegC6
      rvP48WMqKyvtBVwlJSW8fv2aiooKgsEgX331FZcuXSIUCjEzM8Pi4iJnz54lGAzy4sULSkpK
      aGtrIxqNkslk8Hq9rKyskM/n6e/vR1EULl68SCwWY2FhAcuy6OjosAPF2NgYZ86cYXx8nGw2
      S0dHR9HMnhBCiJ2ciB4AQGdnJ6Ojo+RyOQAeP36M3++nr68PVVUJBoNUV1fjcDhIp9NEIhH6
      +/t59uwZbreboaEh1tbW+B//438wNzdnTwc0TZOysjLW19cZHx/nzZs35PN5stksk5OTPHjw
      gNraWvx+PwsLC8zPz1NWVoZh7D/5mxBCFMKJCQBOp5P6+nomJyexLIvZ2Vl7KMgwDILBIBUV
      FTgcDpqamqiurgZgZmaGlZUVdF0nlUpRUVHBzZs37epfqVSKly9fEovFSCQSeDwempqaqKys
      JB6P43a7qaurIxQKEYlE0DSN4eFhGQ4SQhS9ExMAANrb25mbmyOfz1NdXU04HObChQt2fp6F
      hYW3PpnX1NQQCATo7OwkEong8Xi2LcBZWFigvr6e2tratx7wOp1OEokEMzMzrK2toes6HR0d
      qKpKNBo9+hMWQoif4UQ8A3C5XFy8eBGXy8Wvf/1rFEXB7/czNjZmr5C7fPkyKysr1NXVEYlE
      8Hq9dHR0EAqFePPmDbqu43K5uHr1KrCRFK6zs5NgMMjIyAh+v5+qqiosyyIQCODz+SgrK6Om
      poaZmRkuXLhgP3+orKyUVBBCiKInqSCOQS6f5+Fc7p3bNZS4aD/iSmCSCmJnkgpiZ5IKYmeS
      CkLsmwJ83hIqdDOEEGKbwn8MFEIIURDSAzgmU7H8O7cJuVUikjNICHFM5G7zo0wmg8fjQVVV
      TNMkl8vZtQB+LgsYXHl3OuimErcEACHEsTlxQ0AvXrwgHo8zPDzMmzdv9r3f69evyWQywMbD
      plevXu267fDw8M9upxBCFNqJ+7iZSqWYn59namqKzz77jP7+fsbHx6mvr6empob+/n5SqRQf
      f/wxo6OjrKys0NXVRT6fxzRN+vv7iUQiTE9Ps7q6Snl5ORcuXODBgwd4PB4aGxv5j//4D5aW
      lrh48SJ9fX0kk0lu377N3Nwci4uLqKrKxx9/jN9/NEVdhBDiMJy4HkAqleLbb7+lpaUFt9tN
      RUUFV65cYWxsjNLSUjo7OwkEAoRCIZqamujo6ODVq1dYlsWbN2+Ix+MEg0GCwSCffvopq6ur
      LC4u4vV6OX/+PA0NDbS2tnLz5k0CgQDt7e2cOXOGFy9esLKywuXLl6moqGB1dbXQl0IIIfZ0
      4gJAMBjks88+Y3R0lEwmw//f3p01xXGdDRz/z77DAJphX4VARmAhbFlStFTZbypJxblM+TPk
      Y+Q6VblKrlPJZe5crpSvlOBEsoUAgUAIEDvDMsDs+9rd74UyXcgCSREYsHl+N5LQDH2m53Sf
      PsvznMnJSaLRKEajkXK5zPPnzxkaGiKXyzE1NUU6nda3gVxcXKS2thaj0YjL5dLnBFpaWvB4
      PIyMjJDNZjGZTJjNZiKRCDMzM/qG8larFafTidVq1beOFEKIs+on1wAYjUZ8Ph+dnZ1MTk6i
      KAqxWIxiscizZ8/Y2dnh2bNnJJNJSqUS4XAYTdMwm838+te/JhAI6MM4JiaCZwAAF11JREFU
      BoMBk8lEKBQiHo9TKpVQVRWr1cqjR48oFArk83n29vYwGo36ew7bT1gIIc6Sn3wksKZplEol
      LBbLazflSl6gd4nmKxQKGI1GLBaL/jutViulUgmTyfTGyNp33RT+JDaEkUjgg0kk8MEkEvhg
      Egn8I2EwGA69qP+XL2//RbD/d77LSTfw8ub+NjWO069MQojz4yffAJwVstWjEOKsOf1xACGE
      EKdCegAnQANGtzJvfV2920x79dkYbxVC/PSd2wagWCzqy0OdTicul+t/mlxSVZVgMPjOef/j
      hbdvEVllkzkAIcTJObdDQMFgkPHxcXZ2dkgmkwCk02my2ay+3FNRFMrlMoVCgUQiQaFQQNM0
      isUiiURCDyDLZDKkUil9dVBlz2AhhDjLzm0PwGAw4Pf7aW9vx2azsbS0xOrqKrW1tVitVhob
      G/UYAkVRCIVC5PN5Pv30Ux48eIDZbCaRSBCNRnn48CEWi4W+vj4ikQjr6+tcvnyZvr6+0/6Y
      QghxqHPbAKiqyurqKsVikfb2djY2Nrh79y4Oh4OpqalXegAej4e9vT3i8TiBQACfz8fAwADf
      fPMNi4uL3LlzB6/Xy/3797HZbAwODtLV1XXaH1EIId7o3A4BmUwm+vv7uXPnDq2trRgMBkql
      kh4cVkkJXS6XmZ2d5d69e/h8PkwmE8lkEkVRUBQFh8NBOp0ml8thsVhwu914vd5T/nRCCPF2
      57YHYLfbefr0KVtbW3R0dHD16lXGxsbweDy0tLQwPT2NyWSit7cXTdP497//jcPhoKmpiZ2d
      HYaHh3E6nfT29vLtt9+ysLDA9evXicViZyZyUggh3uQnnwrif6Gqqp7HR1EUPbePpmlomqb/
      n6ZpqKqqRxJXEr8dlgNIUkEcTFJBHE5SQbxOUkEcTFJBHJP9N8X9X+z3b+yVJHEHve8gBuCT
      prfvDWAznf5NWQhxfkgDcEK8djnVQoizRe5KJyRXfvv+AHaTpJEWQpwcaQCOQWUa5bCbtwY8
      CKTf+nv+r8ODSe7/QogTcu4agEgkwtOnTzEajfT19VFfX3/k31kul1lcXJTALyHEj8q5awBi
      sRgtLS20tbVx//59fvOb37C6ukowGGRwcJByucz6+jrFYhG3200ymWRoaIhQKMTy8jJtbW34
      fD62trYIhUJcunSJuro6vF4vyWSS58+fU11dTW9v75lYISCEEIc5l8tOwuEwKysrWK1WUqkU
      CwsLXLp0iUePHrGxsUE+n8dgMOibwa+vr2Mymejp6eHZs2dsbW2xvLxMa2srs7OzADx//hxV
      Vbl48SK7u7sEg8FT/pRCCPFm564HABCPx1lZWeEXv/gFsViMtrY2/H6/vnF8Y2Mjqqricrlw
      uVykUinC4TCpVEpPFtfU1ERdXR2rq6vAy3mAUCjEysoKmUyGYrF4yp9SCCHe7Fz2AC5dusRn
      n33GxMQEDoeDQCDAysoKBoPhtWCKysRuNBqlq6sLh8Nx6O8NhUK0tbVJKgghxI/CuYsEzmaz
      ADgcDsLhMC6Xi2g0SiqVorW1FXgZmbo/2rdcLpPL5YjFYjidTmpqalBVFafTSTKZxOv1EolE
      sNlsBINBbDYbPp8Pp/Nl8Ne7RgL/X4cHk/GHXQYkkcAHk0jgg0kk8MEkEvhHqnJTBvD5fK/9
      7DBut1t//X41NTUAXLhwAQCPx3Pg++3m06+0Qgix37lrAE6DAbjXdnDDIIQQp+X0xwGEEEKc
      CukBnJDVeOGtr2mvtmI8A+ObQojzQRqAd5TP5zGbzfqkz/6JqEq66MMmVjVgMfr2BqCtyvpy
      vEgIIU6ANAD/NT09zcbGBmazmaamJgYGBl75/6WlJfx+P/l8Ho/Ho0/+gqSCEEL8OEkD8F+F
      QoFr166hKAqzs7NcvHiRkZER8vk8H330kb7UCiCZTLKzs0Nvby9TU1NcvXqVYrHI7u6unmfo
      9u3b77S6SAghTotMAu8zMjLC/fv38fv9bG1tUV9fz927d5mZmdFfk0wmAdjc3CSVSpFIJDAY
      DOzt7elbRGqaxt7e3ml9DCGEeCfSA9jn3r17OJ1O7t+/T1dXFy6XSw8M2h8vZzKZaGxsZGZm
      hrq6Ov3n8/PzGI1GzGaz3lsQQoizShqA/zKbzTx69AiLxUJ9fT2NjY08evSIpaUlWlpaUFVV
      j/wzGo00NjYyMTHBb3/7WwAsFgtms5lIJEIqlToTEYJCCPEm5y4VxP9CURTK5fKBofCaplEu
      l18Lvy4Wi1gslldWCUkqiINJKojDSSqI10kqiINJKogfiMlkOvQLPihxHHDgDcQAdHrffmM5
      A/VaCHGOSANwQi7V2k+7CEII8YrTHwcQQghxKqQHcAI04NHm2zeF/6TZhUnGgYQQJ+RcNgDx
      eBwAr9eLqqpsbW3R3Nz8g06MporvsCxUQ1JBCCFOzLkcApqammJ4eBhN00in0/z1r3+lWCxS
      LBYJh8PkcjlUVaVQKJBMJlEUhWg0Sjwe11eLRKNRMpkMiqIQiUTIZDKoqko0GiWRSCCLq4QQ
      Z9257AG4XC4SiYS+Ifzly5cB+O677zCZTORyOQYHB3n8+DFms5muri7W1tZQFIXBwUGCwSCp
      VAqfz0c+nyeTyVBXV4fJZGJ7e5tiscjg4CANDQ2n/EmFEOJw57IHANDe3s7KygrJZJK6ujo0
      TSOfz3Pnzh3q6+vZ29vDYDDwy1/+kvX1dX7+859z8+ZN1tfXCYVC3Lt3j+7ubmKxGPfu3ePK
      lSvs7e3xySefMDAwwO7u7ml/RCGEeKNz2wDU1NSwtbWF2+0GXq7rVxQFRVHIZDLYbDYaGhow
      Go1YrVbS6TTpdBq73Y7BYKBYLAIvA3bK5TKKomAwGCiVSuRyuTMRxCOEEG9yLu9Sfr+f2tpa
      WltbaW5uJhKJYDab6e3tZXh4mPr6epqamvQIyBs3bvDw4UPMZjM3btygoaGBhw8f4vf7GRoa
      4l//+hcNDQ309/czMTGBxWLh+vXrp/wphRDizSQVxD6VjV0MBsNr4eaqqr7y8/2nbf97vv86
      kFQQh5FUEIeTVBCvk1QQB5NUEMfkoBt/xfdvmPtft//vB91YDcCtFtdbj/8D3/uFEOIV0gCc
      EI/19J8UhBBiPxkCOgGVCeOz4KAhqtNSqXpnpSxv2tf5pFWGFU+boihnYpgDzlZZztp19L51
      V3oAJ+SsjC2XSiV9T4PTpigKwJm4qFVVRVGU9xpH/SGclZtdsVg8U3XXbDafiZtuuVzGaDSe
      metI07T3mjM6/dILIYQ4FdIDOAFn4Umuwmg0noknKDgbQz8VBoPhTDzNVZyVc3PW6u5Zcdau
      o/cti8wBCCHEOXV2mlQhhBAnyvT73//+96ddiPMiEAiwubmJ2+3Ws48ajUZ2d3fxeDzHdpxo
      NMra2hqJRAKXy0U2m2VhYQF4mQgvGAwSCARwOBwYDAaSySR2u51gMIjL5TqWrq2qqmxvb6Oq
      Kna7nXw+z4sXL8jlclRVVZHJZFhcXKRYLOLxeAiFQqysrGCz2bBYLESjUZxOJ3t7e1gsliMN
      RWiaRjgcJp1O43a7yWazrKysEA6HsdlsaJrG4uIiqVQKr9dLPB5neXkZAIfDQTgcxuVyEYlE
      Dt0K9F0pisLKygqbm5v6Z11dXSUUClFVVQXA4uIi+Xwej8dDOBzWz4vVaiUSieB0OgmFQpjN
      5vcOFtM0jd3dXVZXV8nlcni9XgKBAMFgkGw2i9vtZmdnR68nVquVxcVFwuEw1dXV5HI5PRhq
      b29PT6nyvmXZ3t4mEAiQyWSorq5+5TtwOp1EIhGWl5exWq3Y7XbW19cJBoO43W5UVdXTtGxv
      bx+5Du/t7enXT1VVFYlEgrW1NaLRKF6vl2QyydLSEqqqvnY9mc1mve7u7Oxgs9mOPIxWLBZZ
      XV2lqqoKRVGYn58nm81SVVVFNptlaWlJv64q58lisWCz2d5aX6QHcEISiQTz8/OYzWYmJiYI
      BoNsb2/z/PlzQqHQsR5rYWEBRVFwOBwoisLo6CjV1dWMj48Ti8WYmZnBarUyPj5OOp1mYWGB
      3d1d5ubmjq0M29vbTE5Osrm5iaZpPHnyBKvVyosXL0gkEjx58gSLxcLCwoL+Wq/Xy8jICIVC
      genpaXZ3d5mZmTlygxSLxZiamuLFixcArK6ukslkcDqdmEwmZmZmKJfLbG5uEgwGGRkZwe12
      MzU1RSqV0v8cHR098jh0MpmkUCjg8XgYGRlhbW2NUChEPp9nfn6ehYUFUqkUi4uLbG9vMzEx
      oZ+XXC7H9PQ0oVCI6enpI5WlWCwSiUT0elEul5mensZms2Gz2fT6arfbGRsbY3l5mVgsppdt
      a2uLnZ0dnj17RiQSOdI50TSNcrlMTU0Ns7OzJJNJxsbGcDgcTE5Okk6nGR8fx+v1Mjo6SiAQ
      YGNjA1VVefbsGYlEguXlZRYWFtjc3DxSWeDlaqOqqip2dnbY3t5mdnYWQH9gGh0dxel0MjMz
      w+bmJnNzczgcDkZHRymVSszMzLCxscHi4uKR627l4eTBgwcUCgXGx8exWCz6A8zTp08xGo2s
      rKywvb3N2NgYNTU1jI2Nkc1mmZqaIhKJ8PTp0wPLIg3ACdna2qKnp4eenh6y2SylUomlpSV2
      dnbo7+8/1mOlUilSqRSAnt6gtbUVr9fL6uoq7e3tdHd3Uy6XKZVK7O3t8d1333H79u1jm2hr
      bm5mYGAAk8lEuVwmk8lw6dIluru72dnZIZvN0t3dTXt7O4FAgOrqalpaWrBYLJTLZeLxOKOj
      o1y9evXISzNramr45JNP9KefdDpNJpOhXC5jsVgIh8NcuXKFK1euEAgE0DSN9vZ2amtrSaVS
      ZDIZHj58yIcffnjktAg1NTV88MEHpFIpampqiMfjdHR00NXVRSKRIBAIcO3aNTo6OggEAng8
      HlpbW7HZbJRKJeLxOI8fPz7yebHZbPT19em9EKPRSCqVIpFIYLFYSCaT1NfX09HRQbFYZG1t
      jWvXrnHlyhV2dnZQVZWFhQXC4TAffPDBkc6J0WjE7/ezu7urJ1d0OBxcvHgRn8+n90xbW1ux
      2+0EAgG6u7u5dOmSvvdG5WFqaGjoyHXY5/ORSCSIxWJUVVWRSqVIp9P6sk9FUejs7MTv9xMI
      BKivr6e9vZ1SqQRAOBzmyZMnDA4OHjmdRywWIxqN0tHRgaqqJJNJenp66O7uZm9vT//3xYsX
      2djYwOl00tLSgtPp1PczGRkZ4erVqwcu55UG4ITsD9QwGAxomkYul/tBVjZcv36dpqYmvadR
      afmNRiOqqr5WjkKh8MrPj8P3nzb2l2H/zyplqPx/5c9isUi5XD6WVSjfL0t/fz9dXV2srKy8
      0usxGo2vlUXTNEqlEoVC4Vhy86iqyujoKJlMho8++ui18u3PK7V/fcb+81KJ5TiKyk1zfHyc
      Tz/9FKPRyGeffYbL5WJ4eJhcLqeXY/93VDlHmqaRzWaPbZWQqqr6WvZisXhgfQFeKcv+81a5
      lo5r+FJVVWw2G4VCgVu3buH3+3n06NErvZ399eSV3F+FwrEEFWqaxsTEBG63m2QySTQafeXY
      +wMpv38dVVSGmg/7nqQBOCENDQ0sLy8TjUYxGAxYrVYGBgbwer3HOvQCkMlkaGhooLGxEYPB
      QCqVIp/PE41GaWtrIxAIEI/HURRF7x3cunWL//znP6jqO2xd+Q4URdGf5iqVMhaLsba2xoUL
      F/Sx0q2tLRoaGojH4xSLRTKZDCaTCb/fz82bNxkbG9MDxo5alsqfqVSK2tpa2traUFUVj8dD
      MBhkaWmJxsZGSqUS2WyWSCSCy+XC6/Xy2WefMTIyoiewe1/xeJx4PM7Q0BCAPj4biUSw2Wz4
      /X59jqChoYFkMkmxWCSVSmE2m/H7/dy6devI56VUKjE1NcXdu3f1ORqDwUBbWxtutxuHw0Eo
      FCKVSqFpGo2NjSwtLREIBKitrcVkMjE4OIjL5dKH1t6Xoijk83kGBgbweDyUy2WSySTJZJKd
      nR18Ph+pVEo/D/X19WxubhIKhfT07BcvXqS7u5vJyckj78aXTqe5fPkyzc3NBINBcrkcjY2N
      NDU1USwW9TmHvb096uvrCYVCpNNp/bjNzc0MDg7y5MmTI19PnZ2dWCwWcrkc+Xxev242Njao
      ra3FbrcTCoUIBAI0NDTo5ymZTGK1Wrlw4QJ37txhbGzswLork8AnxOl0kkwmWVlZ4eOPP8Zu
      t+N0Ouno6CASieD3+4/tWFtbWzx//hyn00lfXx/V1dWMjY3R1dVFW1sb+XyexcVF/QK2WCw0
      NTVRKpWorq4+lqe6tbU1Njc3yWQyGI1Gent7GR8fp6amhs7OTrxeL9PT01y4cIGenh4MBgNP
      nz5lcHCQqqoqTCYTra2teuSn3W5/77Ls7u4yPz9PqVSiVCphtVp5+vQphUKBgYEB/H6/Pi/S
      19eHx+NhcnKSrq4uGhoaMJlMNDQ0UF1dTT6fP9KEZzKZJBKJsLW1pQ+LBQIBYrEY165do6mp
      idnZWbxeL729vZhMJiYnJ7l69ar+3bS0tOi9EYfD8V7lKBaLegO8ublJc3Mzc3NzLC0t0dPT
      Q3t7u754YGhoiLa2NhYWFkin0/rwk9PppL29nUgkgs/ne+9zomka8/PzvHjxAqfTSW9vrz4H
      c/HiRRobG7FarUxMTNDf309nZye7u7tsb29z7do1fYK8q6uLWCxGTU3Nkerw8vIyc3NzlMtl
      BgYGCIVCzMzM4HK56O3t1etHZSi1ssDh2rVruFwujEYjnZ2dlEol7Hb7e0dSGwwGamtr8fv9
      VFVV0dbWRktLC6Ojo7jdbrq7u6mpqWF6eprq6mp6e3tfOU+1tbUYjUaam5v1xQ7fry8SB3CC
      DurS/9DHOmgo4STL8f3y7D/mQWU86fIcVJaD/n1aZTmNOvP9Y5/EOXlbHX1b2U6yLPtfc9J1
      913L8q7lkQZACCHOKZkDEEKIc0oaACGEOKekARBCiHNKGgAhhDinpAEQQogfuUrw2n6VgL03
      kf0AhBDimKyvr/PNN9/wxRdfYDKZ+PLLL+nv76evr++t79U0jW+//Zbp6WkAGhsb+fzzz/U4
      gkr6jcuXL7/23u+++47a2lr9OCMjI4yNjXH9+nVu3rx56DGlARBCiGOyubnJP/7xD27cuIHJ
      ZGJ4eBir1UpdXR2PHz+mqamJ/v5+5ubm6O7uZm1tjStXruhpI/r7+4nH46yurvKzn/2MRCLB
      t99+S0dHBz6fjz/84Q988cUX3L59m4mJCbLZLLdv32Z3d1df9z83N8dXX33F7373O1RVJRQK
      8fjxY+rq6rhx4wbT09Osr69z69YtGQISQojj9NFHHzE5Ocny8jI9PT0AemK5v/3tb2SzWYaH
      h/nTn/70Sq4ug8GA1+vF5/Ph9Xrx+/385S9/IZPJ8Pe//53NzU1MJpOeTl5VVTY2Nvj6669f
      Of7U1BS/+tWvaG1tpaOjg1QqhcPh4Ouvv2Z+fp4///nPelpraQCEEOIYdXd3s729zdLSEq2t
      rcDL9CyTk5N6Co5bt27x4sULPvzww0MjdkulErlcjs8//5y+vj7y+bye26dcLjMxMUEkEmF3
      d/eV99ntdj0bMLxMzT41NUU+nycej3Pz5k3++c9/kkwmZQhICCGOk9lsxu12E4vFqKurI5FI
      8OLFC1paWtjY2KBYLPLgwQNu377N8PAwfr+f5uZmfWy/0iBYLBaqq6v58ssvWVpa4u7du1y4
      cIGvvvqKhoYGisUiTU1NJBKJV95369Yt/vjHP1IoFLhw4QLLy8v4fD7S6TSlUgmv14uiKMzN
      zUkqCCGEOC6VrLaVTW4cDgflchlN01hYWNCTukWjURobG9ne3sZiseDxeKitrQVebh6VyWRo
      amoiEokwPT1NfX09H3zwAeFwmJmZGT7++GNmZ2cxm834fD59Ix+v1wvAxsYGq6urenbXubk5
      vF4vzc3NLC0tkU6nGRoakgZACCHOK5kDEEKIc0oaACGEOKf+HyJMMBHOrtxoAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Total Policies by Compliance 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Policies by Compliance 10 Countries (2)' width='192'>
      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
      83+hXXf67PIluQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Policies by Compliance HIghest Death Countries' width='192'>
      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
      xQZfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Policies by Compliance Lowest Death Countries' width='192'>
      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
      fwNzouwHK0OegwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Policies by country level 10 Countries (2)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Total Population &amp; Population Density of top countries with highest and lowest deaths' width='384'>
      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
    </thumbnail>
    <thumbnail height='328' name='Types of Policies per Country' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAFICAYAAABZfClmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3debTP1f7H8ecxz8K5pnSM4SKZp0hSN0N1cVsylChRJLlikfgptHDTlVAk
      YVVIyVRxRZEhlDLcg0u45jHzeAy/P1rvu9fn2zmd7xn4ntN+Pf75rnO+38/nsz/fY3nv997v
      vT9R169fv46IiHgnQ6QbICIikaEAICLiKQUAERFPKQCIiHhKAUBExFMKACIinlIAEBHxlAKA
      iIinFABERDylACAi4ikFABERTykAiIh4SgFARMRTCgAiIp5SABAR8ZQCgIiIpxQAREQ8pQAg
      IuIpBQAREU8pAIiIeEoBQETEUwoAIiKeUgAQEfGUAoCIiKcUAEREPKUAICLiKQUAERFPKQCI
      iHhKAUBExFMKACIinlIAEBHxlAKAiIinFABERDylACAi4ikFABERTykAiIh4SgFARMRTCgAi
      Ip5SABAR8ZQCgIiIpxQAREQ8pQAgIuIpBQAREU8pAIiIeEoBQETEUwoAIiKeUgAQEfGUAoCI
      iKcUAEREPKUAICLiKQUAERFPKQCIiHhKAUBExFMKACIinlIAEBHxlAKAiIinFABERDylACAi
      4ikFABERTykAiIh4SgFARMRTCgAiIp5SABAR8ZQCgIiIpxQAREQ8pQAgIuIpBQAREU8pAIiI
      eEoBQETEUwoAIiKeUgAQEfGUAoCIiKcUAEREPJUp0g0QSc/Onz8PwJUrVwDInj07AJkzZ45o
      e/bt2wdAiRIlAMiSJctNuf6hQ4cAuHTpEgDFixdP0fm2b98OQIECBQDInz9/is5nDh8+DMDS
      pUsBuHz5MgBPPPFEqpw/vVAGICLiKWUAIilgPcZdu3YB0LVrVwCefvrpVL1ObGwsAN988w0A
      3bp1i/dz69atA6B3794AzJw5E4DSpUuHdZ0mTZoAcPz4cQAyZPi1j3jrrbcCULduXQC6d+8O
      QI4cOQLHjxs3DoCtW7cCMGvWrLCum5DHH38cgE6dOgHu+02us2fPAtC+fXsAbrnlFgAqVKiQ
      ovOmV8oAREQ8FXX9+vXrkW6ESHqzd+9eAFq2bAm4nvOePXsAmDZtWqpe7/PPPwfgzTffBOBf
      //pXvJ+7cOECAEePHgWgSJEiQPhzEg888AAAjRs3BuCee+4B4D//+Q8A77//fuC8dp+WKVjm
      YHMihQoVCuu6CbHv2XrquXPnTtH51q9fD0CXLl0A+OKLLwAoWLBgis6bXikDEBHxlOYARJLh
      22+/BaBkyZIAtG7dGoCnnnoKgGPHjgEQHR0dOG7UqFEAREVFBT63du1aACpXrgzAwIEDAVi9
      ejUAkyZNAuD06dMAPPnkk4HzvvHGGwD88ssvAAwdOhSAsWPHAkmvSrrtttsAqFWrVuC1WrVq
      gJv7sEzEMqAlS5YAsHv3bgD69u0LwIkTJwAYMWIEAJs3bwYgW7ZsADRs2BCAHj16BNrx1ltv
      AdC8efPA55L6PW7atClwPtOvXz/AZTD2Pducy/DhwwHYuXMnALfffjsA/fv3B6Bs2bKAq756
      7rnnAHj55ZcBWLRoEQDfffcdAFOnTg20/+LFiwDs378fgB07dgTu0+7jww8/DFzH/v4tWrQA
      4ODBgwCMHj0acHMw165dA6Bp06YAdO7cGYCTJ0/+et+IiIiXlAGIJMPy5csBqFevHgCVKlUC
      3Bj1ihUrANdDM9aTtB7pgw8+CEDHjh0BGD9+PACLFy8OnNderad7//33B85rdf7WQ9y4cSMA
      cXFxyb3FeFm1TJkyZQDYsmUL4DKAAwcOAO4+zXvvvQe4+7YqIusBr1q1Kt7rWU+8du3agd8n
      9Xu0DKZq1aqAq9q67777AJdJ2Pf3/PPPA26uw36eM2cOAD179gz8bD1t+97tfr/++msAGjRo
      EG/7bZ3DX//6V8BlFB988EHg/ps1awbA999/H7g/O84ygKxZswJujsPWZVhmU7FiRQBq1qwJ
      KAMQEfGWMgCRJDhz5gwAP/74I+DGYm0MuU6dOoDLEEIzAGPVQ7169Qr8ftmyZYDrSdvcgp13
      zZo1ALRt2zZJ7bbzWY/Q2EpdW2kbrj/96U+Ay0gSY99bvnz5ADe2XaxYMQBatWqVpOubcL9H
      WxFt1U2zZ88G4NFHHwUgY8aMgMsYbIz8o48+AlyVkP0drL0252CZhbG5G6uSsowplI3NW0Zk
      mYRlAPZ7yzQtQ7C5BsvwbG7GXq9evQq4uYWVK1cGXm2OQRmAiIinlAGIJIGNVVsPy6pgbIWu
      9bCtbt72mAl3Lx7riaY2WxFs1STGqlUSylQSYveZUM82VLt27QDo06dP4HpWRWUrfW2sO6WS
      +z1axlC4cGHgt+sDYmJiALcuwcbeQzOAwYMHA+F/P8YyyXDft7kL29toyJAhgJsbyZMnDwCn
      Tp0KtP9/50tS60RE5A9DGYBIEtjYvvUQQ8fArQrIdsO0vXnuuuuuFF3Xenq2wjaprL7+2Wef
      Dfw+qesDfvrpJ8BVsTzzzDNhHVeuXDnAVc1Y9dC8efMA12O2nrRV39xsNkdhK6mtKsj2PLK5
      AetRWyYQKrV2LQ2Xrfew9RYLFiwA3L/HQYMGxXucMgAREU8pAxAJg4352xyAVWH87W9/i/fz
      jz32GOAyhpRmALYC1VYCW7VKlSpVANdzTUimTJkCr4mxPY3sfrdt2wbAlClTAFdP3qhRo7DO
      ZytgrUrFjrd1AJ9++ingetyRUr16dcBlXO+88w7g5jDs/i1zsu8/0qx6yFaeW/ts7yNbeW3V
      V0YZgIiIp5QBiIRhw4YNgKtnT6xHX79+fcCNxRrrWSYmtNrDMgDrcQ8YMABwPb8vv/wy3uOS
      ytpn+/hbz9z2BnrooYcA9zyC0Puxn0PbYT1928/f5jKs/Vb9U6pUqSS1MzEJVc0kxJ578OKL
      LwJuzx5bD2DVXLaHkFUJnTt3LknXSen7oWw9hO29ZP/+bP2D7bkUel5lACIintLzAETSIatC
      sbmJm111kly2LsLWEViVSmJzGJFiz1ewFbW2ctl61GmNrQy26rTEqqmUAYiIeEoZgIiIp5QB
      iIh4SgFARMRTCgAiIp5SABAR8ZQCgIiIpxQAREQ8pQAgIuIpBQAREU8pAIiIeEoBQETEUwoA
      IiKe0vMAROQ3mjRpAsDx48cB6NWrF+CejBXq3XffBWDixImA24fenisgaZMyABERTykDEJHf
      sE2Cbf/7FStWAAlnACtXrgSgZMmSgHvil6RtygBERDylDEBEEmTPIJ4+fToA58+fByBHjhwA
      nDhxAoBt27YB0L59ewCWLl0a7/l++uknAEaOHAnA3r17AahatSoAgwcPBtwTzg4ePAjA6NGj
      Adi6dSvgniXctGlTADp37gy4Z/Zau0aMGAHA5s2bAfckr4YNGwLQo0cPABYuXAi4TGbIkCGB
      dn/xxRcAfP/99wAMGjQIgOXLlwMwb948AF566SUAhg0bBkDp0qUB9wzlpN7/Dz/8AMC4ceMA
      9yS1QoUKAdCpUycA7r77bpJDGYCIiKeUAYhIgsqUKQNAdHQ0AOvWrQNcD3r16tUAVK5cGXDP
      +A119uxZwFUT1ahRA4AOHToArnrIesbDhw8HXAaQNWtWALp06QK4nvCkSZMAqFixYqBd7733
      HgCbNm0CoHv37gBcvHgRgFWrVgXad/ToUcBlGKGOHDkCuEzHWJVUbGwsAP369QNg3759ANSu
      XTtF9z9gwAAAKlSoALg5mJ07dwKwa9cuQBmAiIgkkTIAEUlUgwYNADdGbj1t+7l+/fqAG5sP
      ZZ+7cOECAK+88grg5hKs6ujVV18NnKdatWqB16tXrwKwf//+wHlD23XmzBkA8uXLB7gMxaqa
      WrVqFf7Nh8EyBBvz/+yzzwCXuSxatAgI//7tPu0+brvtNgDq1q0LwH333Zcq7VYGICLiKWUA
      IpIo6+EPHToUcD307777DoCnn34agGXLlsV7vI3ZW0/XqmKMVRfFxcUBrorH1hNYVY6N6efJ
      kweAU6dOARATExM4n42V9+nTB4AWLVoAbp2CVc80a9bsd+87XNYeG8O3nr9J6v2fPHkScFVK
      Y8aMAWDGjBkA1KpVC3BzCqVKlUpWu5UBiIh4ShmAiCTKqlZsTHrOnDmAq/qxvX8SygDy5s0L
      QIYMv/Y5u3btCkCmTPH/F2TntZ6/ZQQLFiwIvG/1+KHKlSsXaOeWLVsAV69v9fZWf59S2bNn
      D7yGSu79t2nTBoCHH34YcOsQrPrJvp/3338/We1WBiAi4illACKSKFthW7NmTQDGjh0LQPPm
      zcM63nraVt1idfi2ctjMnTsXgOrVqwNursHWIWTOnBmA9evXA26Fr1X5mKlTpwKuesjWCdg6
      gE8//RRwY+85c+YE3LqDHTt2AC7jsfUOyZXU+7f2vvPOO4DLBOrVqwfA2rVrAVizZk2K2qUM
      QETEU8oAROQ3oqKiAq/G1gPYHjj2c+hxoYoXLw64qhyrarE9huw4yzBMy5YtAejbty/gqpFs
      zsH29gm9rvX0bazdqokso7DqH6uesfUCNrZuPW4bu7/11lsBV8UTKqH7Nkm9f1shbHsHTZs2
      LXA+m2uwlcLJpQxARMRTUdcTCmkiIjeI9cRtLx2row+tnzdWH3/s2DEAihQpEtZ1Ll++DLg6
      fKuusR5/Qu2yvXyKFi0KJFytk1xJvf/Tp08DrhrKdgO1DCi5lAGIiHhKGYCIiKeUAYiIeEoB
      QETEUwoAIiKeUgAQEfGUAoCIiKcUAEREPKUAICLiqRQvb7P9qUVEJH1RBiAi4imtBJZ0beHe
      rZFugki6pQxARMRTCgAiIp5SABAR8ZQCgIiIpxQAREQ8pQAgIuIpBQAREU+l7oMuPXT+/HnA
      PUO0RIkSAGTJkgWAjRs3Au5Zng0bNrzJLRQRiZ8yABERT0UsA2jSpAkAx48fD/zees6lSpUC
      4PnnnwegZs2aN7F14Vu3bh0AvXv3BmDmzJkAlC5dGoClS5cCsHXrrytWlQGISFqhDEBExFMR
      ywBsC6KOHTsC0LhxYwAOHDgAwIwZMwD45z//CcBHH310k1sYnlq1agEwe/ZsAIoUKRLJ5oiI
      hE0ZgIiIpyJeBVS4cGEAypcvH3i1uYERI0YAcPbsWQDWr18PwLx58wB46aWXABg2bBjgxt67
      desGwFtvvQXAihUrAFeNU716dQC6du0KuOqdyZMnBz6fkPHjxwNw8OBBAIYOHQrA2LFjAcic
      OXOi9y4iEknKAEREPBXxDMB60FZNExsbC8D06dMBaN26NQC5cuUCXGZgn+vXrx/g6vBr164d
      OP/27dsBaNmyJQDZsmUD4IMPPgBg0qRJgOvB33nnnYHrmalTpwKQI0cOwPXwbR2A1fvHxcWF
      f/MiIhGkDEBExFMRzwCmTJkSeDW2DqBNmzbxHnfkyBHAjfl/9tlnAGTNmjXwuTFjxsR73NGj
      RwGXaRibG7DXJUuWAG7uwKqSMmbM+Lv3JSKS1ikDEBHxVMQzAFtB26xZMwB27NgBwIcffghA
      586dAVdnb/LkyQPAyJEjgd/2/M3rr78OuBW5NkafIcOvse/SpUvxHmeZglUXde/eHYCyZcuG
      eWciImmbMgAREU9FPAOwvX/y5s0LuLH37NmzA9ChQwcAdu7cGTjO3rfXUMuXLwfg448/BuC9
      994D4I477gi8379//8Bx165dA2DgwIEAVKhQAYB27dol8c5ERNI2ZQAiIp6KeAZg6wC2bNkC
      wP79+wGYO3cuANHR0YDrif/8889hnffq1auAq9cvWLAgAIcOHQJg4cKF8R43bdo0ADZt2gS4
      dQI2J2DsfCIi6ZUyABERT0UsA4iKigJ+uw7A5gRuu+02wK30zZQpU7zHJ+Suu+4CICYmBoDm
      zZsDbiVvtWrV4j2PVRtdvnwZcHMQoebPnw+4aqKE2PkT+5yIyM2m/5VERDwVdd025v+Ds+cM
      FCpUCNBK3j+KhXu3RroJIumWMgAREU9FvAroZilatGikmyAikqYoAxAR8ZQCgIiIpxQAREQ8
      pQAgIuIpBQAREU8pAIiIeEoBQETEU96sA5A/pkwZfn9PKBFJmDIAERFPKQCIiHhKAUBExFMK
      ACIinlIAEBHxlAKAiIinFABERDylACAi4ikFABERT3mzEvjy5csAzJ07F4DGjRsDkD9/fgC2
      b98OQIECBQK/FxH5o4pYAHjhhRcAyJ07NwBDhgy5ode7dOkSACNGjACgQoUKgPuP/vHHHweg
      U6dOAHTt2vWGtkdEJNI0BCQi4qmIZQDXrl0LvEbarFmzALjlllsi3BIRkZtDGYCIiKfS3CTw
      8uXLAfjkk08AqFSpEgALFiwAIGfOnAD07NkTgDp16gSO37t3LwBvvPEG4CZ3ixYt+rvXfeut
      twBo3rw5AA0bNgTg4MGDAIwePRqArVu3Ai5zadq0KQCdO3cGIEuWLOHdqIhIhCkDEBHxVJrL
      AI4fPw7A6tWrAciU6dcmtm3bFoD58+cDMHnyZMBlAFeuXAFcZpAxY0bAVfX88ssvAKxfvz7e
      68bGxgJQu3btwO8tA8iaNSsAXbp0AeDQoUMATJo0CYCKFSsCLnMQEUnrlAGIiHgqzWUApmDB
      goAbyzfWs582bVrg9z/++CMAe/bsAWDOnDkAFCtWDIAzZ84AMGHChCS1o1q1aoHXq1evArB/
      /34AVq5cGXhVBiAi6YUyABERT6XZDCAhGTLEH7P27dsHQL58+QDX80+pw4cPA26l8qZNmwDI
      kycPAKdOnQIgJiYmVa4nInKzKAMQEfFUussAEpItWzYATp48GXhN6cresWPHAnDixAnArUew
      PYwGDRqUovOLiESKMgAREU/9YTKA8uXLB36eOHEiAE8++SQAq1atStZ5bcVvdHQ0AJkzZwbc
      eoLNmzcDULly5WSdX0QkUpQBiIh4Ks1mAFFRUUn6fcmSJQHo0KEDAFOnTgXg448/BtyeQomd
      J1TLli0B6Nu3LwD169cHoESJEoCbewj3fCIiaYUyABERT0Vdv379eqQbcSNYff65c+eAxHcD
      TUxcXBwAx44dA6BIkSIpOp+kjq/2b4t0E0TSLWUAIiKe+sNmAOIHZQAiyacMQETEUwoAIiKe
      UgAQEfGUAoCIiKcUAEREPKUAICLiKQUAERFPaR2AiIinlAGIiHhKAUBExFMKACIinlIAEBHx
      lAKAiIinFABERDylACAi4ikFABERTykAiIh4KlOkG5DenD9/HoB9+/YBUKJECQCyZMkSqSaJ
      iCSLMgAREU9FLANo0qQJAMePHwegV69eALRr1y7ez7/77rsATJw4EXA971mzZt3IZv7GunXr
      AOjduzcAM2fOBKB06dI3tR0iIimlDEBExFMRywBsE9JixYoBsGLFCiDhDGDlypUAlCxZEoAr
      V67c6CbGq1atWgDMnj0bgCJFikSkHSIiKaUMQETEUxGvAmrUqBEA06dPB1yVTY4cOQA4ceIE
      ANu2bQOgffv2ACxdujTe802ePBmATz75BHCZQosWLQB49tlnAdi1axcAQ4cOBaB79+4AVK9e
      HYBly5YF2jVq1CgADh8+HDhu7NixAGTOnBmAPXv2APCPf/wDgC1btgBQuHBhAIYMGQK4TCY2
      NhaA4cOHA7Bz504Abr/9dgD69+8PQNmyZeO9XxGR5FIGICLiqYhnAGXKlAEgOjoacFU2DRs2
      BGD16tUAVK5cGYDcuXPHe56vvvoKgEmTJgHw1FNPAZAp06+3OGHCBADKlSsHQOPGjQHXM3/t
      tdcAV21kP7dt2xaAnDlzAi5D2bhxIwBxcXEAXLp0CXAZRqFChQB48cUXAZdxnDlzJnCe559/
      HnBzCfbznDlzAOjZs2fg56xZs8Z7/yIiSaUMQETEUxHPAEyDBg0AV+1jGYD9XL9+fQCuXbsW
      7/ELFy4EoE6dOoDLAMyGDRsAN3dgGYD10B955BHAVSFZD75Dhw5htd/aaXMWH374IQC33HJL
      vJ9fvHgxACdPngTgo48+AqBgwYKB+2jVqhUAa9euBdz3JCKSUsoAREQ8lWYyAOvhW3WN9fS/
      ++47AJ5++mnAVeeEOnToEABHjhwBoGPHjoH3Dx48CEBMTEzg9/nz5wegTZs2gFtp3K9fPwAy
      ZAgvRtreQLfeeiuQcM/fHDhwAHBzENbzN9ZOO4+1X0QktSgDEBHxVJrJAGrUqAG4KhmrerGq
      H9v7J6EMwHrKuXLlAn47B2BCq4isGmf+/PmAq/aZMmUKAHfffTeQeCZgVUy2t5GtP7AqpFD5
      8uUD4OjRo4F22PoHmxs4depU4P5ERFKLMgAREU+lmQzA9tOvWbMm4FbYNm/ePKzjbQXv+++/
      D7ietfXgd+/eDbiVueXLlwdg9OjRAGTPnj1w3cceewyAGTNmAAnvUWQsg7l8+TIAY8aMAaBT
      p06AWyFsPX9rb1RUFADvvPNO4DqWgdgK4ypVqvzu9UVEkkoZgIiIpyKWAVjP116N1bkvX748
      8HPocaFsxe7WrVsB+L//+z/A7TpqY+tWTWQrjufOnQu4zKF48eKAW9E7fvx4AO655x4g4bkA
      q+KxvX6GDRsGuPp+G8O3PYKqVq0KuHUItteQfd4yIqtGCq0SEhFJKWUAIiKeirpuXeQ/mIsX
      LwJw9uxZwNX7h1vXn1L2tf7yyy+B6yeUwVy4cAGA/fv3A+45CdmyZbuh7RQRfykDEBHx1B82
      AxARkd+nDEBExFMKACIinlIAEBHxlAKAiIinFABERDylACAi4ikFABERT6WZ3UBFkmPJ/m2R
      boJIuqUMQETEUwoAIiKeUgAQEfGUAoCIiKcUAEREPKUAICLiKQUAERFPKQCIiHhKAUBExFPe
      rQQ+dOgQAJcuXQKgePHikWzO/+zcuROArVu3AtCsWbMbcp3z588DsG/fPgBKlCgBQJYsWW7I
      9UQk7VIGICLiqYhlAHXr1gVg4MCBQMI93nvvvReAXr16AfDQQw+l6Lrjxo0DXE971qxZgfdn
      z54NQL58+QBo1KhRiq4Xrp9++gmAyZMnA4lnAK+//joAP//8MwBvv/124P1FixYB7vudOnUq
      AEeOHAGgd+/eAMycOROA0qVLp+wGRCTdUQYgIuKpiGUA169fB+DatWu/+7nE3k+qF154AYAr
      V67E+/63334LQJEiRYCblwEklX1/9mpOnz4NwKhRowB45JFHAPjzn/8MuDF/y3TsPkXEP8oA
      REQ8lW6rgKyHGxUVBcCxY8cAWLt2LQCVK1cG3Bi4jekvWbIEgN27dwPQt29fAF555RUANmzY
      AMDmzZsBN1dQqlQpAF5++WXAjdmPHDkSgL179wJQtWpVAAYPHgxA/vz5A+3+6quvADcmbz32
      HDlyJOn+E/Lmm28CkDFjRgC6d+8eeP/gwYMADB06FICxY8cCkDlzZiD53+vFixcBGD9+POAy
      qaxZswJwxx13AFCxYkUAWrRokbIbFZEUUwYgIuKpdJsBWN38pk2bAHjwwQcB6NixI+B6oosX
      LwagdevWABw4cCBwvKlTp07gfNaztSqk6OhoAM6ePQu4qqQaNWoA0KFDBwAmTpwIuMxg+PDh
      AMTGxgLQv39/AO6///7Adb/++msAzpw5k4RvwX1+3rx5gdcRI0YAkDNnzsDnbR3Axo0bAYiL
      iwu8n9zvdcyYMQAsWLAAgCeeeAJw39uECRMAKFCgQJLuT0RuHGUAIiKeSrcZgGnZsiXgeuRm
      2bJlgOvxJ+aBBx4AYOHChYCrjmnbtm3gc1Zff+HCBcDNHdgYvlXlvPrqq4CrYpo7dy4A5cuX
      B+C1114LnNeqkrZv3x5We822bdsC1ytYsCCQ8uqlpH6v1vN/5plnAGjXrl3gfctMRCTtUAYg
      IuKpiGUAVmUSOgZtrCd99erVwOfDZVUwqc32ErL2devWLfC+jbHbfZ04cQJwVUKVKlVK1fZY
      VU3Xrl0Bt87BVjjbGH1qCf1ez507B7j7LlOmTKpeT0RuHGUAIiKeilgGYNUgVk9vY87GxsJt
      rP1mV48ktFI4b968AGTI8GvstJ53pkzxf5W5c+cGIFu2bADs2rUrVduZPXt2AOrVqwe4OQur
      72/QoAFw41b8WpVRTEwM4P6etWrVuiHXE5HUowxARMRTEcsAqlSpAsDy5csBV0VSsmRJwNWN
      Ww/XqmdutLJlywLw5ZdfAm7FsPXkbaWvzU2sWrUKgPbt2wfOY1U/1atXB6BChQqA2+3TVgTb
      ytoffvghVdr/7LPPAq5aZ9iwYYDLCG6U+vXrA7/dddSqoP79738DULNmzcBx06dPB1zGN2jQ
      oMD7tm7Cdo99+OGHU73tIr5SBiAi4qmIZQA9evQAYM+ePYDbO8dYXf2AAQMAtzLXhFsVZGP1
      oceF/t40adIEcHsG2W6a1lO3HnyfPn0AtwLWerJ2/tCerlXjWM+8X79+gXYkt3om9D5srsF6
      0jZH8fnnnwMuw0pIcr/X5557DnD3YRlOuXLlAChatGi8x23ZsgWANWvWxHudb775BnB/f2UA
      IqlHGYCIiKeiroduKH+T2eVtzNjqyosVKwZE/lm11i6bA7A5CWNj3MePHwcgT548gNsFM5Td
      r+3KmStXrsBx6dV///tfwFUb2d/Nnj3cqlUrwM3t2FxKSi3Zvy1VziPio4gHAPljePLJJwG3
      fbaVhVrZ65133gm4zfJSiwKASPJpCEhExFPKACRV2NCdLQQ7efIk4IZ6bBI4tSkDEEk+ZQAi
      Ip5SBiDpmjIAkeRTBiAi4ikFABERTykAiIh4Kt0/ElL8duVapFsgkn4pAxAR8ZQCgIiIpxQA
      REQ8pQAgIuIpBQAREU8pAIiIeEoBQETEUwoAIiKeUgAQEfGUdyuBDx06BMClS5cAKF68eCSb
      8z87d+4E3BO1mjVrlqTjT58+DbhHMdrD4UVEEqIMQETEUxHLAOrWrQvAwIEDgYR7vPfeey8A
      vXr1AuChhx5K0XXHjRsHuJ72rFmzAu/Pnj0bgHz58gHQqFGjFF0vXPYkrcmTJ3j1u8wAAAU/
      SURBVAOJZwA7duwA3Pe3fft2ADJl+vVPWqFCBQA6duwIwN133w3AlStXABg9ejQA7dq1A1Lv
      iV03+vwiknqUAYiIeCpiGYA9iOzatd/fzjGx95PqhRdeAFxPNdS3334LQJEiRYCblwEk1ZAh
      QwA31j9lyhQAsmbNCsDKlSsBOHLkSOA4+z5nzJgBuAwrtXroN/r8IpJ6lAGIiHgq3VYBjRo1
      CoCoqCgAjh07BsDatWsBqFy5MuDGyG1Mf8mSJQDs3r0bgL59+wLwyiuvALBhwwYANm/eDLi5
      glKlSgHw8ssvA27MfuTIkQDs3bsXgKpVqwIwePBgAPLnzx9o91dffQXA1KlTAVe9kyNHjiTd
      v12vQ4cOAFSqVCnw/u233x742TIBu1/z2muvAZAnTx4A2rRpA8Add9wBuLF8+x6sh9+0aVMA
      OnfuDMDJkyeTdP6//OUv4d2oiNwwygBERDyVbjMAq5vftGkTAA8++CDgql7Gjx8PwOLFiwFo
      3bo1AAcOHAgcb+rUqRM4n2UMNoYdHR0NwNmzZwFXlVSjRg3A9cQnTpwIuMxg+PDhAMTGxgLQ
      v39/AO6///7Adb/++msAzpw5E9b9V69ePXC948ePA9CyZUvAZSwmV65cgfuxDKd27doAFCtW
      DICYmBgADh48CLg5hS5dugBuHcWkSZMAqFixIgA1a9ZM0vlFJPKUAYiIeCrdZgDGerzWIzfL
      li0DXI8/MQ888AAACxcuBFwVUNu2bQOfW7RoEQAXLlwA3NyBjeFbddOrr74KuDHzuXPnAlC+
      fHnAjY0bq0qyev7EDBo0CHBj9J9++ikA06dPB6B+/fqB9uXNmxdwY/BjxowBoHHjxgBUq1Yt
      3uvY769evQrA/v37AVdlZK8NGzZM1vlFJHKUAYiIeCpiGYBV78TFxcX7vvWkredpnw9XxowZ
      U9C6hNkYuLWvW7dugffPnz8PuPs6ceIE4Kp2Qqt1kit37tyAq3Lq2bMnAAsWLADg7bffBlxP
      3D4XrsOHDwNuvYHNjVg1z6lTpwCN6YukZ8oAREQ8FbEMoECBAoCrp7exfGNj4TbWbp+/WRJa
      KWxj6Rky/Bo7u3btCrg9eEJZT91W7O7atStV2mcZiGVG1jO3vXf27NkDuGqchCR0n2PHjgVc
      BmOZhd2PzUEkJqHzi0jkKQMQEfFUxDKAKlWqALB8+XLA9TBLliwJwIQJEwDInj074KpnbrSy
      ZcsC8OWXXwJuxbD1fG2lr81NrFq1CoD27dsHzmNVP1avb7tz2m6ftiLYViz/8MMPYbXP5hYe
      ffRRwK17sJW7NtewdOlSAOrVqxc43p4XYM9BsPu0dQP2vlUv2fqHzJkzA7B+/XrAZRbW/qSe
      3zIWWxdhu8M+/PDDgKtmskww3IxDRMKnDEBExFMRywB69OgBuLFq2zvHWF39gAEDALcy14Rb
      FWRj9aHHhf7eNGnSBHB7Bj3yyCOA6+laD75Pnz6Aq7KxHqud31bGGluJbOsT+vXrF2hHmTJl
      wrofq26yFbi20vjy5cuBz9WqVQtw1UGhLGOxsf758+cD8Pe//x1wczK2t4+tKyhRogTg5jQS
      +jskdn6bq/jmm28A9/e1DGDLli0ArFmzJt7zi0jKKQMQEfFU1HUrJ4kQu7ztVnnu3DnA7R1j
      Y8aRYu2yOQCbkzA2Vm578djYtu2hE8ru1/basT167Liksuvbbqh2vnB3F7U5haNHjwJQuHBh
      wGUm9r6d31ZIhyux86fUor3bUuU8Ij5SBiAi4qmIZwAiKaEMQCT5lAGIiHjq/wEuy0vXCFbm
      jwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
